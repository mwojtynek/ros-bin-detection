/// autogenerated analytical inverse kinematics code from ikfast program part of OpenRAVE
/// \author Rosen Diankov
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// ikfast version 61 generated on 2014-11-14 12:40:03.539669
/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp
#define IKFAST_HAS_LIBRARY
#include "ikfast.h" // found inside share/openrave-X.Y/python/ikfast.h
using namespace ikfast;

// check if the included ikfast version matches what this file was compiled with
#define IKFAST_COMPILE_ASSERT(x) extern int __dummy[(int)x]
IKFAST_COMPILE_ASSERT(IKFAST_VERSION==61);

#include <cmath>
#include <vector>
#include <limits>
#include <algorithm>
#include <complex>

#define IKFAST_STRINGIZE2(s) #s
#define IKFAST_STRINGIZE(s) IKFAST_STRINGIZE2(s)

#ifndef IKFAST_ASSERT
#include <stdexcept>
#include <sstream>
#include <iostream>

#ifdef _MSC_VER
#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __FUNCDNAME__
#endif
#endif

#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __func__
#endif

#define IKFAST_ASSERT(b) { if( !(b) ) { std::stringstream ss; ss << "ikfast exception: " << __FILE__ << ":" << __LINE__ << ": " <<__PRETTY_FUNCTION__ << ": Assertion '" << #b << "' failed"; throw std::runtime_error(ss.str()); } }

#endif

#if defined(_MSC_VER)
#define IKFAST_ALIGNED16(x) __declspec(align(16)) x
#else
#define IKFAST_ALIGNED16(x) x __attribute((aligned(16)))
#endif

#define IK2PI  ((IkReal)6.28318530717959)
#define IKPI  ((IkReal)3.14159265358979)
#define IKPI_2  ((IkReal)1.57079632679490)

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#endif // _MSC_VER

// lapack routines
extern "C" {
  void dgetrf_ (const int* m, const int* n, double* a, const int* lda, int* ipiv, int* info);
  void zgetrf_ (const int* m, const int* n, std::complex<double>* a, const int* lda, int* ipiv, int* info);
  void dgetri_(const int* n, const double* a, const int* lda, int* ipiv, double* work, const int* lwork, int* info);
  void dgesv_ (const int* n, const int* nrhs, double* a, const int* lda, int* ipiv, double* b, const int* ldb, int* info);
  void dgetrs_(const char *trans, const int *n, const int *nrhs, double *a, const int *lda, int *ipiv, double *b, const int *ldb, int *info);
  void dgeev_(const char *jobvl, const char *jobvr, const int *n, double *a, const int *lda, double *wr, double *wi,double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info);
}

using namespace std; // necessary to get std math routines

#ifdef IKFAST_NAMESPACE
namespace IKFAST_NAMESPACE {
#endif

inline float IKabs(float f) { return fabsf(f); }
inline double IKabs(double f) { return fabs(f); }

inline float IKsqr(float f) { return f*f; }
inline double IKsqr(double f) { return f*f; }

inline float IKlog(float f) { return logf(f); }
inline double IKlog(double f) { return log(f); }

// allows asin and acos to exceed 1
#ifndef IKFAST_SINCOS_THRESH
#define IKFAST_SINCOS_THRESH ((IkReal)0.000001)
#endif

// used to check input to atan2 for degenerate cases
#ifndef IKFAST_ATAN2_MAGTHRESH
#define IKFAST_ATAN2_MAGTHRESH ((IkReal)2e-6)
#endif

// minimum distance of separate solutions
#ifndef IKFAST_SOLUTION_THRESH
#define IKFAST_SOLUTION_THRESH ((IkReal)1e-6)
#endif

inline float IKasin(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(-IKPI_2);
else if( f >= 1 ) return float(IKPI_2);
return asinf(f);
}
inline double IKasin(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline float IKfmod(float x, float y)
{
    while(x < 0) {
        x += y;
    }
    return fmodf(x,y);
}

// return positive value in [0,y)
inline double IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline float IKacos(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(IKPI);
else if( f >= 1 ) return float(0);
return acosf(f);
}
inline double IKacos(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0;
return acos(f);
}
inline float IKsin(float f) { return sinf(f); }
inline double IKsin(double f) { return sin(f); }
inline float IKcos(float f) { return cosf(f); }
inline double IKcos(double f) { return cos(f); }
inline float IKtan(float f) { return tanf(f); }
inline double IKtan(double f) { return tan(f); }
inline float IKsqrt(float f) { if( f <= 0.0f ) return 0.0f; return sqrtf(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline float IKatan2(float fy, float fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return float(IKPI_2);
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2f(fy,fx);
}
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2(fy,fx);
}

inline float IKsign(float f) {
    if( f > 0 ) {
        return float(1);
    }
    else if( f < 0 ) {
        return float(-1);
    }
    return 0;
}

inline double IKsign(double f) {
    if( f > 0 ) {
        return 1.0;
    }
    else if( f < 0 ) {
        return -1.0;
    }
    return 0;
}

/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void ComputeFk(const IkReal* j, IkReal* eetrans, IkReal* eerot) {
IkReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61;
x0=IKcos(j[0]);
x1=IKsin(j[1]);
x2=IKsin(j[2]);
x3=IKcos(j[1]);
x4=IKcos(j[2]);
x5=IKsin(j[3]);
x6=IKcos(j[3]);
x7=IKcos(j[5]);
x8=IKcos(j[4]);
x9=IKsin(j[0]);
x10=IKsin(j[4]);
x11=IKsin(j[5]);
x12=((IkReal(0.000799999744000123))*(x7));
x13=((IkReal(0.0946500000000000))*(x2));
x14=((IkReal(0.999999680000154))*(x7));
x15=((IkReal(0.000799999744000123))*(x11));
x16=((IkReal(1.00000000000000))*(x4));
x17=((IkReal(0.0946500000000000))*(x4));
x18=((IkReal(1.00000000000000))*(x9));
x19=((IkReal(0.999999680000154))*(x11));
x20=((IkReal(0.102300000000000))*(x6));
x21=((IkReal(1.00000000000000))*(x6));
x22=((IkReal(0.392250000000000))*(x4));
x23=((IkReal(1.00000000000000))*(x2));
x24=((x3)*(x9));
x25=((IkReal(-1.00000000000000))*(x8));
x26=((x1)*(x9));
x27=((x0)*(x8));
x28=((x1)*(x2));
x29=((x0)*(x3));
x30=((x0)*(x10));
x31=((x2)*(x3));
x32=((x0)*(x1));
x33=((x10)*(x18));
x34=((x16)*(x29));
x35=((x16)*(x24));
x36=((((x1)*(x4)))+(x31));
x37=((((x16)*(x3)))+(((IkReal(-1.00000000000000))*(x1)*(x23))));
x38=((x36)*(x6));
x39=((x37)*(x5));
x40=((((x0)*(x28)))+(((IkReal(-1.00000000000000))*(x34))));
x41=((((x2)*(x26)))+(((IkReal(-1.00000000000000))*(x35))));
x42=((((x23)*(x29)))+(((x16)*(x32))));
x43=((((x18)*(x31)))+(((x16)*(x26))));
x44=((x40)*(x6));
x45=((x43)*(x5));
x46=((x42)*(x5));
x47=((x39)+(x38));
x48=((((x5)*(((((IkReal(-1.00000000000000))*(x1)*(x16)))+(((IkReal(-1.00000000000000))*(x23)*(x3)))))))+(((x37)*(x6))));
x49=((x47)*(x8));
x50=((((IkReal(-1.00000000000000))*(x38)))+(((IkReal(-1.00000000000000))*(x39))));
x51=((x50)*(x8));
x52=((x46)+(x44));
x53=((x45)+(((x41)*(x6))));
x54=((((x42)*(x6)))+(((x5)*(((x34)+(((IkReal(-1.00000000000000))*(x23)*(x32))))))));
x55=((((x5)*(((((IkReal(-1.00000000000000))*(x18)*(x28)))+(x35)))))+(((x43)*(x6))));
x56=((x53)*(x8));
x57=((((IkReal(-1.00000000000000))*(x33)))+(((x52)*(x8))));
x58=((x56)+(x30));
x59=((x33)+(((x25)*(x52))));
x60=((((x25)*(x53)))+(((IkReal(-1.00000000000000))*(x30))));
x61=((x11)*(x60));
eerot[0]=((((x10)*(((((IkReal(-1.00000000000000))*(x21)*(x40)))+(((IkReal(-1.00000000000000))*(x46)))))))+(((IkReal(-1.00000000000000))*(x18)*(x8))));
IkReal x62=((IkReal(1.00000000000000))*(x54));
eerot[1]=((((IkReal(-1.00000000000000))*(x12)*(x57)))+(((IkReal(-1.00000000000000))*(x15)*(x62)))+(((IkReal(-1.00000000000000))*(x14)*(x62)))+(((IkReal(-1.00000000000000))*(x19)*(x59))));
eerot[2]=((((x19)*(x54)))+(((IkReal(-1.00000000000000))*(x12)*(x54)))+(((IkReal(-1.00000000000000))*(x15)*(x59)))+(((x14)*(x57))));
IkReal x63=((IkReal(1.00000000000000))*(x29));
eetrans[0]=((IkReal(-0.410000000000000))+(((IkReal(-0.109150000000000))*(x9)))+(((IkReal(0.425000000000000))*(x29)))+(((IkReal(-0.392250000000000))*(x0)*(x28)))+(((x5)*(((((IkReal(-1.00000000000000))*(x17)*(x63)))+(((x13)*(x32)))))))+(((IkReal(-0.102300000000000))*(x8)*(x9)))+(((x6)*(((((IkReal(-1.00000000000000))*(x17)*(x32)))+(((IkReal(-1.00000000000000))*(x13)*(x63)))))))+(((x22)*(x29)))+(((x10)*(((((IkReal(-1.00000000000000))*(x20)*(x40)))+(((IkReal(-0.102300000000000))*(x46))))))));
eerot[3]=((((x10)*(((((IkReal(-1.00000000000000))*(x21)*(x41)))+(((IkReal(-1.00000000000000))*(x45)))))))+(x27));
IkReal x64=((IkReal(1.00000000000000))*(x55));
eerot[4]=((((IkReal(-1.00000000000000))*(x19)*(x60)))+(((IkReal(-1.00000000000000))*(x15)*(x64)))+(((IkReal(-1.00000000000000))*(x12)*(x58)))+(((IkReal(-1.00000000000000))*(x14)*(x64))));
eerot[5]=((((IkReal(-1.00000000000000))*(x12)*(x55)))+(((IkReal(-1.00000000000000))*(x15)*(x60)))+(((x19)*(x55)))+(((x14)*(x58))));
IkReal x65=((IkReal(1.00000000000000))*(x24));
eetrans[1]=((IkReal(-0.542000000000000))+(((x5)*(((((x13)*(x26)))+(((IkReal(-1.00000000000000))*(x17)*(x65)))))))+(((x6)*(((((IkReal(-1.00000000000000))*(x17)*(x26)))+(((IkReal(-1.00000000000000))*(x13)*(x65)))))))+(((IkReal(-0.392250000000000))*(x2)*(x26)))+(((x22)*(x24)))+(((x10)*(((((IkReal(-1.00000000000000))*(x20)*(x41)))+(((IkReal(-0.102300000000000))*(x45)))))))+(((IkReal(0.425000000000000))*(x24)))+(((IkReal(0.109150000000000))*(x0)))+(((IkReal(0.102300000000000))*(x27))));
eerot[6]=((x10)*(((((IkReal(-1.00000000000000))*(x39)))+(((IkReal(-1.00000000000000))*(x21)*(x36))))));
IkReal x66=((IkReal(1.00000000000000))*(x48));
eerot[7]=((((IkReal(-1.00000000000000))*(x19)*(x51)))+(((IkReal(-1.00000000000000))*(x12)*(x49)))+(((IkReal(-1.00000000000000))*(x14)*(x66)))+(((IkReal(-1.00000000000000))*(x15)*(x66))));
eerot[8]=((((x14)*(x49)))+(((IkReal(-1.00000000000000))*(x12)*(x48)))+(((IkReal(-1.00000000000000))*(x15)*(x51)))+(((x19)*(x48))));
eetrans[2]=((IkReal(1.35915900000000))+(((IkReal(-0.392250000000000))*(x31)))+(((IkReal(-0.425000000000000))*(x1)))+(((x5)*(((((x1)*(x17)))+(((x13)*(x3)))))))+(((x6)*(((((x1)*(x13)))+(((IkReal(-1.00000000000000))*(x17)*(x3)))))))+(((x10)*(((((IkReal(-0.102300000000000))*(x39)))+(((IkReal(-1.00000000000000))*(x20)*(x36)))))))+(((IkReal(-1.00000000000000))*(x1)*(x22))));
}

IKFAST_API int GetNumFreeParameters() { return 0; }
IKFAST_API int* GetFreeParameters() { return NULL; }
IKFAST_API int GetNumJoints() { return 6; }

IKFAST_API int GetIkRealSize() { return sizeof(IkReal); }

IKFAST_API int GetIkType() { return 0x67000001; }

class IKSolver {
public:
IkReal j0,cj0,sj0,htj0,j1,cj1,sj1,htj1,j2,cj2,sj2,htj2,j3,cj3,sj3,htj3,j4,cj4,sj4,htj4,j5,cj5,sj5,htj5,new_r00,r00,rxp0_0,new_r01,r01,rxp0_1,new_r02,r02,rxp0_2,new_r10,r10,rxp1_0,new_r11,r11,rxp1_1,new_r12,r12,rxp1_2,new_r20,r20,rxp2_0,new_r21,r21,rxp2_1,new_r22,r22,rxp2_2,new_px,px,npx,new_py,py,npy,new_pz,pz,npz,pp;
unsigned char _ij0[2], _nj0,_ij1[2], _nj1,_ij2[2], _nj2,_ij3[2], _nj3,_ij4[2], _nj4,_ij5[2], _nj5;

bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
j0=numeric_limits<IkReal>::quiet_NaN(); _ij0[0] = -1; _ij0[1] = -1; _nj0 = -1; j1=numeric_limits<IkReal>::quiet_NaN(); _ij1[0] = -1; _ij1[1] = -1; _nj1 = -1; j2=numeric_limits<IkReal>::quiet_NaN(); _ij2[0] = -1; _ij2[1] = -1; _nj2 = -1; j3=numeric_limits<IkReal>::quiet_NaN(); _ij3[0] = -1; _ij3[1] = -1; _nj3 = -1; j4=numeric_limits<IkReal>::quiet_NaN(); _ij4[0] = -1; _ij4[1] = -1; _nj4 = -1; j5=numeric_limits<IkReal>::quiet_NaN(); _ij5[0] = -1; _ij5[1] = -1; _nj5 = -1; 
for(int dummyiter = 0; dummyiter < 1; ++dummyiter) {
    solutions.Clear();
r00 = eerot[0*3+0];
r01 = eerot[0*3+1];
r02 = eerot[0*3+2];
r10 = eerot[1*3+0];
r11 = eerot[1*3+1];
r12 = eerot[1*3+2];
r20 = eerot[2*3+0];
r21 = eerot[2*3+1];
r22 = eerot[2*3+2];
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];

new_r00=((((IkReal(-0.000799999744000123))*(r01)))+(((IkReal(0.999999680000154))*(r02))));
new_r01=((((IkReal(-0.000799999744000123))*(r02)))+(((IkReal(-0.999999680000154))*(r01))));
new_r02=r00;
new_px=((IkReal(0.410000000000000))+(((IkReal(-0.102300000000000))*(r00)))+(px));
new_r10=((((IkReal(0.999999680000154))*(r12)))+(((IkReal(-0.000799999744000123))*(r11))));
new_r11=((((IkReal(-0.999999680000154))*(r11)))+(((IkReal(-0.000799999744000123))*(r12))));
new_r12=r10;
new_py=((IkReal(0.542000000000000))+(((IkReal(-0.102300000000000))*(r10)))+(py));
new_r20=((((IkReal(0.999999680000154))*(r22)))+(((IkReal(-0.000799999744000123))*(r21))));
new_r21=((((IkReal(-0.999999680000154))*(r21)))+(((IkReal(-0.000799999744000123))*(r22))));
new_r22=r20;
new_pz=((IkReal(-1.35915900000000))+(((IkReal(-0.102300000000000))*(r20)))+(pz));
r00 = new_r00; r01 = new_r01; r02 = new_r02; r10 = new_r10; r11 = new_r11; r12 = new_r12; r20 = new_r20; r21 = new_r21; r22 = new_r22; px = new_px; py = new_py; pz = new_pz;
pp=(((px)*(px))+((pz)*(pz))+((py)*(py)));
npx=((((py)*(r10)))+(((pz)*(r20)))+(((px)*(r00))));
npy=((((px)*(r01)))+(((pz)*(r21)))+(((py)*(r11))));
npz=((((py)*(r12)))+(((pz)*(r22)))+(((px)*(r02))));
rxp0_0=((((IkReal(-1.00000000000000))*(py)*(r20)))+(((pz)*(r10))));
rxp0_1=((((px)*(r20)))+(((IkReal(-1.00000000000000))*(pz)*(r00))));
rxp0_2=((((py)*(r00)))+(((IkReal(-1.00000000000000))*(px)*(r10))));
rxp1_0=((((pz)*(r11)))+(((IkReal(-1.00000000000000))*(py)*(r21))));
rxp1_1=((((IkReal(-1.00000000000000))*(pz)*(r01)))+(((px)*(r21))));
rxp1_2=((((py)*(r01)))+(((IkReal(-1.00000000000000))*(px)*(r11))));
rxp2_0=((((IkReal(-1.00000000000000))*(py)*(r22)))+(((pz)*(r12))));
rxp2_1=((((px)*(r22)))+(((IkReal(-1.00000000000000))*(pz)*(r02))));
rxp2_2=((((py)*(r02)))+(((IkReal(-1.00000000000000))*(px)*(r12))));
IkReal IKFAST_ALIGNED16(matrixinvcoeffs[64]);
IkReal x67=((IkReal(0.189300000000000))*(py));
IkReal x68=((IkReal(0.0946500000000000))*(r10));
IkReal x69=((IkReal(0.0946500000000000))*(r11));
IkReal x70=((IkReal(2.00000000000000))*(npx));
IkReal x71=((IkReal(2.00000000000000))*(npy));
IkReal x72=((pp)*(r00));
IkReal x73=((IkReal(1.00000000000000))*(pp));
IkReal x74=((px)*(x70));
IkReal x75=((py)*(x70));
IkReal x76=((r10)*(x73));
IkReal x77=((px)*(x71));
IkReal x78=((py)*(x71));
IkReal x79=((r11)*(x73));
matrixinvcoeffs[0]=((IkReal(0.271700000000000))*(rxp0_2));
matrixinvcoeffs[1]=((IkReal(-0.271700000000000))*(npx));
matrixinvcoeffs[2]=((IkReal(0.189300000000000))*(npx));
matrixinvcoeffs[3]=IkReal(0);
matrixinvcoeffs[4]=IkReal(0);
matrixinvcoeffs[5]=((IkReal(-0.135850000000000))*(r20));
matrixinvcoeffs[6]=rxp0_2;
matrixinvcoeffs[7]=((((pp)*(r20)))+(((IkReal(-1.00000000000000))*(pz)*(x70)))+(((IkReal(0.00949660000000000))*(r20))));
matrixinvcoeffs[8]=((IkReal(0.271700000000000))*(rxp1_2));
matrixinvcoeffs[9]=((IkReal(-0.271700000000000))*(npy));
matrixinvcoeffs[10]=((IkReal(0.189300000000000))*(npy));
matrixinvcoeffs[11]=IkReal(0);
matrixinvcoeffs[12]=IkReal(0);
matrixinvcoeffs[13]=((IkReal(-0.135850000000000))*(r21));
matrixinvcoeffs[14]=rxp1_2;
matrixinvcoeffs[15]=((((IkReal(0.00949660000000000))*(r21)))+(((IkReal(-1.00000000000000))*(pz)*(x71)))+(((pp)*(r21))));
matrixinvcoeffs[16]=x67;
matrixinvcoeffs[17]=((IkReal(-0.189300000000000))*(px));
matrixinvcoeffs[18]=((IkReal(0.271700000000000))*(px));
matrixinvcoeffs[19]=py;
matrixinvcoeffs[20]=((IkReal(-1.00000000000000))*(px));
matrixinvcoeffs[21]=IkReal(0);
matrixinvcoeffs[22]=IkReal(0);
matrixinvcoeffs[23]=IkReal(0);
matrixinvcoeffs[24]=((((IkReal(-1.00000000000000))*(x76)))+(x75)+(((IkReal(-0.00949660000000000))*(r10))));
matrixinvcoeffs[25]=((((IkReal(-1.00000000000000))*(x74)))+(((IkReal(-0.0274138450000000))*(r00)))+(x72));
matrixinvcoeffs[26]=((IkReal(0.0257164050000000))*(r00));
matrixinvcoeffs[27]=x68;
matrixinvcoeffs[28]=((IkReal(-0.0946500000000000))*(r00));
matrixinvcoeffs[29]=((IkReal(-1.00000000000000))*(rxp0_1));
matrixinvcoeffs[30]=((IkReal(-0.135850000000000))*(r10));
matrixinvcoeffs[31]=((IkReal(0.271700000000000))*(rxp0_1));
matrixinvcoeffs[32]=((((IkReal(-1.00000000000000))*(x79)))+(x78)+(((IkReal(-0.00949660000000000))*(r11))));
matrixinvcoeffs[33]=((((IkReal(-0.0274138450000000))*(r01)))+(((IkReal(-1.00000000000000))*(x77)))+(((pp)*(r01))));
matrixinvcoeffs[34]=((IkReal(0.0257164050000000))*(r01));
matrixinvcoeffs[35]=x69;
matrixinvcoeffs[36]=((IkReal(-0.0946500000000000))*(r01));
matrixinvcoeffs[37]=((IkReal(-1.00000000000000))*(rxp1_1));
matrixinvcoeffs[38]=((IkReal(-0.135850000000000))*(r11));
matrixinvcoeffs[39]=((IkReal(0.271700000000000))*(rxp1_1));
matrixinvcoeffs[40]=((IkReal(0.189300000000000))*(px));
matrixinvcoeffs[41]=x67;
matrixinvcoeffs[42]=((IkReal(-0.271700000000000))*(py));
matrixinvcoeffs[43]=px;
matrixinvcoeffs[44]=py;
matrixinvcoeffs[45]=IkReal(0);
matrixinvcoeffs[46]=IkReal(0);
matrixinvcoeffs[47]=IkReal(0);
matrixinvcoeffs[48]=((((IkReal(-0.00949660000000000))*(r00)))+(x74)+(((IkReal(-1.00000000000000))*(x72))));
matrixinvcoeffs[49]=((((IkReal(-1.00000000000000))*(x76)))+(x75)+(((IkReal(0.0274138450000000))*(r10))));
matrixinvcoeffs[50]=((IkReal(-0.0257164050000000))*(r10));
matrixinvcoeffs[51]=((IkReal(0.0946500000000000))*(r00));
matrixinvcoeffs[52]=x68;
matrixinvcoeffs[53]=((IkReal(-1.00000000000000))*(rxp0_0));
matrixinvcoeffs[54]=((IkReal(-0.135850000000000))*(r00));
matrixinvcoeffs[55]=((IkReal(0.271700000000000))*(rxp0_0));
matrixinvcoeffs[56]=((((IkReal(-0.00949660000000000))*(r01)))+(x77)+(((IkReal(-1.00000000000000))*(r01)*(x73))));
matrixinvcoeffs[57]=((((IkReal(-1.00000000000000))*(x79)))+(((IkReal(0.0274138450000000))*(r11)))+(x78));
matrixinvcoeffs[58]=((IkReal(-0.0257164050000000))*(r11));
matrixinvcoeffs[59]=((IkReal(0.0946500000000000))*(r01));
matrixinvcoeffs[60]=x69;
matrixinvcoeffs[61]=((IkReal(-1.00000000000000))*(rxp1_0));
matrixinvcoeffs[62]=((IkReal(-0.135850000000000))*(r01));
matrixinvcoeffs[63]=((IkReal(0.271700000000000))*(rxp1_0));
if( !matrixinverse<8>(matrixinvcoeffs) ) {
continue;
}
IkReal gconst0_0=matrixinvcoeffs[0], gconst0_1=matrixinvcoeffs[8], gconst0_2=matrixinvcoeffs[16], gconst0_3=matrixinvcoeffs[24], gconst0_4=matrixinvcoeffs[32], gconst0_5=matrixinvcoeffs[40], gconst0_6=matrixinvcoeffs[48], gconst0_7=matrixinvcoeffs[56], gconst1_0=matrixinvcoeffs[1], gconst1_1=matrixinvcoeffs[9], gconst1_2=matrixinvcoeffs[17], gconst1_3=matrixinvcoeffs[25], gconst1_4=matrixinvcoeffs[33], gconst1_5=matrixinvcoeffs[41], gconst1_6=matrixinvcoeffs[49], gconst1_7=matrixinvcoeffs[57], gconst2_0=matrixinvcoeffs[2], gconst2_1=matrixinvcoeffs[10], gconst2_2=matrixinvcoeffs[18], gconst2_3=matrixinvcoeffs[26], gconst2_4=matrixinvcoeffs[34], gconst2_5=matrixinvcoeffs[42], gconst2_6=matrixinvcoeffs[50], gconst2_7=matrixinvcoeffs[58], gconst3_0=matrixinvcoeffs[3], gconst3_1=matrixinvcoeffs[11], gconst3_2=matrixinvcoeffs[19], gconst3_3=matrixinvcoeffs[27], gconst3_4=matrixinvcoeffs[35], gconst3_5=matrixinvcoeffs[43], gconst3_6=matrixinvcoeffs[51], gconst3_7=matrixinvcoeffs[59], gconst4_0=matrixinvcoeffs[4], gconst4_1=matrixinvcoeffs[12], gconst4_2=matrixinvcoeffs[20], gconst4_3=matrixinvcoeffs[28], gconst4_4=matrixinvcoeffs[36], gconst4_5=matrixinvcoeffs[44], gconst4_6=matrixinvcoeffs[52], gconst4_7=matrixinvcoeffs[60], gconst5_0=matrixinvcoeffs[5], gconst5_1=matrixinvcoeffs[13], gconst5_2=matrixinvcoeffs[21], gconst5_3=matrixinvcoeffs[29], gconst5_4=matrixinvcoeffs[37], gconst5_5=matrixinvcoeffs[45], gconst5_6=matrixinvcoeffs[53], gconst5_7=matrixinvcoeffs[61], gconst6_0=matrixinvcoeffs[6], gconst6_1=matrixinvcoeffs[14], gconst6_2=matrixinvcoeffs[22], gconst6_3=matrixinvcoeffs[30], gconst6_4=matrixinvcoeffs[38], gconst6_5=matrixinvcoeffs[46], gconst6_6=matrixinvcoeffs[54], gconst6_7=matrixinvcoeffs[62], gconst7_0=matrixinvcoeffs[7], gconst7_1=matrixinvcoeffs[15], gconst7_2=matrixinvcoeffs[23], gconst7_3=matrixinvcoeffs[31], gconst7_4=matrixinvcoeffs[39], gconst7_5=matrixinvcoeffs[47], gconst7_6=matrixinvcoeffs[55], gconst7_7=matrixinvcoeffs[63];
IkReal op[162], zeror[48];
int numroots;
IkReal x80=((gconst0_1)*(npx));
IkReal x81=((IkReal(0.817250000000000))*(gconst7_3));
IkReal x82=((gconst4_7)*(r11));
IkReal x83=((gconst0_0)*(npx));
IkReal x84=((IkReal(0.189300000000000))*(pz));
IkReal x85=((gconst3_7)*(r00));
IkReal x86=((gconst1_7)*(npy));
IkReal x87=((gconst3_3)*(r00));
IkReal x88=((IkReal(0.0256283925000000))*(r00));
IkReal x89=((gconst4_5)*(r01));
IkReal x90=((gconst3_2)*(rxp0_0));
IkReal x91=((IkReal(0.135850000000000))*(pp));
IkReal x92=((gconst3_2)*(r00));
IkReal x93=((IkReal(0.0521040950000000))*(gconst7_0));
IkReal x94=((gconst6_2)*(r10));
IkReal x95=((gconst4_1)*(rxp1_0));
IkReal x96=((IkReal(0.109150000000000))*(gconst4_4));
IkReal x97=((gconst4_0)*(r01));
IkReal x98=((gconst7_5)*(r11));
IkReal x99=((gconst1_2)*(npy));
IkReal x100=((gconst0_2)*(npx));
IkReal x101=((IkReal(0.106800000000000))*(gconst6_5));
IkReal x102=((gconst7_0)*(r11));
IkReal x103=((gconst3_6)*(r00));
IkReal x104=((gconst7_2)*(r11));
IkReal x105=((gconst3_0)*(r10));
IkReal x106=((gconst0_5)*(r20));
IkReal x107=((gconst7_7)*(r11));
IkReal x108=((gconst6_7)*(r00));
IkReal x109=((gconst7_1)*(r11));
IkReal x110=((gconst4_7)*(r01));
IkReal x111=((IkReal(0.0327500000000000))*(gconst4_3));
IkReal x112=((gconst3_1)*(rxp0_0));
IkReal x113=((gconst3_5)*(r00));
IkReal x114=((gconst1_1)*(r21));
IkReal x115=((IkReal(0.0534000000000000))*(gconst1_6));
IkReal x116=((gconst6_1)*(r10));
IkReal x117=((IkReal(0.0534000000000000))*(gconst0_6));
IkReal x118=((gconst7_6)*(r11));
IkReal x119=((gconst7_3)*(r11));
IkReal x120=((gconst6_3)*(r10));
IkReal x121=((gconst0_0)*(r20));
IkReal x122=((IkReal(0.0534000000000000))*(gconst7_6));
IkReal x123=((gconst1_1)*(npy));
IkReal x124=((gconst6_7)*(rxp0_1));
IkReal x125=((gconst1_0)*(r21));
IkReal x126=((IkReal(0.109150000000000))*(gconst7_4));
IkReal x127=((IkReal(0.000719345000000000))*(gconst4_0));
IkReal x128=((gconst4_2)*(r01));
IkReal x129=((gconst6_5)*(r10));
IkReal x130=((gconst6_1)*(rxp0_1));
IkReal x131=((gconst1_0)*(npy));
IkReal x132=((gconst7_7)*(rxp1_1));
IkReal x133=((gconst0_3)*(r20));
IkReal x134=((IkReal(0.0327500000000000))*(gconst7_3));
IkReal x135=((gconst3_0)*(rxp0_0));
IkReal x136=((gconst1_7)*(r21));
IkReal x137=((gconst4_6)*(r01));
IkReal x138=((gconst6_6)*(r10));
IkReal x139=((gconst7_1)*(rxp1_1));
IkReal x140=((gconst0_7)*(npx));
IkReal x141=((IkReal(0.109150000000000))*(gconst3_4));
IkReal x142=((gconst4_1)*(r11));
IkReal x143=((gconst1_2)*(r21));
IkReal x144=((IkReal(0.817250000000000))*(gconst4_3));
IkReal x145=((gconst0_1)*(r20));
IkReal x146=((gconst0_7)*(r20));
IkReal x147=((IkReal(0.109150000000000))*(gconst6_4));
IkReal x148=((gconst3_2)*(r10));
IkReal x149=((gconst0_3)*(npx));
IkReal x150=((gconst3_7)*(rxp0_0));
IkReal x151=((gconst6_3)*(rxp0_1));
IkReal x152=((gconst0_4)*(r20));
IkReal x153=((IkReal(0.0534000000000000))*(gconst6_6));
IkReal x154=((IkReal(0.0534000000000000))*(gconst3_6));
IkReal x155=((gconst4_1)*(r01));
IkReal x156=((gconst4_2)*(r11));
IkReal x157=((gconst6_7)*(r10));
IkReal x158=((IkReal(0.0267000000000000))*(gconst4_5));
IkReal x159=((IkReal(0.000719345000000000))*(gconst6_0));
IkReal x160=((gconst7_2)*(rxp1_1));
IkReal x161=((IkReal(1.00000000000000))*(pp));
IkReal x162=((gconst3_1)*(r00));
IkReal x163=((IkReal(0.0257164050000000))*(pz));
IkReal x164=((IkReal(0.109150000000000))*(gconst1_4));
IkReal x165=((gconst7_2)*(r01));
IkReal x166=((gconst0_5)*(npx));
IkReal x167=((IkReal(1.33436934500000))*(gconst6_0));
IkReal x168=((IkReal(0.0327500000000000))*(gconst3_3));
IkReal x169=((gconst1_3)*(r21));
IkReal x170=((gconst6_2)*(rxp0_1));
IkReal x171=((gconst6_3)*(r00));
IkReal x172=((gconst3_1)*(r10));
IkReal x173=((gconst6_2)*(r00));
IkReal x174=((gconst4_2)*(rxp1_0));
IkReal x175=((gconst7_1)*(r01));
IkReal x176=((IkReal(0.0267000000000000))*(gconst3_5));
IkReal x177=((gconst1_3)*(npy));
IkReal x178=((gconst1_5)*(r21));
IkReal x179=((IkReal(0.0267000000000000))*(gconst7_5));
IkReal x180=((IkReal(0.0534000000000000))*(gconst4_6));
IkReal x181=((gconst7_7)*(r01));
IkReal x182=((IkReal(0.106800000000000))*(gconst4_5));
IkReal x183=((IkReal(0.0521040950000000))*(gconst4_0));
IkReal x184=((gconst7_0)*(rxp1_1));
IkReal x185=((gconst6_0)*(r10));
IkReal x186=((IkReal(0.0267000000000000))*(gconst6_5));
IkReal x187=((IkReal(0.0521040950000000))*(gconst6_0));
IkReal x188=((IkReal(0.106800000000000))*(gconst3_5));
IkReal x189=((gconst4_7)*(rxp1_0));
IkReal x190=((IkReal(0.0179172450000000))*(pz));
IkReal x191=((gconst0_2)*(r20));
IkReal x192=((IkReal(1.33436934500000))*(gconst4_0));
IkReal x193=((gconst3_0)*(r00));
IkReal x194=((gconst4_3)*(r01));
IkReal x195=((gconst6_1)*(r00));
IkReal x196=((IkReal(0.817250000000000))*(gconst3_3));
IkReal x197=((gconst1_5)*(npy));
IkReal x198=((gconst7_0)*(r01));
IkReal x199=((IkReal(0.106800000000000))*(gconst7_5));
IkReal x200=((gconst3_7)*(r10));
IkReal x201=((IkReal(0.817250000000000))*(x177));
IkReal x202=((IkReal(0.0257164050000000))*(x123));
IkReal x203=((IkReal(0.109150000000000))*(gconst0_4)*(npx));
IkReal x204=((IkReal(0.817250000000000))*(x149));
IkReal x205=((IkReal(0.0871065591288750))*(x92));
IkReal x206=((IkReal(0.00362719500000000))*(x89));
IkReal x207=((npy)*(x164));
IkReal x208=((IkReal(0.0908307299721250))*(x157));
IkReal x209=((IkReal(0.111023412500000))*(x194));
IkReal x210=((IkReal(0.641196607500000))*(x100));
IkReal x211=((IkReal(0.00362719500000000))*(x113));
IkReal x212=((IkReal(0.111023412500000))*(x87));
IkReal x213=((IkReal(0.0148280275000000))*(gconst3_4)*(r00));
IkReal x214=((IkReal(0.641196607500000))*(x99));
IkReal x215=((IkReal(0.0148280275000000))*(gconst4_4)*(r01));
IkReal x216=((IkReal(0.0871065591288750))*(x128));
IkReal x217=((IkReal(0.0267000000000000))*(x166));
IkReal x218=((IkReal(0.0267000000000000))*(x197));
IkReal x219=((IkReal(0.00349357361925000))*(x155));
IkReal x220=((IkReal(0.0257164050000000))*(x80));
IkReal x221=((IkReal(0.0908307299721250))*(x107));
IkReal x222=((IkReal(0.00349357361925000))*(x162));
IkReal x223=((IkReal(0.668610452500000))*(x86));
IkReal x224=((IkReal(0.111023412500000))*(x120));
IkReal x225=((IkReal(0.111023412500000))*(x119));
IkReal x226=((IkReal(0.0908307299721250))*(x85));
IkReal x227=((IkReal(0.668610452500000))*(x140));
IkReal x228=((IkReal(0.00349357361925000))*(x116));
IkReal x229=((IkReal(0.00362719500000000))*(x98));
IkReal x230=((IkReal(0.00362719500000000))*(x129));
IkReal x231=((IkReal(0.0871065591288750))*(x94));
IkReal x232=((IkReal(0.0148280275000000))*(gconst7_4)*(r11));
IkReal x233=((IkReal(0.0148280275000000))*(gconst6_4)*(r10));
IkReal x234=((IkReal(0.0908307299721250))*(x110));
IkReal x235=((IkReal(0.00349357361925000))*(x109));
IkReal x236=((IkReal(0.0871065591288750))*(x104));
IkReal x237=((IkReal(0.00725439000000000))*(x118));
IkReal x238=((IkReal(0.00725439000000000))*(x138));
IkReal x239=((IkReal(0.00725439000000000))*(x137));
IkReal x240=((npx)*(x117));
IkReal x241=((npy)*(x115));
IkReal x242=((IkReal(0.00725439000000000))*(x103));
IkReal x243=((IkReal(0.00616623150000000))*(x162));
IkReal x244=((IkReal(0.0453900000000000))*(x123));
IkReal x245=((IkReal(0.00707834130575000))*(x102));
IkReal x246=((IkReal(0.0453900000000000))*(x80));
IkReal x247=((IkReal(0.00707834130575000))*(x185));
IkReal x248=((IkReal(0.00616623150000000))*(x155));
IkReal x249=((IkReal(0.00616623150000000))*(x109));
IkReal x250=((IkReal(0.00616623150000000))*(x116));
IkReal x251=((IkReal(0.00707834130575000))*(x97));
IkReal x252=((IkReal(0.0521040950000000))*(x131));
IkReal x253=((IkReal(0.00707834130575000))*(x193));
IkReal x254=((IkReal(0.0521040950000000))*(x83));
IkReal x255=((IkReal(0.00178545250000000))*(x86));
IkReal x256=((IkReal(0.00348161712112500))*(x94));
IkReal x257=((IkReal(0.00444908750000000))*(x194));
IkReal x258=((IkReal(0.000242553722125000))*(x85));
IkReal x259=((IkReal(0.00178545250000000))*(x140));
IkReal x260=((IkReal(0.0327500000000000))*(x149));
IkReal x261=((IkReal(0.00444908750000000))*(x87));
IkReal x262=((IkReal(0.0327500000000000))*(x177));
IkReal x263=((IkReal(0.00348161712112500))*(x104));
IkReal x264=((IkReal(0.000242553722125000))*(x110));
IkReal x265=((IkReal(0.000242553722125000))*(x107));
IkReal x266=((IkReal(0.00348161712112500))*(x92));
IkReal x267=((IkReal(0.00348161712112500))*(x128));
IkReal x268=((IkReal(0.0256283925000000))*(x99));
IkReal x269=((IkReal(0.00444908750000000))*(x119));
IkReal x270=((IkReal(0.0256283925000000))*(x100));
IkReal x271=((IkReal(0.000242553722125000))*(x157));
IkReal x272=((IkReal(0.00444908750000000))*(x120));
IkReal x273=((IkReal(0.0257164050000000))*(x142));
IkReal x274=((IkReal(0.641196607500000))*(x173));
IkReal x275=((IkReal(0.641196607500000))*(x156));
IkReal x276=((IkReal(0.0257164050000000))*(x195));
IkReal x277=((r11)*(x158));
IkReal x278=((r00)*(x147));
IkReal x279=((IkReal(0.0257164050000000))*(x172));
IkReal x280=((r10)*(x196));
IkReal x281=((IkReal(0.0257164050000000))*(x175));
IkReal x282=((r01)*(x126));
IkReal x283=((r01)*(x179));
IkReal x284=((r11)*(x144));
IkReal x285=((r11)*(x96));
IkReal x286=((r01)*(x81));
IkReal x287=((r10)*(x176));
IkReal x288=((IkReal(0.641196607500000))*(x165));
IkReal x289=((r00)*(x186));
IkReal x290=((IkReal(0.817250000000000))*(x171));
IkReal x291=((r10)*(x141));
IkReal x292=((IkReal(0.641196607500000))*(x148));
IkReal x293=((IkReal(0.668610452500000))*(x181));
IkReal x294=((IkReal(0.668610452500000))*(x108));
IkReal x295=((IkReal(0.668610452500000))*(x82));
IkReal x296=((IkReal(0.668610452500000))*(x200));
IkReal x297=((r00)*(x153));
IkReal x298=((r01)*(x122));
IkReal x299=((r11)*(x180));
IkReal x300=((r10)*(x154));
IkReal x301=((IkReal(0.0453900000000000))*(x142));
IkReal x302=((IkReal(0.0453900000000000))*(x175));
IkReal x303=((IkReal(0.0453900000000000))*(x172));
IkReal x304=((IkReal(0.0453900000000000))*(x195));
IkReal x305=((r01)*(x93));
IkReal x306=((IkReal(0.0521040950000000))*(x105));
IkReal x307=((r11)*(x183));
IkReal x308=((r00)*(x187));
IkReal x309=((r11)*(x111));
IkReal x310=((IkReal(0.00178545250000000))*(x108));
IkReal x311=((IkReal(0.0327500000000000))*(x171));
IkReal x312=((IkReal(0.00178545250000000))*(x200));
IkReal x313=((r01)*(x134));
IkReal x314=((IkReal(0.00178545250000000))*(x82));
IkReal x315=((r10)*(x168));
IkReal x316=((IkReal(0.00178545250000000))*(x181));
IkReal x317=((IkReal(0.0256283925000000))*(x148));
IkReal x318=((IkReal(0.0256283925000000))*(x156));
IkReal x319=((IkReal(0.0256283925000000))*(x165));
IkReal x320=((gconst6_2)*(x88));
IkReal x321=((IkReal(0.0267000000000000))*(x129));
IkReal x322=((IkReal(0.0257164050000000))*(x109));
IkReal x323=((IkReal(0.668610452500000))*(x85));
IkReal x324=((IkReal(0.0267000000000000))*(x98));
IkReal x325=((pp)*(x128));
IkReal x326=((r11)*(x81));
IkReal x327=((IkReal(0.668610452500000))*(x110));
IkReal x328=((r10)*(x147));
IkReal x329=((IkReal(0.0257164050000000))*(x116));
IkReal x330=((IkReal(0.817250000000000))*(x120));
IkReal x331=((IkReal(0.641196607500000))*(x94));
IkReal x332=((IkReal(0.641196607500000))*(x104));
IkReal x333=((r11)*(x126));
IkReal x334=((pp)*(x92));
IkReal x335=((IkReal(0.0257164050000000))*(x155));
IkReal x336=((IkReal(0.0267000000000000))*(x113));
IkReal x337=((IkReal(0.641196607500000))*(x92));
IkReal x338=((r00)*(x141));
IkReal x339=((IkReal(0.0257164050000000))*(x162));
IkReal x340=((IkReal(0.668610452500000))*(x107));
IkReal x341=((IkReal(0.668610452500000))*(x157));
IkReal x342=((r01)*(x144));
IkReal x343=((IkReal(0.0267000000000000))*(x89));
IkReal x344=((r01)*(x96));
IkReal x345=((IkReal(0.817250000000000))*(x87));
IkReal x346=((IkReal(0.641196607500000))*(x128));
IkReal x347=((IkReal(0.0534000000000000))*(x103));
IkReal x348=((IkReal(0.0534000000000000))*(x137));
IkReal x349=((IkReal(0.0534000000000000))*(x138));
IkReal x350=((IkReal(0.0534000000000000))*(x118));
IkReal x351=((IkReal(0.00178545250000000))*(x157));
IkReal x352=((IkReal(0.00178545250000000))*(x107));
IkReal x353=((gconst3_2)*(x88));
IkReal x354=((IkReal(0.0256283925000000))*(x128));
IkReal x355=((IkReal(0.0327500000000000))*(x120));
IkReal x356=((IkReal(0.0327500000000000))*(x119));
IkReal x357=((IkReal(0.0256283925000000))*(x94));
IkReal x358=((IkReal(0.00178545250000000))*(x110));
IkReal x359=((IkReal(0.0327500000000000))*(x87));
IkReal x360=((r01)*(x111));
IkReal x361=((IkReal(0.0256283925000000))*(x104));
IkReal x362=((IkReal(0.00178545250000000))*(x85));
IkReal x363=((IkReal(0.668610452500000))*(x146));
IkReal x364=((pp)*(x191));
IkReal x365=((pp)*(x143));
IkReal x366=((IkReal(0.668610452500000))*(x136));
IkReal x367=((IkReal(0.641196607500000))*(x143));
IkReal x368=((IkReal(0.817250000000000))*(x133));
IkReal x369=((IkReal(0.0267000000000000))*(x106));
IkReal x370=((IkReal(0.0267000000000000))*(x178));
IkReal x371=((IkReal(0.817250000000000))*(x169));
IkReal x372=((IkReal(0.109150000000000))*(x152));
IkReal x373=((IkReal(0.0257164050000000))*(x114));
IkReal x374=((r21)*(x164));
IkReal x375=((IkReal(0.641196607500000))*(x191));
IkReal x376=((IkReal(0.0257164050000000))*(x145));
IkReal x377=((r21)*(x115));
IkReal x378=((r20)*(x117));
IkReal x379=((IkReal(0.0256283925000000))*(x143));
IkReal x380=((IkReal(0.0256283925000000))*(x191));
IkReal x381=((IkReal(0.00178545250000000))*(x146));
IkReal x382=((IkReal(0.0327500000000000))*(x169));
IkReal x383=((IkReal(0.0327500000000000))*(x133));
IkReal x384=((IkReal(0.00178545250000000))*(x136));
IkReal x385=((IkReal(0.0257164050000000))*(x139));
IkReal x386=((IkReal(0.641196607500000))*(x170));
IkReal x387=((IkReal(0.668610452500000))*(x150));
IkReal x388=((rxp1_1)*(x126));
IkReal x389=((IkReal(0.668610452500000))*(x189));
IkReal x390=((IkReal(0.641196607500000))*(x160));
IkReal x391=((rxp1_1)*(x81));
IkReal x392=((rxp0_1)*(x186));
IkReal x393=((IkReal(0.817250000000000))*(x151));
IkReal x394=((rxp1_1)*(x179));
IkReal x395=((pp)*(x174));
IkReal x396=((rxp0_1)*(x147));
IkReal x397=((IkReal(0.0257164050000000))*(x130));
IkReal x398=((pp)*(x90));
IkReal x399=((IkReal(0.641196607500000))*(x174));
IkReal x400=((rxp1_0)*(x158));
IkReal x401=((rxp1_0)*(x96));
IkReal x402=((IkReal(0.0257164050000000))*(x112));
IkReal x403=((rxp0_0)*(x141));
IkReal x404=((rxp0_0)*(x176));
IkReal x405=((IkReal(0.668610452500000))*(x124));
IkReal x406=((IkReal(0.668610452500000))*(x132));
IkReal x407=((IkReal(0.641196607500000))*(x90));
IkReal x408=((rxp1_0)*(x144));
IkReal x409=((rxp0_0)*(x196));
IkReal x410=((IkReal(0.0257164050000000))*(x95));
IkReal x411=((rxp0_0)*(x154));
IkReal x412=((rxp1_0)*(x180));
IkReal x413=((rxp1_1)*(x122));
IkReal x414=((rxp0_1)*(x153));
IkReal x415=((IkReal(0.00178545250000000))*(x124));
IkReal x416=((IkReal(0.0256283925000000))*(x174));
IkReal x417=((rxp1_1)*(x134));
IkReal x418=((IkReal(0.00178545250000000))*(x132));
IkReal x419=((IkReal(0.0256283925000000))*(x90));
IkReal x420=((IkReal(0.0327500000000000))*(x151));
IkReal x421=((IkReal(0.0256283925000000))*(x170));
IkReal x422=((IkReal(0.00178545250000000))*(x189));
IkReal x423=((IkReal(0.00178545250000000))*(x150));
IkReal x424=((IkReal(0.0256283925000000))*(x160));
IkReal x425=((rxp0_0)*(x168));
IkReal x426=((rxp1_0)*(x111));
IkReal x427=((IkReal(0.0773527125000000))*(x133));
IkReal x428=((IkReal(0.00243405773325000))*(x145));
IkReal x429=((IkReal(0.0773527125000000))*(x169));
IkReal x430=((IkReal(0.0606892588998750))*(x191));
IkReal x431=((IkReal(0.00252715500000000))*(x178));
IkReal x432=((IkReal(0.00252715500000000))*(x106));
IkReal x433=((IkReal(0.0103310475000000))*(x152));
IkReal x434=((IkReal(0.0606892588998750))*(x143));
IkReal x435=((IkReal(0.0103310475000000))*(gconst1_4)*(r21));
IkReal x436=((IkReal(0.00243405773325000))*(x114));
IkReal x437=((IkReal(0.0632839793291250))*(x146));
IkReal x438=((IkReal(0.0632839793291250))*(x136));
IkReal x439=((IkReal(0.00505431000000000))*(gconst1_6)*(r21));
IkReal x440=((IkReal(0.00505431000000000))*(gconst0_6)*(r20));
IkReal x441=((IkReal(0.00429616350000000))*(x114));
IkReal x442=((IkReal(0.00429616350000000))*(x145));
IkReal x443=((IkReal(0.00493165259175000))*(x125));
IkReal x444=((IkReal(0.00493165259175000))*(x121));
IkReal x445=((x140)*(x84));
IkReal x446=((x104)*(x91));
IkReal x447=((x163)*(x85));
IkReal x448=((x110)*(x163));
IkReal x449=((x84)*(x86));
IkReal x450=((x91)*(x94));
IkReal x451=((x107)*(x163));
IkReal x452=((x157)*(x163));
IkReal x453=((x100)*(x161));
IkReal x454=((x91)*(x92));
IkReal x455=((x128)*(x91));
IkReal x456=((x161)*(x99));
IkReal x457=((x82)*(x84));
IkReal x458=((x108)*(x84));
IkReal x459=((x181)*(x84));
IkReal x460=((x200)*(x84));
IkReal x461=((x161)*(x165));
IkReal x462=((x156)*(x161));
IkReal x463=((x161)*(x173));
IkReal x464=((x148)*(x161));
IkReal x465=((x107)*(x84));
IkReal x466=((x157)*(x84));
IkReal x467=((x104)*(x161));
IkReal x468=((x161)*(x94));
IkReal x469=((x84)*(x85));
IkReal x470=((x110)*(x84));
IkReal x471=((x146)*(x84));
IkReal x472=((x136)*(x84));
IkReal x473=((x132)*(x84));
IkReal x474=((x124)*(x84));
IkReal x475=((x189)*(x84));
IkReal x476=((x161)*(x170));
IkReal x477=((x150)*(x84));
IkReal x478=((x160)*(x161));
IkReal x479=((x136)*(x190));
IkReal x480=((x146)*(x190));
IkReal x481=((IkReal(0.0946500000000000))*(x365));
IkReal x482=((IkReal(0.0946500000000000))*(x364));
IkReal x483=((((IkReal(0.0521040950000000))*(x121)))+(((IkReal(0.0521040950000000))*(x125))));
IkReal x484=((x444)+(x443));
IkReal x485=((x370)+(x369));
IkReal x486=((x382)+(x383));
IkReal x487=((x412)+(x411));
IkReal x488=((x439)+(x440));
IkReal x489=((x378)+(x377));
IkReal x490=((x441)+(x442));
IkReal x491=((x438)+(x437));
IkReal x492=((x413)+(x414));
IkReal x493=((x349)+(x350));
IkReal x494=((x340)+(x341));
IkReal x495=((x431)+(x432));
IkReal x496=((x327)+(x323));
IkReal x497=((x394)+(x392));
IkReal x498=((x387)+(x389));
IkReal x499=((x362)+(x358));
IkReal x500=((x351)+(x352));
IkReal x501=((x347)+(x348));
IkReal x502=((x384)+(x381));
IkReal x503=((x238)+(x237));
IkReal x504=((x423)+(x422));
IkReal x505=((x364)+(x365));
IkReal x506=((x363)+(x366));
IkReal x507=((x481)+(x482));
IkReal x508=((((IkReal(0.0453900000000000))*(x114)))+(x489)+(((IkReal(0.0453900000000000))*(x145))));
IkReal x509=((x289)+(x287)+(x283)+(x277));
IkReal x510=((x309)+(x315)+(x311)+(x313));
IkReal x511=((x300)+(x298)+(x299)+(x297));
IkReal x512=((x304)+(x302)+(x303)+(x301));
IkReal x513=((x320)+(x319)+(x318)+(x317));
IkReal x514=((x314)+(x316)+(x310)+(x312));
IkReal x515=((x308)+(x306)+(x307)+(x305));
IkReal x516=((x326)+(x332)+(x331)+(x330));
IkReal x517=((x337)+(x342)+(x346)+(x345));
IkReal x518=((x386)+(x391)+(x390)+(x393));
IkReal x519=((x293)+(x294)+(x295)+(x296));
IkReal x520=((x400)+(x404)+(x415)+(x418));
IkReal x521=((x420)+(x416)+(x417)+(x419));
IkReal x522=((x239)+(x242)+(x241)+(x240));
IkReal x523=((x360)+(x361)+(x357)+(x359));
IkReal x524=((x353)+(x355)+(x354)+(x356));
IkReal x525=((x380)+(x379)+(x505));
IkReal x526=((x231)+(x236)+(x225)+(x224));
IkReal x527=((x375)+(x371)+(x368)+(x367));
IkReal x528=((x400)+(x405)+(x404)+(x406));
IkReal x529=((x463)+(x462)+(x461)+(x464));
IkReal x530=((((IkReal(0.0521040950000000))*(x97)))+(x493)+(((IkReal(0.0453900000000000))*(x116)))+(((IkReal(0.0521040950000000))*(x193)))+(((IkReal(0.0453900000000000))*(x109))));
IkReal x531=((((IkReal(0.0453900000000000))*(x155)))+(((r11)*(x93)))+(((IkReal(0.0521040950000000))*(x185)))+(((IkReal(0.0453900000000000))*(x162)))+(x501));
IkReal x532=((((IkReal(0.0453900000000000))*(x130)))+(((rxp1_0)*(x183)))+(x492)+(((IkReal(0.0521040950000000))*(x135)))+(((IkReal(0.0453900000000000))*(x139))));
IkReal x533=((((IkReal(0.0453900000000000))*(x95)))+(((rxp1_1)*(x93)))+(((IkReal(0.0453900000000000))*(x112)))+(x487)+(((rxp0_1)*(x187))));
IkReal x534=((x230)+(x234)+(x229)+(x223)+(x227)+(x226));
IkReal x535=((x211)+(x217)+(x218)+(x206)+(x271)+(x265));
IkReal x536=((x272)+(x270)+(x267)+(x266)+(x269)+(x268));
IkReal x537=((x243)+(x247)+(x246)+(x245)+(x244)+(x248));
IkReal x538=((x256)+(x257)+(x261)+(x260)+(x263)+(x262));
IkReal x539=((x230)+(x258)+(x259)+(x255)+(x229)+(x264));
IkReal x540=((x211)+(x217)+(x218)+(x221)+(x206)+(x208));
IkReal x541=((x471)+(x472)+(x376)+(x374)+(x373)+(x372));
IkReal x542=((x254)+(x250)+(x251)+(x252)+(x253)+(x249)+(x503));
IkReal x543=((x288)+(x286)+(x284)+(x280)+(x290)+(x292)+(x274)+(x275));
IkReal x544=((x210)+(x212)+(x214)+(x216)+(x205)+(x204)+(x201)+(x209));
IkReal x545=((x474)+(x473)+(x385)+(x388)+(x395)+(x397)+(x396)+(x398));
IkReal x546=((x466)+(x465)+(x325)+(x322)+(x328)+(x329)+(x333)+(x336)+(x334)+(x343));
IkReal x547=((x466)+(x465)+(x324)+(x325)+(x321)+(x322)+(x328)+(x329)+(x333)+(x334));
IkReal x548=((x479)+(x430)+(x433)+(x434)+(x435)+(x436)+(x429)+(x428)+(x427)+(pz)+(x480));
IkReal x549=((x470)+(x469)+(x468)+(x467)+(x324)+(x321)+(x339)+(x338)+(x335)+(x344));
IkReal x550=((x470)+(x469)+(x468)+(x467)+(x339)+(x338)+(x336)+(x335)+(x343)+(x344));
IkReal x551=((x456)+(x454)+(x455)+(x452)+(x453)+(x451)+(x232)+(x233)+(x235)+(x228));
IkReal x552=((x285)+(x282)+(x281)+(x458)+(x459)+(x457)+(x460)+(x291)+(x276)+(x273)+(x278)+(x279));
IkReal x553=((x475)+(x476)+(x477)+(x478)+(x426)+(x425)+(x424)+(x421)+(x401)+(x403)+(x402)+(x410));
IkReal x554=((x475)+(x476)+(x477)+(x478)+(x401)+(x403)+(x402)+(x407)+(x409)+(x408)+(x399)+(x410));
IkReal x555=((IkReal(0.0946500000000000))+(x450)+(x449)+(x448)+(x445)+(x447)+(x446)+(x213)+(x215)+(x219)+(x220)+(x222)+(x207)+(x203)+(x202));
op[0]=((((IkReal(-1.00000000000000))*(x551)))+(x544)+(((IkReal(-1.00000000000000))*(x540)))+(((IkReal(-1.00000000000000))*(x526)))+(x555)+(x534));
op[1]=((IkReal(-1.63450000000000))+(((IkReal(0.181274075518250))*(x97)))+(((IkReal(-0.0872823000000000))*(x123)))+(((IkReal(-0.0118573004550000))*(x162)))+(((IkReal(1.33436934500000))*(x83)))+(((IkReal(1.33436934500000))*(x131)))+(((IkReal(0.0118573004550000))*(x116)))+(((IkReal(-1.00000000000000))*(x522)))+(((IkReal(-0.0118573004550000))*(x155)))+(((IkReal(-0.181274075518250))*(x102)))+(((IkReal(-0.181274075518250))*(x185)))+(((IkReal(-0.0872823000000000))*(x80)))+(((IkReal(0.0118573004550000))*(x109)))+(x503)+(((IkReal(0.181274075518250))*(x193))));
op[2]=((((IkReal(-1.00000000000000))*(x551)))+(x544)+(x540)+(((IkReal(-1.00000000000000))*(x534)))+(((IkReal(-1.00000000000000))*(x526)))+(x555));
op[3]=((IkReal(-0.850000000000000))+(x542)+(((IkReal(-1.00000000000000))*(x537)))+(((IkReal(-1.00000000000000))*(x522))));
op[4]=((((IkReal(0.106800000000000))*(x197)))+(((IkReal(0.0149314514635000))*(x157)))+(((IkReal(-0.0149314514635000))*(x110)))+(((IkReal(0.106800000000000))*(x166)))+(((IkReal(-0.0145087800000000))*(x98)))+(((IkReal(-0.0149314514635000))*(x85)))+(((IkReal(-0.109911310000000))*(x140)))+(((IkReal(0.0145087800000000))*(x89)))+(((IkReal(-0.109911310000000))*(x86)))+(((IkReal(0.0149314514635000))*(x107)))+(((IkReal(-0.0145087800000000))*(x129)))+(((IkReal(0.0145087800000000))*(x113))));
op[5]=((IkReal(0.850000000000000))+(((IkReal(-1.00000000000000))*(x542)))+(x522)+(x537));
op[6]=((((IkReal(-1.00000000000000))*(x551)))+(((IkReal(-1.00000000000000))*(x536)))+(((IkReal(-1.00000000000000))*(x539)))+(x555)+(x535)+(x538));
op[7]=((IkReal(0.0655000000000000))+(((IkReal(-0.000719345000000000))*(x83)))+(((IkReal(0.00349770000000000))*(x80)))+(((IkReal(0.00349770000000000))*(x123)))+(((IkReal(-1.00000000000000))*(x503)))+(((IkReal(-0.000475162545000000))*(x109)))+(((IkReal(-0.000475162545000000))*(x116)))+(((IkReal(9.77230182500000e-5))*(x102)))+(((IkReal(-9.77230182500000e-5))*(x97)))+(((IkReal(-0.000719345000000000))*(x131)))+(((IkReal(0.000475162545000000))*(x155)))+(((IkReal(-9.77230182500000e-5))*(x193)))+(x522)+(((IkReal(9.77230182500000e-5))*(x185)))+(((IkReal(0.000475162545000000))*(x162))));
op[8]=((((IkReal(-1.00000000000000))*(x551)))+(((IkReal(-1.00000000000000))*(x536)))+(((IkReal(-1.00000000000000))*(x535)))+(x555)+(x539)+(x538));
op[9]=((((IkReal(-1.00000000000000))*(x529)))+(x519)+(x543)+(((IkReal(-1.00000000000000))*(x509)))+(x552));
op[10]=((IkReal(-2.00000000000000))+(((IkReal(-0.0872823000000000))*(x172)))+(((r00)*(x167)))+(((IkReal(-0.0872823000000000))*(x175)))+(((IkReal(1.33436934500000))*(x105)))+(((IkReal(1.33436934500000))*(x198)))+(((IkReal(-0.0872823000000000))*(x195)))+(((IkReal(-0.0872823000000000))*(x142)))+(((r11)*(x192)))+(((IkReal(-1.00000000000000))*(x511))));
op[11]=((((IkReal(-1.00000000000000))*(x529)))+(x543)+(((IkReal(-1.00000000000000))*(x519)))+(x509)+(x552));
op[12]=((IkReal(-2.00000000000000))+(x515)+(((IkReal(-1.00000000000000))*(x512)))+(((IkReal(-1.00000000000000))*(x511))));
op[13]=((((IkReal(-0.109911310000000))*(x108)))+(((r00)*(x101)))+(((r10)*(x188)))+(((IkReal(-0.109911310000000))*(x181)))+(((IkReal(-0.109911310000000))*(x200)))+(((IkReal(-0.109911310000000))*(x82)))+(((r01)*(x199)))+(((r11)*(x182))));
op[14]=((IkReal(2.00000000000000))+(x512)+(x511)+(((IkReal(-1.00000000000000))*(x515))));
op[15]=((((IkReal(-1.00000000000000))*(x529)))+(x510)+(((IkReal(-1.00000000000000))*(x514)))+(((IkReal(-1.00000000000000))*(x513)))+(x509)+(x552));
op[16]=((IkReal(2.00000000000000))+(((IkReal(-0.000719345000000000))*(x198)))+(((IkReal(-0.000719345000000000))*(x105)))+(x511)+(((IkReal(-1.00000000000000))*(r00)*(x159)))+(((IkReal(0.00349770000000000))*(x195)))+(((IkReal(0.00349770000000000))*(x175)))+(((IkReal(0.00349770000000000))*(x142)))+(((IkReal(0.00349770000000000))*(x172)))+(((IkReal(-1.00000000000000))*(r11)*(x127))));
op[17]=((((IkReal(-1.00000000000000))*(x529)))+(x514)+(x510)+(((IkReal(-1.00000000000000))*(x513)))+(((IkReal(-1.00000000000000))*(x509)))+(x552));
op[18]=((x516)+(((IkReal(-1.00000000000000))*(x517)))+(x546)+(((IkReal(-1.00000000000000))*(x496)))+(x494)+(((IkReal(-1.00000000000000))*(x549))));
op[19]=((((IkReal(-1.33436934500000))*(x97)))+(((r10)*(x167)))+(((IkReal(-0.0872823000000000))*(x109)))+(((IkReal(-1.00000000000000))*(x493)))+(((IkReal(1.33436934500000))*(x102)))+(((IkReal(-1.33436934500000))*(x193)))+(((IkReal(0.0872823000000000))*(x155)))+(((IkReal(0.0872823000000000))*(x162)))+(((IkReal(-0.0872823000000000))*(x116)))+(x501));
op[20]=((x516)+(((IkReal(-1.00000000000000))*(x517)))+(((IkReal(-1.00000000000000))*(x550)))+(x547)+(x496)+(((IkReal(-1.00000000000000))*(x494))));
op[21]=((((IkReal(-1.00000000000000))*(x530)))+(x531));
op[22]=((((IkReal(0.109911310000000))*(x110)))+(((IkReal(0.106800000000000))*(x98)))+(((IkReal(0.109911310000000))*(x85)))+(((IkReal(-0.106800000000000))*(x89)))+(((r10)*(x101)))+(((IkReal(-0.106800000000000))*(x113)))+(((IkReal(-0.109911310000000))*(x157)))+(((IkReal(-0.109911310000000))*(x107))));
op[23]=((((IkReal(-1.00000000000000))*(x531)))+(x530));
op[24]=((((IkReal(-1.00000000000000))*(x500)))+(((IkReal(-1.00000000000000))*(x550)))+(x547)+(x499)+(((IkReal(-1.00000000000000))*(x523)))+(x524));
op[25]=((((IkReal(0.000719345000000000))*(x97)))+(((IkReal(-0.000719345000000000))*(x102)))+(((IkReal(-0.00349770000000000))*(x155)))+(((IkReal(-1.00000000000000))*(x501)))+(((IkReal(0.00349770000000000))*(x109)))+(((IkReal(-0.00349770000000000))*(x162)))+(x493)+(((IkReal(0.000719345000000000))*(x193)))+(((IkReal(0.00349770000000000))*(x116)))+(((IkReal(-1.00000000000000))*(r10)*(x159))));
op[26]=((x546)+(((IkReal(-1.00000000000000))*(x549)))+(((IkReal(-1.00000000000000))*(x523)))+(x524)+(((IkReal(-1.00000000000000))*(x499)))+(x500));
op[27]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x527)))+(((IkReal(-1.00000000000000))*(x541)))+(((IkReal(-1.00000000000000))*(x506)))+(x485)+(x505));
op[28]=((((IkReal(0.0872823000000000))*(x114)))+(((IkReal(-1.33436934500000))*(x125)))+(((IkReal(-1.33436934500000))*(x121)))+(x489)+(((IkReal(0.0872823000000000))*(x145))));
op[29]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x527)))+(((IkReal(-1.00000000000000))*(x541)))+(((IkReal(-1.00000000000000))*(x485)))+(x505)+(x506));
op[30]=((((IkReal(-1.00000000000000))*(x483)))+(x508));
op[31]=((IkReal(-4.00000000000000))+(((IkReal(0.109911310000000))*(x146)))+(((IkReal(-0.106800000000000))*(x178)))+(((IkReal(-0.106800000000000))*(x106)))+(((IkReal(0.109911310000000))*(x136))));
op[32]=((((IkReal(-1.00000000000000))*(x508)))+(x483));
op[33]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x541)))+(((IkReal(-1.00000000000000))*(x485)))+(((IkReal(-1.00000000000000))*(x486)))+(x525)+(x502));
op[34]=((((IkReal(-1.00000000000000))*(x489)))+(((IkReal(0.000719345000000000))*(x125)))+(((IkReal(-0.00349770000000000))*(x114)))+(((IkReal(-0.00349770000000000))*(x145)))+(((IkReal(0.000719345000000000))*(x121))));
op[35]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x541)))+(((IkReal(-1.00000000000000))*(x502)))+(((IkReal(-1.00000000000000))*(x486)))+(x485)+(x525));
op[36]=((IkReal(-0.817250000000000))+(x518)+(x545)+(((IkReal(-1.00000000000000))*(x554)))+(((IkReal(-1.00000000000000))*(x497)))+(((IkReal(-1.00000000000000))*(x498)))+(x528));
op[37]=((((IkReal(-1.00000000000000))*(x492)))+(((rxp0_1)*(x167)))+(((IkReal(-1.00000000000000))*(rxp1_0)*(x192)))+(((IkReal(0.0872823000000000))*(x112)))+(((IkReal(1.33436934500000))*(x184)))+(((IkReal(-1.33436934500000))*(x135)))+(((IkReal(-0.0872823000000000))*(x130)))+(((IkReal(0.0872823000000000))*(x95)))+(x487)+(((IkReal(-0.0872823000000000))*(x139))));
op[38]=((IkReal(0.817250000000000))+(x518)+(x545)+(((IkReal(-1.00000000000000))*(x554)))+(((IkReal(-1.00000000000000))*(x528)))+(x498)+(x497));
op[39]=((((IkReal(-1.00000000000000))*(x532)))+(x533));
op[40]=((IkReal(1.70000000000000))+(((IkReal(-0.109911310000000))*(x124)))+(((rxp1_1)*(x199)))+(((IkReal(-0.109911310000000))*(x132)))+(((IkReal(-1.00000000000000))*(rxp0_0)*(x188)))+(((IkReal(0.109911310000000))*(x150)))+(((rxp0_1)*(x101)))+(((IkReal(0.109911310000000))*(x189)))+(((IkReal(-1.00000000000000))*(rxp1_0)*(x182))));
op[41]=((((IkReal(-1.00000000000000))*(x533)))+(x532));
op[42]=((IkReal(0.0327500000000000))+(x545)+(x497)+(((IkReal(-1.00000000000000))*(x520)))+(x521)+(((IkReal(-1.00000000000000))*(x553)))+(x504));
op[43]=((((rxp1_0)*(x127)))+(((IkReal(-1.00000000000000))*(rxp0_1)*(x159)))+(((IkReal(0.000719345000000000))*(x135)))+(((IkReal(-0.000719345000000000))*(x184)))+(((IkReal(-1.00000000000000))*(x487)))+(((IkReal(-0.00349770000000000))*(x112)))+(((IkReal(0.00349770000000000))*(x130)))+(x492)+(((IkReal(0.00349770000000000))*(x139)))+(((IkReal(-0.00349770000000000))*(x95))));
op[44]=((IkReal(-0.0327500000000000))+(x545)+(((IkReal(-1.00000000000000))*(x497)))+(((IkReal(-1.00000000000000))*(x504)))+(x520)+(x521)+(((IkReal(-1.00000000000000))*(x553))));
op[45]=((x548)+(x491)+(((IkReal(-1.00000000000000))*(x507)))+(((IkReal(-1.00000000000000))*(x495))));
op[46]=((((IkReal(-1.00000000000000))*(x488)))+(((IkReal(-0.00826126969500000))*(x145)))+(((IkReal(-0.00826126969500000))*(x114)))+(((IkReal(0.126298058504250))*(x121)))+(((IkReal(0.126298058504250))*(x125))));
op[47]=((x548)+(((IkReal(-1.00000000000000))*(x491)))+(x495)+(((IkReal(-1.00000000000000))*(x507))));
op[48]=((IkReal(0.784500000000000))+(((IkReal(-1.00000000000000))*(x488)))+(((IkReal(-1.00000000000000))*(x490)))+(x484));
op[49]=((((IkReal(-0.0104031054915000))*(x146)))+(((IkReal(-0.0104031054915000))*(x136)))+(((IkReal(0.0101086200000000))*(x178)))+(((IkReal(0.0101086200000000))*(x106))));
op[50]=((IkReal(0.784500000000000))+(((IkReal(-1.00000000000000))*(x484)))+(x490)+(x488));
op[51]=((x479)+(x433)+(x435)+(x436)+(((IkReal(-0.000168993079125000))*(x136)))+(x428)+(((IkReal(-0.00242572735012500))*(x191)))+(((IkReal(0.00309978750000000))*(x133)))+(x495)+(((IkReal(-1.00000000000000))*(x507)))+(pz)+(((IkReal(-0.00242572735012500))*(x143)))+(((IkReal(0.00309978750000000))*(x169)))+(x480)+(((IkReal(-0.000168993079125000))*(x146))));
op[52]=((((IkReal(0.000331057305000000))*(x114)))+(x488)+(((IkReal(-6.80860042500000e-5))*(x125)))+(((IkReal(0.000331057305000000))*(x145)))+(((IkReal(-6.80860042500000e-5))*(x121))));
IkReal x556=((gconst0_1)*(npx));
IkReal x557=((IkReal(0.817250000000000))*(gconst7_3));
IkReal x558=((gconst4_7)*(r11));
IkReal x559=((gconst4_1)*(r01));
IkReal x560=((IkReal(0.189300000000000))*(pz));
IkReal x561=((gconst1_7)*(npy));
IkReal x562=((IkReal(0.00357090500000000))*(r01));
IkReal x563=((gconst3_7)*(rxp0_0));
IkReal x564=((gconst0_7)*(r20));
IkReal x565=((gconst6_2)*(r00));
IkReal x566=((gconst4_5)*(r01));
IkReal x567=((IkReal(0.135850000000000))*(pp));
IkReal x568=((gconst3_2)*(r00));
IkReal x569=((gconst7_7)*(r11));
IkReal x570=((gconst6_2)*(r10));
IkReal x571=((gconst0_2)*(r20));
IkReal x572=((IkReal(0.109150000000000))*(gconst4_4));
IkReal x573=((gconst4_0)*(r11));
IkReal x574=((gconst4_0)*(r01));
IkReal x575=((gconst4_0)*(rxp1_0));
IkReal x576=((gconst7_5)*(r11));
IkReal x577=((gconst1_2)*(npy));
IkReal x578=((gconst0_2)*(npx));
IkReal x579=((IkReal(0.106800000000000))*(gconst6_5));
IkReal x580=((gconst7_0)*(r11));
IkReal x581=((gconst3_6)*(r00));
IkReal x582=((IkReal(0.00143869000000000))*(r10));
IkReal x583=((gconst3_0)*(r10));
IkReal x584=((gconst6_7)*(r00));
IkReal x585=((gconst7_7)*(rxp1_1));
IkReal x586=((gconst7_1)*(r11));
IkReal x587=((IkReal(0.213600000000000))*(gconst4_6));
IkReal x588=((gconst0_5)*(r20));
IkReal x589=((gconst4_3)*(r11));
IkReal x590=((gconst0_0)*(npx));
IkReal x591=((gconst7_1)*(r01));
IkReal x592=((gconst3_5)*(r00));
IkReal x593=((gconst0_3)*(r20));
IkReal x594=((gconst3_0)*(r00));
IkReal x595=((gconst1_6)*(r21));
IkReal x596=((gconst6_1)*(r10));
IkReal x597=((IkReal(0.0534000000000000))*(gconst0_6));
IkReal x598=((gconst7_6)*(r11));
IkReal x599=((gconst7_3)*(r11));
IkReal x600=((gconst6_3)*(r10));
IkReal x601=((gconst3_6)*(rxp0_0));
IkReal x602=((IkReal(0.0534000000000000))*(gconst7_6));
IkReal x603=((gconst1_1)*(npy));
IkReal x604=((IkReal(1.56900000000000))*(gconst3_3));
IkReal x605=((gconst6_5)*(r10));
IkReal x606=((gconst3_7)*(r10));
IkReal x607=((gconst1_0)*(npy));
IkReal x608=((gconst7_3)*(r01));
IkReal x609=((gconst4_6)*(r01));
IkReal x610=((gconst6_6)*(r10));
IkReal x611=((gconst4_7)*(r01));
IkReal x612=((gconst0_7)*(npx));
IkReal x613=((gconst4_1)*(r11));
IkReal x614=((gconst1_2)*(r21));
IkReal x615=((IkReal(0.109150000000000))*(r00));
IkReal x616=((gconst3_2)*(r10));
IkReal x617=((gconst0_3)*(npx));
IkReal x618=((gconst3_7)*(r00));
IkReal x619=((gconst1_7)*(r21));
IkReal x620=((gconst1_0)*(r21));
IkReal x621=((IkReal(0.0946500000000000))*(pp));
IkReal x622=((IkReal(0.213600000000000))*(gconst0_6));
IkReal x623=((gconst1_3)*(npy));
IkReal x624=((IkReal(0.0534000000000000))*(gconst6_6));
IkReal x625=((gconst7_0)*(r01));
IkReal x626=((gconst6_3)*(r00));
IkReal x627=((IkReal(0.641196607500000))*(r11));
IkReal x628=((gconst4_2)*(r01));
IkReal x629=((gconst3_0)*(rxp0_0));
IkReal x630=((gconst4_5)*(r11));
IkReal x631=((gconst6_7)*(r10));
IkReal x632=((gconst6_0)*(r00));
IkReal x633=((gconst7_2)*(r11));
IkReal x634=((gconst7_7)*(r01));
IkReal x635=((gconst3_1)*(r00));
IkReal x636=((IkReal(0.213600000000000))*(gconst6_6));
IkReal x637=((gconst7_2)*(r01));
IkReal x638=((gconst0_5)*(npx));
IkReal x639=((gconst1_3)*(r21));
IkReal x640=((gconst3_3)*(r00));
IkReal x641=((gconst7_0)*(rxp1_1));
IkReal x642=((gconst4_2)*(r11));
IkReal x643=((IkReal(1.00000000000000))*(pp));
IkReal x644=((gconst3_5)*(r10));
IkReal x645=((IkReal(0.0179172450000000))*(pz));
IkReal x646=((IkReal(0.0257164050000000))*(pz));
IkReal x647=((gconst1_5)*(r21));
IkReal x648=((gconst1_5)*(npy));
IkReal x649=((gconst3_1)*(r10));
IkReal x650=((gconst1_6)*(npy));
IkReal x651=((gconst7_5)*(r01));
IkReal x652=((gconst6_0)*(r10));
IkReal x653=((gconst6_0)*(rxp0_1));
IkReal x654=((gconst6_7)*(rxp0_1));
IkReal x655=((gconst6_4)*(r10));
IkReal x656=((gconst0_0)*(r20));
IkReal x657=((gconst4_7)*(rxp1_0));
IkReal x658=((IkReal(0.109150000000000))*(gconst7_4));
IkReal x659=((gconst4_3)*(r01));
IkReal x660=((gconst0_6)*(r20));
IkReal x661=((gconst3_6)*(r10));
IkReal x662=((gconst6_1)*(r00));
IkReal x663=((gconst3_3)*(r10));
IkReal x664=((IkReal(0.0534000000000000))*(gconst4_6));
IkReal x665=((IkReal(0.213600000000000))*(gconst7_6));
IkReal x666=((IkReal(0.0145087800000000))*(x592));
IkReal x667=((IkReal(0.106800000000000))*(x638));
IkReal x668=((IkReal(0.0145087800000000))*(x566));
IkReal x669=((IkReal(0.106800000000000))*(x648));
IkReal x670=((IkReal(0.0145087800000000))*(x576));
IkReal x671=((IkReal(0.0145087800000000))*(x605));
IkReal x672=((IkReal(0.0141566826115000))*(x569));
IkReal x673=((IkReal(0.0141566826115000))*(x631));
IkReal x674=((IkReal(0.213148650000000))*(x599));
IkReal x675=((IkReal(0.213148650000000))*(x600));
IkReal x676=((IkReal(1.56900000000000))*(x617));
IkReal x677=((IkReal(1.56900000000000))*(x623));
IkReal x678=((IkReal(0.104208190000000))*(x612));
IkReal x679=((IkReal(0.213148650000000))*(x640));
IkReal x680=((IkReal(0.0141566826115000))*(x618));
IkReal x681=((IkReal(0.104208190000000))*(x561));
IkReal x682=((IkReal(0.213148650000000))*(x659));
IkReal x683=((IkReal(0.0141566826115000))*(x611));
IkReal x684=((IkReal(0.00725439000000000))*(x609));
IkReal x685=((npx)*(x597));
IkReal x686=((IkReal(0.0534000000000000))*(x650));
IkReal x687=((IkReal(0.00725439000000000))*(x581));
IkReal x688=((IkReal(0.00725439000000000))*(x598));
IkReal x689=((IkReal(0.00725439000000000))*(x610));
IkReal x690=((IkReal(1.33722090500000))*(x632));
IkReal x691=((IkReal(1.33722090500000))*(x625));
IkReal x692=((IkReal(1.33722090500000))*(x573));
IkReal x693=((r00)*(x624));
IkReal x694=((IkReal(1.33722090500000))*(x583));
IkReal x695=((r01)*(x602));
IkReal x696=((r11)*(x664));
IkReal x697=((IkReal(0.0534000000000000))*(x661));
IkReal x698=((IkReal(0.106800000000000))*(x630));
IkReal x699=((IkReal(0.106800000000000))*(x644));
IkReal x700=((IkReal(0.106800000000000))*(x651));
IkReal x701=((r00)*(x579));
IkReal x702=((IkReal(1.56900000000000))*(x589));
IkReal x703=((IkReal(1.56900000000000))*(x608));
IkReal x704=((IkReal(1.56900000000000))*(x626));
IkReal x705=((r10)*(x604));
IkReal x706=((IkReal(0.104208190000000))*(x558));
IkReal x707=((IkReal(0.104208190000000))*(x634));
IkReal x708=((IkReal(0.104208190000000))*(x584));
IkReal x709=((IkReal(0.104208190000000))*(x606));
IkReal x710=((gconst7_0)*(x562));
IkReal x711=((IkReal(0.00357090500000000))*(x573));
IkReal x712=((IkReal(0.00357090500000000))*(x632));
IkReal x713=((IkReal(0.00357090500000000))*(x583));
IkReal x714=((IkReal(0.106800000000000))*(x576));
IkReal x715=((r10)*(x579));
IkReal x716=((IkReal(0.106800000000000))*(x592));
IkReal x717=((IkReal(0.106800000000000))*(x566));
IkReal x718=((IkReal(0.104208190000000))*(x618));
IkReal x719=((IkReal(0.104208190000000))*(x611));
IkReal x720=((IkReal(1.56900000000000))*(x659));
IkReal x721=((r00)*(x604));
IkReal x722=((IkReal(0.104208190000000))*(x631));
IkReal x723=((IkReal(0.104208190000000))*(x569));
IkReal x724=((IkReal(1.56900000000000))*(x600));
IkReal x725=((IkReal(1.56900000000000))*(x599));
IkReal x726=((IkReal(0.0534000000000000))*(x610));
IkReal x727=((IkReal(0.0534000000000000))*(x598));
IkReal x728=((IkReal(0.0534000000000000))*(x581));
IkReal x729=((IkReal(0.0534000000000000))*(x609));
IkReal x730=((IkReal(0.106800000000000))*(x647));
IkReal x731=((IkReal(0.106800000000000))*(x588));
IkReal x732=((IkReal(0.104208190000000))*(x564));
IkReal x733=((IkReal(1.56900000000000))*(x593));
IkReal x734=((IkReal(1.56900000000000))*(x639));
IkReal x735=((IkReal(0.104208190000000))*(x619));
IkReal x736=((IkReal(0.0534000000000000))*(x595));
IkReal x737=((r20)*(x597));
IkReal x738=((rxp0_1)*(x579));
IkReal x739=((IkReal(0.106800000000000))*(gconst7_5)*(rxp1_1));
IkReal x740=((IkReal(0.106800000000000))*(gconst3_5)*(rxp0_0));
IkReal x741=((IkReal(0.106800000000000))*(gconst4_5)*(rxp1_0));
IkReal x742=((IkReal(1.56900000000000))*(gconst4_3)*(rxp1_0));
IkReal x743=((IkReal(0.104208190000000))*(x563));
IkReal x744=((IkReal(0.104208190000000))*(x657));
IkReal x745=((rxp0_0)*(x604));
IkReal x746=((IkReal(1.56900000000000))*(gconst6_3)*(rxp0_1));
IkReal x747=((IkReal(0.104208190000000))*(x585));
IkReal x748=((IkReal(0.104208190000000))*(x654));
IkReal x749=((IkReal(1.56900000000000))*(gconst7_3)*(rxp1_1));
IkReal x750=((rxp1_1)*(x602));
IkReal x751=((rxp0_1)*(x624));
IkReal x752=((IkReal(0.0534000000000000))*(x601));
IkReal x753=((rxp1_0)*(x664));
IkReal x754=((IkReal(0.126567958658250))*(x656));
IkReal x755=((IkReal(0.00505431000000000))*(x595));
IkReal x756=((IkReal(0.126567958658250))*(x620));
IkReal x757=((IkReal(0.00505431000000000))*(x660));
IkReal x758=((IkReal(0.0101086200000000))*(x588));
IkReal x759=((IkReal(0.0101086200000000))*(x647));
IkReal x760=((IkReal(0.148505850000000))*(x639));
IkReal x761=((IkReal(0.148505850000000))*(x593));
IkReal x762=((IkReal(0.00986330518350000))*(x619));
IkReal x763=((IkReal(0.00986330518350000))*(x564));
IkReal x764=((IkReal(0.000337986158250000))*(x620));
IkReal x765=((IkReal(0.000337986158250000))*(x656));
IkReal x766=((IkReal(0.668610452500000))*(x561));
IkReal x767=((IkReal(0.0257164050000000))*(x603));
IkReal x768=((IkReal(0.109150000000000))*(gconst0_4)*(npx));
IkReal x769=((IkReal(0.0871065591288750))*(x568));
IkReal x770=((IkReal(0.109150000000000))*(gconst1_4)*(npy));
IkReal x771=((IkReal(0.111023412500000))*(x600));
IkReal x772=((IkReal(0.111023412500000))*(x599));
IkReal x773=((IkReal(0.0908307299721250))*(x618));
IkReal x774=((IkReal(0.668610452500000))*(x612));
IkReal x775=((IkReal(0.00362719500000000))*(x576));
IkReal x776=((IkReal(0.641196607500000))*(x578));
IkReal x777=((IkReal(0.0148280275000000))*(gconst3_4)*(r00));
IkReal x778=((IkReal(0.641196607500000))*(x577));
IkReal x779=((IkReal(0.0148280275000000))*(gconst4_4)*(r01));
IkReal x780=((IkReal(0.0871065591288750))*(x628));
IkReal x781=((IkReal(0.00362719500000000))*(x605));
IkReal x782=((IkReal(0.00349357361925000))*(x559));
IkReal x783=((IkReal(0.0257164050000000))*(x556));
IkReal x784=((IkReal(0.0908307299721250))*(x611));
IkReal x785=((IkReal(0.00349357361925000))*(x635));
IkReal x786=((IkReal(0.817250000000000))*(x623));
IkReal x787=((IkReal(0.817250000000000))*(x617));
IkReal x788=((IkReal(0.00362719500000000))*(x566));
IkReal x789=((IkReal(0.0908307299721250))*(x631));
IkReal x790=((IkReal(0.00349357361925000))*(x596));
IkReal x791=((IkReal(0.111023412500000))*(x659));
IkReal x792=((IkReal(0.00362719500000000))*(x592));
IkReal x793=((IkReal(0.111023412500000))*(x640));
IkReal x794=((IkReal(0.0267000000000000))*(x638));
IkReal x795=((IkReal(0.0267000000000000))*(x648));
IkReal x796=((IkReal(0.0871065591288750))*(x570));
IkReal x797=((IkReal(0.0148280275000000))*(gconst7_4)*(r11));
IkReal x798=((IkReal(0.0148280275000000))*(x655));
IkReal x799=((IkReal(0.0908307299721250))*(x569));
IkReal x800=((IkReal(0.00349357361925000))*(x586));
IkReal x801=((IkReal(0.0871065591288750))*(x633));
IkReal x802=((IkReal(0.00707834130575000))*(x574));
IkReal x803=((IkReal(0.00616623150000000))*(x635));
IkReal x804=((IkReal(0.0521040950000000))*(x607));
IkReal x805=((IkReal(0.0453900000000000))*(x603));
IkReal x806=((IkReal(0.00707834130575000))*(x594));
IkReal x807=((IkReal(0.0453900000000000))*(x556));
IkReal x808=((IkReal(0.00616623150000000))*(x559));
IkReal x809=((IkReal(0.0521040950000000))*(x590));
IkReal x810=((IkReal(0.00616623150000000))*(x586));
IkReal x811=((IkReal(0.00616623150000000))*(x596));
IkReal x812=((IkReal(0.00707834130575000))*(x580));
IkReal x813=((IkReal(0.00707834130575000))*(x652));
IkReal x814=((IkReal(0.000242553722125000))*(x569));
IkReal x815=((IkReal(0.00444908750000000))*(x599));
IkReal x816=((IkReal(0.00348161712112500))*(x570));
IkReal x817=((IkReal(0.000242553722125000))*(x631));
IkReal x818=((IkReal(0.00348161712112500))*(x633));
IkReal x819=((IkReal(0.00444908750000000))*(x600));
IkReal x820=((IkReal(0.00348161712112500))*(x568));
IkReal x821=((IkReal(0.00348161712112500))*(x628));
IkReal x822=((IkReal(0.00178545250000000))*(x561));
IkReal x823=((IkReal(0.0256283925000000))*(x577));
IkReal x824=((IkReal(0.00444908750000000))*(x659));
IkReal x825=((IkReal(0.000242553722125000))*(x618));
IkReal x826=((IkReal(0.0256283925000000))*(x578));
IkReal x827=((IkReal(0.00178545250000000))*(x612));
IkReal x828=((IkReal(0.0327500000000000))*(x617));
IkReal x829=((IkReal(0.00444908750000000))*(x640));
IkReal x830=((IkReal(0.0327500000000000))*(x623));
IkReal x831=((IkReal(0.000242553722125000))*(x611));
IkReal x832=((IkReal(0.668610452500000))*(x634));
IkReal x833=((IkReal(0.0257164050000000))*(x613));
IkReal x834=((IkReal(0.641196607500000))*(x565));
IkReal x835=((gconst4_2)*(x627));
IkReal x836=((IkReal(0.0257164050000000))*(x662));
IkReal x837=((gconst6_4)*(x615));
IkReal x838=((IkReal(0.0257164050000000))*(x649));
IkReal x839=((IkReal(0.0257164050000000))*(x591));
IkReal x840=((r01)*(x658));
IkReal x841=((r11)*(x572));
IkReal x842=((IkReal(0.668610452500000))*(x584));
IkReal x843=((IkReal(0.668610452500000))*(x558));
IkReal x844=((IkReal(0.668610452500000))*(x606));
IkReal x845=((IkReal(0.641196607500000))*(x637));
IkReal x846=((IkReal(0.109150000000000))*(gconst3_4)*(r10));
IkReal x847=((IkReal(0.641196607500000))*(x616));
IkReal x848=((IkReal(0.0267000000000000))*(x630));
IkReal x849=((IkReal(0.817250000000000))*(x663));
IkReal x850=((IkReal(0.0267000000000000))*(x651));
IkReal x851=((IkReal(0.817250000000000))*(x589));
IkReal x852=((r01)*(x557));
IkReal x853=((IkReal(0.0267000000000000))*(x644));
IkReal x854=((IkReal(0.0267000000000000))*(gconst6_5)*(r00));
IkReal x855=((IkReal(0.817250000000000))*(x626));
IkReal x856=((IkReal(0.0453900000000000))*(x613));
IkReal x857=((IkReal(0.0521040950000000))*(x625));
IkReal x858=((IkReal(0.0453900000000000))*(x591));
IkReal x859=((IkReal(0.0521040950000000))*(x583));
IkReal x860=((IkReal(0.0521040950000000))*(x573));
IkReal x861=((IkReal(0.0453900000000000))*(x649));
IkReal x862=((IkReal(0.0521040950000000))*(x632));
IkReal x863=((IkReal(0.0453900000000000))*(x662));
IkReal x864=((IkReal(0.0256283925000000))*(x616));
IkReal x865=((IkReal(0.0327500000000000))*(x589));
IkReal x866=((IkReal(0.00178545250000000))*(x584));
IkReal x867=((IkReal(0.0327500000000000))*(x626));
IkReal x868=((IkReal(0.00178545250000000))*(x606));
IkReal x869=((IkReal(0.0256283925000000))*(x642));
IkReal x870=((IkReal(0.0327500000000000))*(x608));
IkReal x871=((IkReal(0.0256283925000000))*(x637));
IkReal x872=((IkReal(0.00178545250000000))*(x558));
IkReal x873=((IkReal(0.0327500000000000))*(x663));
IkReal x874=((IkReal(0.0256283925000000))*(x565));
IkReal x875=((IkReal(0.00178545250000000))*(x634));
IkReal x876=((IkReal(0.0257164050000000))*(x586));
IkReal x877=((IkReal(0.0267000000000000))*(x592));
IkReal x878=((IkReal(0.668610452500000))*(x569));
IkReal x879=((pp)*(x628));
IkReal x880=((IkReal(0.668610452500000))*(x631));
IkReal x881=((IkReal(0.817250000000000))*(x659));
IkReal x882=((IkReal(0.0267000000000000))*(x566));
IkReal x883=((IkReal(0.109150000000000))*(x655));
IkReal x884=((IkReal(0.0257164050000000))*(x596));
IkReal x885=((IkReal(0.817250000000000))*(x640));
IkReal x886=((IkReal(0.641196607500000))*(x570));
IkReal x887=((gconst7_2)*(x627));
IkReal x888=((r11)*(x658));
IkReal x889=((pp)*(x568));
IkReal x890=((IkReal(0.0257164050000000))*(x559));
IkReal x891=((IkReal(0.0267000000000000))*(x605));
IkReal x892=((IkReal(0.668610452500000))*(x618));
IkReal x893=((IkReal(0.641196607500000))*(x568));
IkReal x894=((gconst3_4)*(x615));
IkReal x895=((IkReal(0.0257164050000000))*(x635));
IkReal x896=((IkReal(0.0267000000000000))*(x576));
IkReal x897=((r11)*(x557));
IkReal x898=((IkReal(0.668610452500000))*(x611));
IkReal x899=((r01)*(x572));
IkReal x900=((IkReal(0.817250000000000))*(x600));
IkReal x901=((IkReal(0.641196607500000))*(x628));
IkReal x902=((x560)*(x612));
IkReal x903=((x567)*(x633));
IkReal x904=((x618)*(x646));
IkReal x905=((x611)*(x646));
IkReal x906=((x560)*(x561));
IkReal x907=((x567)*(x570));
IkReal x908=((x569)*(x646));
IkReal x909=((x631)*(x646));
IkReal x910=((x578)*(x643));
IkReal x911=((x567)*(x568));
IkReal x912=((x567)*(x628));
IkReal x913=((x577)*(x643));
IkReal x914=((x558)*(x560));
IkReal x915=((x560)*(x584));
IkReal x916=((x560)*(x634));
IkReal x917=((x560)*(x606));
IkReal x918=((x637)*(x643));
IkReal x919=((x642)*(x643));
IkReal x920=((x565)*(x643));
IkReal x921=((x616)*(x643));
IkReal x922=((x560)*(x569));
IkReal x923=((x560)*(x631));
IkReal x924=((x633)*(x643));
IkReal x925=((x570)*(x643));
IkReal x926=((x560)*(x618));
IkReal x927=((x560)*(x611));
IkReal x928=((x717)+(x716));
IkReal x929=((x715)+(x714));
IkReal x930=((x722)+(x723));
IkReal x931=((x720)+(x721));
IkReal x932=((x751)+(x750));
IkReal x933=((x735)+(x732));
IkReal x934=((x734)+(x733));
IkReal x935=((x739)+(x738));
IkReal x936=((x781)+(x775));
IkReal x937=((x789)+(x799));
IkReal x938=((x724)+(x725));
IkReal x939=((x719)+(x718));
IkReal x940=((x689)+(x688));
IkReal x941=((x759)+(x758));
IkReal x942=((x817)+(x814));
IkReal x943=((x728)+(x729));
IkReal x944=((x670)+(x671));
IkReal x945=((x760)+(x761));
IkReal x946=((x740)+(x741));
IkReal x947=((x762)+(x763));
IkReal x948=((x747)+(x748));
IkReal x949=((x746)+(x749));
IkReal x950=((x745)+(x742));
IkReal x951=((x737)+(x736));
IkReal x952=((x753)+(x752));
IkReal x953=((x726)+(x727));
IkReal x954=((x672)+(x673));
IkReal x955=((x674)+(x675));
IkReal x956=((x731)+(x730));
IkReal x957=((x744)+(x743));
IkReal x958=((IkReal(4.00000000000000))+(x956));
IkReal x959=((x940)+(((IkReal(0.181661459944250))*(x652)))+(((IkReal(0.181661459944250))*(x580))));
IkReal x960=((((IkReal(0.000485107444250000))*(x652)))+(x940)+(((IkReal(0.000485107444250000))*(x580))));
IkReal x961=((x953)+(((IkReal(1.33722090500000))*(x652)))+(((IkReal(1.33722090500000))*(x580))));
IkReal x962=((((IkReal(1.33722090500000))*(x574)))+(x943)+(((IkReal(1.33722090500000))*(x594))));
IkReal x963=((x943)+(((IkReal(0.00357090500000000))*(x594)))+(((gconst4_0)*(x562))));
IkReal x964=((((IkReal(0.00357090500000000))*(x580)))+(((IkReal(0.00357090500000000))*(x652)))+(x953));
IkReal x965=((((IkReal(1.33722090500000))*(x656)))+(x951)+(((IkReal(1.33722090500000))*(x620))));
IkReal x966=((((IkReal(0.00357090500000000))*(x620)))+(((IkReal(0.00357090500000000))*(x656)))+(x951));
IkReal x967=((((IkReal(1.33722090500000))*(x653)))+(((IkReal(1.33722090500000))*(x641)))+(x932));
IkReal x968=((((IkReal(1.33722090500000))*(x575)))+(x952)+(((IkReal(1.33722090500000))*(x629))));
IkReal x969=((x952)+(((IkReal(0.00357090500000000))*(x629)))+(((IkReal(0.00357090500000000))*(x575))));
IkReal x970=((((IkReal(0.00357090500000000))*(x641)))+(x932)+(((IkReal(0.00357090500000000))*(x653))));
IkReal x971=((x695)+(x696)+(x697)+(x693));
IkReal x972=((x669)+(x668)+(x667)+(x666));
IkReal x973=((x698)+(x699)+(x700)+(x701));
IkReal x974=((x822)+(x827)+(x825)+(x831));
IkReal x975=((x687)+(x686)+(x685)+(x684));
IkReal x976=((x848)+(x853)+(x850)+(x854));
IkReal x977=((x812)+(x813)+(x810)+(x811));
IkReal x978=((x818)+(x819)+(x816)+(x815));
IkReal x979=((x708)+(x709)+(x706)+(x707));
IkReal x980=((x896)+(x892)+(x891)+(x898));
IkReal x981=((x784)+(x766)+(x773)+(x774));
IkReal x982=((x755)+(x754)+(x757)+(x756));
IkReal x983=((x682)+(x679)+(x676)+(x677));
IkReal x984=((x694)+(x690)+(x691)+(x692));
IkReal x985=((x683)+(x681)+(x680)+(x678));
IkReal x986=((x788)+(x792)+(x795)+(x794));
IkReal x987=((x880)+(x882)+(x878)+(x877));
IkReal x988=((x868)+(x866)+(x872)+(x875));
IkReal x989=((x845)+(x847)+(x834)+(x835));
IkReal x990=((x843)+(x842)+(x844)+(x832));
IkReal x991=((x702)+(x703)+(x704)+(x705));
IkReal x992=((x764)+(x765)+(x755)+(x757));
IkReal x993=((IkReal(2.00000000000000))+(x971));
IkReal x994=((x780)+(x769)+(x772)+(x771)+(x776)+(x778));
IkReal x995=((x801)+(x786)+(x787)+(x791)+(x793)+(x796));
IkReal x996=((((IkReal(1.33722090500000))*(x590)))+(x975)+(((IkReal(0.181661459944250))*(x574)))+(((IkReal(1.33722090500000))*(x607)))+(((IkReal(0.181661459944250))*(x594))));
IkReal x997=((x975)+(((IkReal(0.000485107444250000))*(x574)))+(((IkReal(0.000485107444250000))*(x594)))+(((IkReal(0.00357090500000000))*(x590)))+(((IkReal(0.00357090500000000))*(x607))));
IkReal x998=((x829)+(x828)+(x823)+(x821)+(x820)+(x826)+(x824)+(x830));
IkReal x999=((x809)+(x808)+(x805)+(x804)+(x807)+(x806)+(x803)+(x802));
IkReal x1000=((x971)+(x711)+(x710)+(x713)+(x712));
IkReal x1001=((x863)+(x862)+(x861)+(x860)+(x856)+(x857)+(x858)+(x859));
IkReal x1002=((x920)+(x921)+(x849)+(x852)+(x851)+(x855)+(x919)+(x918));
IkReal x1003=((x800)+(x908)+(x909)+(x790)+(x797)+(x798)+(x913)+(x912)+(x911)+(x910));
IkReal x1004=((x922)+(x923)+(x885)+(x884)+(x887)+(x886)+(x881)+(x883)+(x889)+(x888)+(x879)+(x876));
IkReal x1005=((x841)+(x840)+(x846)+(x917)+(x916)+(x915)+(x914)+(x836)+(x837)+(x833)+(x838)+(x839));
IkReal x1006=((x926)+(x927)+(x924)+(x925)+(x900)+(x901)+(x897)+(x894)+(x895)+(x893)+(x890)+(x899));
IkReal x1007=((x920)+(x921)+(x869)+(x867)+(x865)+(x864)+(x870)+(x871)+(x873)+(x874)+(x919)+(x918));
IkReal x1008=((IkReal(0.0946500000000000))+(x782)+(x783)+(x785)+(x904)+(x905)+(x906)+(x907)+(x902)+(x903)+(x768)+(x767)+(x770)+(x777)+(x779));
IkReal x1009=((x986)+(x1008));
op[53]=((((IkReal(-0.00242572735012500))*(x571)))+(((IkReal(-0.00252715500000000))*(x588)))+(((IkReal(-0.00242572735012500))*(x614)))+(((IkReal(-0.00252715500000000))*(x647)))+(((IkReal(0.00243405773325000))*(gconst0_1)*(r20)))+(((IkReal(0.000168993079125000))*(x619)))+(((x564)*(x645)))+(((IkReal(0.00309978750000000))*(x639)))+(pz)+(((IkReal(0.00309978750000000))*(x593)))+(((IkReal(-1.00000000000000))*(x571)*(x621)))+(((IkReal(0.0103310475000000))*(gconst0_4)*(r20)))+(((x619)*(x645)))+(((IkReal(-1.00000000000000))*(x614)*(x621)))+(((IkReal(0.000168993079125000))*(x564)))+(((IkReal(0.0103310475000000))*(gconst1_4)*(r21)))+(((IkReal(0.00243405773325000))*(gconst1_1)*(r21))));
op[54]=((x959)+(((IkReal(-1.00000000000000))*(x996))));
op[55]=((((IkReal(0.362548151036500))*(x618)))+(x972)+(((IkReal(2.66873869000000))*(x561)))+(((IkReal(-0.362548151036500))*(x631)))+(((IkReal(-0.362548151036500))*(x569)))+(((IkReal(-1.00000000000000))*(x944)))+(((IkReal(2.66873869000000))*(x612)))+(((IkReal(0.362548151036500))*(x611))));
op[56]=((((IkReal(-1.00000000000000))*(x959)))+(x996));
op[57]=((((IkReal(-1.00000000000000))*(x983)))+(x972)+(x985)+(x955)+(((IkReal(-1.00000000000000))*(x954)))+(((IkReal(-1.00000000000000))*(x944))));
op[58]=((((IkReal(0.219822620000000))*(x607)))+(((IkReal(0.0290175600000000))*(x609)))+(((IkReal(0.0298629029270000))*(x594)))+(((IkReal(0.0290175600000000))*(x581)))+(((IkReal(0.213600000000000))*(x650)))+(((IkReal(-0.0290175600000000))*(x610)))+(((IkReal(-0.0298629029270000))*(x580)))+(((npx)*(x622)))+(((IkReal(-0.0290175600000000))*(x598)))+(((IkReal(0.219822620000000))*(x590)))+(((IkReal(0.0298629029270000))*(x574)))+(((IkReal(-0.0298629029270000))*(x652))));
op[59]=((((IkReal(-1.00000000000000))*(x983)))+(((IkReal(-1.00000000000000))*(x985)))+(((IkReal(-1.00000000000000))*(x972)))+(x944)+(x955)+(x954));
op[60]=((((IkReal(-1.00000000000000))*(x960)))+(x997));
op[61]=((((IkReal(-0.000195446036500000))*(x611)))+(((IkReal(-0.00143869000000000))*(x612)))+(((IkReal(-0.00143869000000000))*(x561)))+(((IkReal(-1.00000000000000))*(x972)))+(x944)+(((IkReal(0.000195446036500000))*(x631)))+(((IkReal(-0.000195446036500000))*(x618)))+(((IkReal(0.000195446036500000))*(x569))));
op[62]=((((IkReal(-1.00000000000000))*(x997)))+(x960));
op[63]=((IkReal(-2.00000000000000))+(((IkReal(-1.00000000000000))*(x971)))+(((IkReal(-1.00000000000000))*(x984))));
op[64]=((((IkReal(2.66873869000000))*(x634)))+(x973)+(((IkReal(2.66873869000000))*(x558)))+(((IkReal(2.66873869000000))*(x606)))+(((IkReal(2.66873869000000))*(x584))));
op[65]=((x984)+(x993));
op[66]=((x973)+(x979)+(((IkReal(-1.00000000000000))*(x991))));
op[67]=((IkReal(8.00000000000000))+(((IkReal(0.219822620000000))*(x632)))+(((IkReal(0.213600000000000))*(x661)))+(((r11)*(x587)))+(((IkReal(0.219822620000000))*(x573)))+(((IkReal(0.219822620000000))*(x583)))+(((r01)*(x665)))+(((r00)*(x636)))+(((IkReal(0.219822620000000))*(x625))));
op[68]=((((IkReal(-1.00000000000000))*(x979)))+(((IkReal(-1.00000000000000))*(x973)))+(((IkReal(-1.00000000000000))*(x991))));
op[69]=((x711)+(x710)+(x713)+(x712)+(x993));
op[70]=((((IkReal(-1.00000000000000))*(x973)))+(((IkReal(-0.00143869000000000))*(x558)))+(((IkReal(-0.00143869000000000))*(x584)))+(((IkReal(-0.00143869000000000))*(x634)))+(((IkReal(-1.00000000000000))*(gconst3_7)*(x582))));
op[71]=((IkReal(-2.00000000000000))+(((IkReal(-1.00000000000000))*(x1000))));
op[72]=((((IkReal(-1.00000000000000))*(x961)))+(x962));
op[73]=((x929)+(((IkReal(-1.00000000000000))*(x928)))+(((IkReal(2.66873869000000))*(x569)))+(((IkReal(-2.66873869000000))*(x618)))+(((IkReal(-2.66873869000000))*(x611)))+(((IkReal(2.66873869000000))*(x631))));
op[74]=((((IkReal(-1.00000000000000))*(x962)))+(x961));
op[75]=((x929)+(((IkReal(-1.00000000000000))*(x928)))+(((IkReal(-1.00000000000000))*(x939)))+(x931)+(x930)+(((IkReal(-1.00000000000000))*(x938))));
op[76]=((((IkReal(-0.219822620000000))*(x594)))+(((IkReal(0.219822620000000))*(x580)))+(((IkReal(0.213600000000000))*(x598)))+(((IkReal(-1.00000000000000))*(r01)*(x587)))+(((IkReal(0.213600000000000))*(x610)))+(((IkReal(0.219822620000000))*(x652)))+(((IkReal(-0.219822620000000))*(x574)))+(((IkReal(-0.213600000000000))*(x581))));
op[77]=((x928)+(((IkReal(-1.00000000000000))*(x930)))+(((IkReal(-1.00000000000000))*(x929)))+(x939)+(x931)+(((IkReal(-1.00000000000000))*(x938))));
op[78]=((x964)+(((IkReal(-1.00000000000000))*(x963))));
op[79]=((x928)+(((IkReal(0.00143869000000000))*(x611)))+(((IkReal(-1.00000000000000))*(x929)))+(((IkReal(0.00143869000000000))*(x618)))+(((IkReal(-0.00143869000000000))*(x569)))+(((IkReal(-1.00000000000000))*(gconst6_7)*(x582))));
op[80]=((((IkReal(-1.00000000000000))*(x964)))+(x963));
op[81]=x965;
op[82]=((IkReal(-4.00000000000000))+(((IkReal(-2.66873869000000))*(x564)))+(((IkReal(-2.66873869000000))*(x619)))+(((IkReal(-1.00000000000000))*(x956))));
op[83]=((IkReal(-1.00000000000000))*(x965));
op[84]=((IkReal(-4.00000000000000))+(((IkReal(-1.00000000000000))*(x933)))+(x934)+(((IkReal(-1.00000000000000))*(x956))));
op[85]=((((IkReal(-0.213600000000000))*(x595)))+(((IkReal(-0.219822620000000))*(x656)))+(((IkReal(-1.00000000000000))*(r20)*(x622)))+(((IkReal(-0.219822620000000))*(x620))));
op[86]=((x958)+(x934)+(x933));
op[87]=((IkReal(-1.00000000000000))*(x966));
op[88]=((((IkReal(0.00143869000000000))*(x619)))+(((IkReal(0.00143869000000000))*(x564)))+(x958));
op[89]=x966;
op[90]=((((IkReal(-1.00000000000000))*(x967)))+(x968));
op[91]=((((IkReal(-2.66873869000000))*(x563)))+(((IkReal(-2.66873869000000))*(x657)))+(((IkReal(2.66873869000000))*(x585)))+(x935)+(((IkReal(2.66873869000000))*(x654)))+(((IkReal(-1.00000000000000))*(x946))));
op[92]=((((IkReal(-1.00000000000000))*(x968)))+(x967));
op[93]=((x948)+(((IkReal(-1.00000000000000))*(x957)))+(x950)+(x935)+(((IkReal(-1.00000000000000))*(x946)))+(((IkReal(-1.00000000000000))*(x949))));
op[94]=((((IkReal(0.219822620000000))*(x641)))+(((IkReal(-1.00000000000000))*(rxp1_0)*(x587)))+(((rxp0_1)*(x636)))+(((IkReal(-0.213600000000000))*(x601)))+(((IkReal(0.219822620000000))*(x653)))+(((IkReal(-0.219822620000000))*(x575)))+(((rxp1_1)*(x665)))+(((IkReal(-0.219822620000000))*(x629))));
op[95]=((x946)+(x957)+(x950)+(((IkReal(-1.00000000000000))*(x935)))+(((IkReal(-1.00000000000000))*(x948)))+(((IkReal(-1.00000000000000))*(x949))));
op[96]=((x970)+(((IkReal(-1.00000000000000))*(x969))));
op[97]=((((IkReal(0.00143869000000000))*(x563)))+(((IkReal(-0.00143869000000000))*(x654)))+(x946)+(((IkReal(-1.00000000000000))*(x935)))+(((IkReal(0.00143869000000000))*(x657)))+(((IkReal(-0.00143869000000000))*(x585))));
op[98]=((((IkReal(-1.00000000000000))*(x970)))+(x969));
op[99]=((IkReal(1.63450000000000))+(((IkReal(-1.00000000000000))*(x982))));
op[100]=((((IkReal(0.252596117008500))*(x564)))+(x941)+(((IkReal(0.252596117008500))*(x619))));
op[101]=((IkReal(1.63450000000000))+(x982));
op[102]=((((IkReal(-1.00000000000000))*(x945)))+(x941)+(x947));
op[103]=((((IkReal(0.0202172400000000))*(x595)))+(((IkReal(0.0208062109830000))*(x620)))+(((IkReal(0.0208062109830000))*(x656)))+(((IkReal(0.0202172400000000))*(x660))));
op[104]=((((IkReal(-1.00000000000000))*(x947)))+(((IkReal(-1.00000000000000))*(x941)))+(((IkReal(-1.00000000000000))*(x945))));
op[105]=((IkReal(0.0655000000000000))+(x992));
op[106]=((((IkReal(-1.00000000000000))*(x941)))+(((IkReal(-0.000136172008500000))*(x564)))+(((IkReal(-0.000136172008500000))*(x619))));
op[107]=((IkReal(0.0655000000000000))+(((IkReal(-1.00000000000000))*(x992))));
op[108]=((((IkReal(-1.00000000000000))*(x1003)))+(((IkReal(-1.00000000000000))*(x981)))+(x1009)+(x937)+(((IkReal(-1.00000000000000))*(x936)))+(((IkReal(-1.00000000000000))*(x995)))+(x994));
op[109]=((IkReal(-1.63450000000000))+(((IkReal(-0.0872823000000000))*(x556)))+(x975)+(((IkReal(0.0118573004550000))*(x596)))+(((IkReal(0.0118573004550000))*(x586)))+(((IkReal(-0.181274075518250))*(x574)))+(((IkReal(-1.00000000000000))*(x940)))+(((IkReal(0.181274075518250))*(x580)))+(((IkReal(-0.181274075518250))*(x594)))+(((IkReal(-1.33436934500000))*(x590)))+(((IkReal(-0.0118573004550000))*(x559)))+(((IkReal(-0.0872823000000000))*(x603)))+(((IkReal(-1.33436934500000))*(x607)))+(((IkReal(-0.0118573004550000))*(x635)))+(((IkReal(0.181274075518250))*(x652))));
op[110]=((((IkReal(-1.00000000000000))*(x937)))+(x981)+(((IkReal(-1.00000000000000))*(x1003)))+(x1008)+(x936)+(((IkReal(-1.00000000000000))*(x995)))+(((IkReal(-1.00000000000000))*(x986)))+(x994));
op[111]=((IkReal(-0.850000000000000))+(x975)+(x977)+(((IkReal(-1.00000000000000))*(x940)))+(((IkReal(-1.00000000000000))*(x999))));
op[112]=((((IkReal(0.109911310000000))*(x561)))+(((IkReal(-0.0149314514635000))*(x631)))+(((IkReal(0.0149314514635000))*(x618)))+(((IkReal(-1.00000000000000))*(x972)))+(((IkReal(0.109911310000000))*(x612)))+(x944)+(((IkReal(0.0149314514635000))*(x611)))+(((IkReal(-0.0149314514635000))*(x569))));
op[113]=((IkReal(0.850000000000000))+(((IkReal(-1.00000000000000))*(x977)))+(x940)+(((IkReal(-1.00000000000000))*(x975)))+(x999));
op[114]=((x974)+(x978)+(((IkReal(-1.00000000000000))*(x942)))+(((IkReal(-1.00000000000000))*(x1003)))+(((IkReal(-1.00000000000000))*(x998)))+(x1008)+(x936)+(((IkReal(-1.00000000000000))*(x986))));
op[115]=((IkReal(0.0655000000000000))+(((IkReal(-9.77230182500000e-5))*(x652)))+(((IkReal(-0.000475162545000000))*(x586)))+(((IkReal(0.00349770000000000))*(x603)))+(((IkReal(0.00349770000000000))*(x556)))+(((IkReal(0.000475162545000000))*(x635)))+(((IkReal(0.000719345000000000))*(x590)))+(((IkReal(-0.000475162545000000))*(x596)))+(((IkReal(-9.77230182500000e-5))*(x580)))+(x940)+(((IkReal(0.000719345000000000))*(x607)))+(((IkReal(9.77230182500000e-5))*(x594)))+(((IkReal(-1.00000000000000))*(x975)))+(((IkReal(9.77230182500000e-5))*(x574)))+(((IkReal(0.000475162545000000))*(x559))));
op[116]=((x978)+(((IkReal(-1.00000000000000))*(x1003)))+(x942)+(((IkReal(-1.00000000000000))*(x998)))+(x1009)+(((IkReal(-1.00000000000000))*(x936)))+(((IkReal(-1.00000000000000))*(x974))));
op[117]=((x976)+(x989)+(x1005)+(((IkReal(-1.00000000000000))*(x990)))+(((IkReal(-1.00000000000000))*(x1002))));
op[118]=((((IkReal(-0.0872823000000000))*(x649)))+(((IkReal(-0.0872823000000000))*(x613)))+(((IkReal(-1.33436934500000))*(x583)))+(((IkReal(-0.0872823000000000))*(x591)))+(((IkReal(-1.33436934500000))*(x625)))+(((IkReal(-0.0872823000000000))*(x662)))+(((IkReal(-1.33436934500000))*(x573)))+(x993)+(((IkReal(-1.33436934500000))*(x632))));
op[119]=((x989)+(((IkReal(-1.00000000000000))*(x976)))+(x1005)+(((IkReal(-1.00000000000000))*(x1002)))+(x990));
op[120]=((((IkReal(-1.00000000000000))*(x1001)))+(x993));
op[121]=((((IkReal(0.109911310000000))*(x558)))+(((IkReal(0.109911310000000))*(x634)))+(((IkReal(-1.00000000000000))*(x973)))+(((IkReal(0.109911310000000))*(x606)))+(((IkReal(0.109911310000000))*(x584))));
op[122]=((IkReal(-2.00000000000000))+(((IkReal(-1.00000000000000))*(x971)))+(x1001));
op[123]=((x988)+(((IkReal(-1.00000000000000))*(x1007)))+(((IkReal(-1.00000000000000))*(x976)))+(x1005));
op[124]=((IkReal(-2.00000000000000))+(((IkReal(0.00349770000000000))*(x613)))+(((IkReal(0.00349770000000000))*(x662)))+(((IkReal(0.000719345000000000))*(x583)))+(((IkReal(-1.00000000000000))*(x971)))+(((IkReal(0.000719345000000000))*(x625)))+(((IkReal(0.00349770000000000))*(x591)))+(((IkReal(0.000719345000000000))*(x632)))+(((IkReal(0.000719345000000000))*(x573)))+(((IkReal(0.00349770000000000))*(x649))));
op[125]=((x976)+(((IkReal(-1.00000000000000))*(x1007)))+(((IkReal(-1.00000000000000))*(x988)))+(x1005));
op[126]=((x980)+(((IkReal(-1.00000000000000))*(x1006)))+(x1004)+(((IkReal(-1.00000000000000))*(x987))));
op[127]=((((IkReal(-0.0872823000000000))*(x586)))+(((IkReal(-1.33436934500000))*(x652)))+(((IkReal(-1.33436934500000))*(x580)))+(((IkReal(1.33436934500000))*(x574)))+(((IkReal(-1.00000000000000))*(x943)))+(x953)+(((IkReal(-0.0872823000000000))*(x596)))+(((IkReal(1.33436934500000))*(x594)))+(((IkReal(0.0872823000000000))*(x635)))+(((IkReal(0.0872823000000000))*(x559))));
op[128]=((x987)+(((IkReal(-1.00000000000000))*(x1006)))+(x1004)+(((IkReal(-1.00000000000000))*(x980))));
op[129]=((((IkReal(0.0521040950000000))*(x574)))+(((IkReal(-0.0521040950000000))*(x580)))+(((IkReal(-0.0453900000000000))*(x586)))+(((IkReal(0.0521040950000000))*(x594)))+(((IkReal(-1.00000000000000))*(x943)))+(((IkReal(-0.0453900000000000))*(x596)))+(x953)+(((IkReal(-0.0521040950000000))*(x652)))+(((IkReal(0.0453900000000000))*(x559)))+(((IkReal(0.0453900000000000))*(x635))));
IkReal x1010=((gconst0_4)*(r20));
IkReal x1011=((gconst1_1)*(r21));
IkReal x1012=((gconst0_1)*(r20));
IkReal x1013=((gconst7_1)*(rxp1_1));
IkReal x1014=((gconst6_3)*(rxp0_1));
IkReal x1015=((IkReal(0.189300000000000))*(pz));
IkReal x1016=((gconst3_7)*(r00));
IkReal x1017=((gconst1_7)*(r21));
IkReal x1018=((IkReal(0.00178545250000000))*(gconst6_7));
IkReal x1019=((IkReal(0.0327500000000000))*(gconst3_3));
IkReal x1020=((gconst6_2)*(rxp0_1));
IkReal x1021=((gconst0_7)*(r20));
IkReal x1022=((gconst3_2)*(rxp0_0));
IkReal x1023=((gconst0_6)*(r20));
IkReal x1024=((gconst7_3)*(rxp1_1));
IkReal x1025=((IkReal(0.00349770000000000))*(gconst6_1));
IkReal x1026=((IkReal(0.00349770000000000))*(gconst4_1));
IkReal x1027=((gconst7_7)*(rxp1_1));
IkReal x1028=((gconst3_2)*(r00));
IkReal x1029=((gconst3_0)*(rxp0_0));
IkReal x1030=((IkReal(0.0327500000000000))*(gconst4_3));
IkReal x1031=((IkReal(0.00349770000000000))*(gconst3_1));
IkReal x1032=((IkReal(0.0521040950000000))*(gconst6_0));
IkReal x1033=((IkReal(0.0267000000000000))*(gconst3_5));
IkReal x1034=((gconst7_2)*(rxp1_1));
IkReal x1035=((IkReal(1.00000000000000))*(pp));
IkReal x1036=((gconst7_5)*(r11));
IkReal x1037=((IkReal(0.106800000000000))*(gconst6_5));
IkReal x1038=((gconst4_7)*(rxp1_0));
IkReal x1039=((gconst4_7)*(r01));
IkReal x1040=((IkReal(0.0256283925000000))*(gconst4_2));
IkReal x1041=((gconst0_5)*(r20));
IkReal x1042=((gconst7_7)*(r11));
IkReal x1043=((gconst7_1)*(r11));
IkReal x1044=((gconst4_0)*(r01));
IkReal x1045=((gconst1_2)*(r21));
IkReal x1046=((gconst4_1)*(rxp1_0));
IkReal x1047=((gconst1_6)*(r21));
IkReal x1048=((gconst1_0)*(r21));
IkReal x1049=((gconst0_3)*(r20));
IkReal x1050=((gconst0_2)*(r20));
IkReal x1051=((IkReal(0.0946500000000000))*(pp));
IkReal x1052=((gconst0_0)*(r20));
IkReal x1053=((IkReal(0.109150000000000))*(gconst6_4));
IkReal x1054=((IkReal(0.000719345000000000))*(gconst7_0));
IkReal x1055=((IkReal(0.0267000000000000))*(gconst6_5));
IkReal x1056=((IkReal(0.0534000000000000))*(gconst6_6));
IkReal x1057=((gconst1_3)*(r21));
IkReal x1058=((gconst4_1)*(r01));
IkReal x1059=((gconst4_5)*(rxp1_0));
IkReal x1060=((gconst6_1)*(rxp0_1));
IkReal x1061=((IkReal(0.0534000000000000))*(gconst7_6));
IkReal x1062=((gconst7_5)*(rxp1_1));
IkReal x1063=((IkReal(0.0534000000000000))*(gconst4_6));
IkReal x1064=((IkReal(0.109150000000000))*(gconst3_4));
IkReal x1065=((gconst6_1)*(r10));
IkReal x1066=((gconst7_2)*(r11));
IkReal x1067=((IkReal(0.106800000000000))*(gconst3_5));
IkReal x1068=((IkReal(0.109150000000000))*(gconst7_4));
IkReal x1069=((gconst6_7)*(rxp0_1));
IkReal x1070=((IkReal(0.0179172450000000))*(pz));
IkReal x1071=((gconst1_4)*(r21));
IkReal x1072=((gconst6_7)*(r10));
IkReal x1073=((gconst1_5)*(r21));
IkReal x1074=((gconst4_0)*(rxp1_0));
IkReal x1075=((gconst3_7)*(rxp0_0));
IkReal x1076=((gconst3_1)*(r00));
IkReal x1077=((IkReal(0.0534000000000000))*(gconst3_6));
IkReal x1078=((gconst7_0)*(rxp1_1));
IkReal x1079=((gconst3_1)*(rxp0_0));
IkReal x1080=((gconst6_0)*(rxp0_1));
IkReal x1081=((IkReal(0.109150000000000))*(gconst4_4));
IkReal x1082=((gconst3_0)*(r00));
IkReal x1083=((gconst4_2)*(rxp1_0));
IkReal x1084=((gconst4_5)*(r01));
IkReal x1085=((r00)*(x1077));
IkReal x1086=((r01)*(x1063));
IkReal x1087=((r10)*(x1056));
IkReal x1088=((r11)*(x1061));
IkReal x1089=((r10)*(x1055));
IkReal x1090=((IkReal(0.0257164050000000))*(x1043));
IkReal x1091=((IkReal(0.0267000000000000))*(x1036));
IkReal x1092=((gconst4_2)*(pp)*(r01));
IkReal x1093=((IkReal(0.00178545250000000))*(x1039));
IkReal x1094=((r00)*(x1019));
IkReal x1095=((IkReal(0.0256283925000000))*(x1028));
IkReal x1096=((r10)*(x1053));
IkReal x1097=((IkReal(0.0257164050000000))*(x1065));
IkReal x1098=((r01)*(x1030));
IkReal x1099=((r01)*(x1040));
IkReal x1100=((IkReal(0.00178545250000000))*(x1016));
IkReal x1101=((r11)*(x1068));
IkReal x1102=((pp)*(x1028));
IkReal x1103=((IkReal(0.0257164050000000))*(x1058));
IkReal x1104=((r10)*(x1018));
IkReal x1105=((IkReal(0.0256283925000000))*(gconst6_2)*(r10));
IkReal x1106=((r00)*(x1033));
IkReal x1107=((r00)*(x1064));
IkReal x1108=((IkReal(0.00178545250000000))*(x1042));
IkReal x1109=((IkReal(0.0257164050000000))*(x1076));
IkReal x1110=((IkReal(0.0267000000000000))*(x1084));
IkReal x1111=((r01)*(x1081));
IkReal x1112=((IkReal(0.0327500000000000))*(gconst6_3)*(r10));
IkReal x1113=((IkReal(0.0256283925000000))*(x1066));
IkReal x1114=((IkReal(0.0327500000000000))*(gconst7_3)*(r11));
IkReal x1115=((IkReal(0.817250000000000))*(x1049));
IkReal x1116=((IkReal(0.0267000000000000))*(x1041));
IkReal x1117=((IkReal(0.0267000000000000))*(x1073));
IkReal x1118=((pp)*(x1050));
IkReal x1119=((IkReal(0.817250000000000))*(x1057));
IkReal x1120=((pp)*(x1045));
IkReal x1121=((IkReal(0.641196607500000))*(x1045));
IkReal x1122=((IkReal(0.668610452500000))*(x1021));
IkReal x1123=((IkReal(0.109150000000000))*(x1010));
IkReal x1124=((IkReal(0.0257164050000000))*(x1011));
IkReal x1125=((IkReal(0.668610452500000))*(x1017));
IkReal x1126=((IkReal(0.109150000000000))*(x1071));
IkReal x1127=((IkReal(0.641196607500000))*(x1050));
IkReal x1128=((IkReal(0.0257164050000000))*(x1012));
IkReal x1129=((IkReal(0.00178545250000000))*(x1021));
IkReal x1130=((IkReal(0.0327500000000000))*(x1057));
IkReal x1131=((IkReal(0.0256283925000000))*(x1045));
IkReal x1132=((IkReal(0.0256283925000000))*(x1050));
IkReal x1133=((IkReal(0.0327500000000000))*(x1049));
IkReal x1134=((IkReal(0.00178545250000000))*(x1017));
IkReal x1135=((IkReal(0.0257164050000000))*(x1013));
IkReal x1136=((IkReal(0.641196607500000))*(x1020));
IkReal x1137=((IkReal(0.0267000000000000))*(x1059));
IkReal x1138=((rxp1_1)*(x1068));
IkReal x1139=((IkReal(0.641196607500000))*(x1034));
IkReal x1140=((rxp0_0)*(x1033));
IkReal x1141=((IkReal(0.668610452500000))*(x1069));
IkReal x1142=((IkReal(0.668610452500000))*(x1027));
IkReal x1143=((pp)*(x1083));
IkReal x1144=((IkReal(0.817250000000000))*(gconst4_3)*(rxp1_0));
IkReal x1145=((rxp0_1)*(x1053));
IkReal x1146=((IkReal(0.0257164050000000))*(x1060));
IkReal x1147=((pp)*(x1022));
IkReal x1148=((IkReal(0.817250000000000))*(gconst3_3)*(rxp0_0));
IkReal x1149=((IkReal(0.641196607500000))*(x1083));
IkReal x1150=((IkReal(0.668610452500000))*(x1075));
IkReal x1151=((rxp1_0)*(x1081));
IkReal x1152=((IkReal(0.668610452500000))*(x1038));
IkReal x1153=((IkReal(0.0257164050000000))*(x1079));
IkReal x1154=((IkReal(0.817250000000000))*(x1024));
IkReal x1155=((rxp0_0)*(x1064));
IkReal x1156=((rxp0_1)*(x1055));
IkReal x1157=((IkReal(0.817250000000000))*(x1014));
IkReal x1158=((IkReal(0.0267000000000000))*(x1062));
IkReal x1159=((IkReal(0.641196607500000))*(x1022));
IkReal x1160=((IkReal(0.0257164050000000))*(x1046));
IkReal x1161=((rxp1_1)*(x1061));
IkReal x1162=((rxp0_1)*(x1056));
IkReal x1163=((rxp0_0)*(x1077));
IkReal x1164=((rxp1_0)*(x1063));
IkReal x1165=((rxp1_0)*(x1040));
IkReal x1166=((IkReal(0.00178545250000000))*(x1038));
IkReal x1167=((IkReal(0.00178545250000000))*(x1075));
IkReal x1168=((rxp0_0)*(x1019));
IkReal x1169=((IkReal(0.0256283925000000))*(x1022));
IkReal x1170=((rxp1_0)*(x1030));
IkReal x1171=((rxp0_1)*(x1018));
IkReal x1172=((IkReal(0.0256283925000000))*(x1020));
IkReal x1173=((IkReal(0.0327500000000000))*(x1024));
IkReal x1174=((IkReal(0.00178545250000000))*(x1027));
IkReal x1175=((IkReal(0.0256283925000000))*(x1034));
IkReal x1176=((IkReal(0.0327500000000000))*(x1014));
IkReal x1177=((IkReal(0.0632839793291250))*(x1021));
IkReal x1178=((IkReal(0.0632839793291250))*(x1017));
IkReal x1179=((IkReal(0.00243405773325000))*(x1012));
IkReal x1180=((IkReal(0.0606892588998750))*(x1050));
IkReal x1181=((IkReal(0.0103310475000000))*(x1010));
IkReal x1182=((IkReal(0.0606892588998750))*(x1045));
IkReal x1183=((IkReal(0.0103310475000000))*(x1071));
IkReal x1184=((IkReal(0.00243405773325000))*(x1011));
IkReal x1185=((IkReal(0.0773527125000000))*(x1049));
IkReal x1186=((IkReal(0.0773527125000000))*(x1057));
IkReal x1187=((IkReal(0.00252715500000000))*(x1073));
IkReal x1188=((IkReal(0.00252715500000000))*(x1041));
IkReal x1189=((IkReal(0.00505431000000000))*(x1047));
IkReal x1190=((IkReal(0.00505431000000000))*(x1023));
IkReal x1191=((IkReal(0.00429616350000000))*(x1011));
IkReal x1192=((IkReal(0.00493165259175000))*(x1048));
IkReal x1193=((IkReal(0.00429616350000000))*(x1012));
IkReal x1194=((IkReal(0.00493165259175000))*(x1052));
IkReal x1195=((IkReal(0.000168993079125000))*(x1021));
IkReal x1196=((IkReal(0.00242572735012500))*(x1050));
IkReal x1197=((IkReal(0.00242572735012500))*(x1045));
IkReal x1198=((IkReal(0.000168993079125000))*(x1017));
IkReal x1199=((IkReal(0.00309978750000000))*(x1049));
IkReal x1200=((IkReal(0.00309978750000000))*(x1057));
IkReal x1201=((gconst6_2)*(x1035));
IkReal x1202=((x1015)*(x1042));
IkReal x1203=((x1015)*(x1072));
IkReal x1204=((x1035)*(x1066));
IkReal x1205=((r10)*(x1201));
IkReal x1206=((x1015)*(x1016));
IkReal x1207=((x1015)*(x1039));
IkReal x1208=((x1015)*(x1021));
IkReal x1209=((x1015)*(x1017));
IkReal x1210=((x1015)*(x1027));
IkReal x1211=((x1015)*(x1069));
IkReal x1212=((x1015)*(x1038));
IkReal x1213=((x1020)*(x1035));
IkReal x1214=((x1015)*(x1075));
IkReal x1215=((x1034)*(x1035));
IkReal x1216=((x1017)*(x1070));
IkReal x1217=((x1021)*(x1070));
IkReal x1218=((x1045)*(x1051));
IkReal x1219=((x1050)*(x1051));
IkReal x1220=((((IkReal(0.0534000000000000))*(x1023)))+(((IkReal(0.0534000000000000))*(x1047))));
IkReal x1221=((x1189)+(x1190));
IkReal x1222=((x1198)+(x1195));
IkReal x1223=((x1182)+(x1180));
IkReal x1224=((x1158)+(x1156));
IkReal x1225=((x1150)+(x1152));
IkReal x1226=((x1164)+(x1163));
IkReal x1227=((x1087)+(x1088));
IkReal x1228=((x1140)+(x1137));
IkReal x1229=((x1142)+(x1141));
IkReal x1230=((x1134)+(x1129));
IkReal x1231=((x1115)+(x1119));
IkReal x1232=((x1122)+(x1125));
IkReal x1233=((x1174)+(x1171));
IkReal x1234=((x1161)+(x1162));
IkReal x1235=((x1166)+(x1167));
IkReal x1236=((x1086)+(x1085));
IkReal x1237=((x1121)+(x1127));
IkReal x1238=((x1188)+(x1187));
IkReal x1239=((x1186)+(x1185));
IkReal x1240=((x1177)+(x1178));
IkReal x1241=((IkReal(-1.00000000000000))+(x1118)+(x1120));
IkReal x1242=((x1218)+(x1219));
IkReal x1243=((((IkReal(0.0453900000000000))*(x1012)))+(((IkReal(0.0521040950000000))*(x1048)))+(((IkReal(0.0521040950000000))*(x1052)))+(((IkReal(0.0453900000000000))*(x1011))));
IkReal x1244=((x1199)+(x1197)+(x1196)+(x1200));
IkReal x1245=((x1089)+(x1100)+(x1091)+(x1093));
IkReal x1246=((x1133)+(x1132)+(x1131)+(x1130));
IkReal x1247=((x1191)+(x1193)+(x1192)+(x1194));
IkReal x1248=((x1106)+(x1104)+(x1108)+(x1110));
IkReal x1249=((IkReal(1.00000000000000))+(x1117)+(x1116)+(x1118)+(x1120));
IkReal x1250=((((IkReal(0.0521040950000000))*(x1078)))+(((rxp0_1)*(x1032)))+(((IkReal(0.0453900000000000))*(x1060)))+(((IkReal(0.0453900000000000))*(x1013)))+(x1226));
IkReal x1251=((((IkReal(0.0453900000000000))*(x1046)))+(((IkReal(0.0521040950000000))*(x1074)))+(((IkReal(0.0453900000000000))*(x1079)))+(x1234)+(((IkReal(0.0521040950000000))*(x1029))));
IkReal x1252=((x1128)+(x1123)+(x1124)+(x1126)+(x1209)+(x1208));
IkReal x1253=((x1184)+(x1183)+(x1181)+(pz)+(x1216)+(x1217)+(x1179));
IkReal x1254=((x1117)+(x1116)+(x1252));
IkReal x1255=((x1253)+(x1238));
IkReal x1256=((x1143)+(x1146)+(x1147)+(x1144)+(x1145)+(x1148)+(x1139)+(x1138)+(x1136)+(x1135)+(x1210)+(x1211));
IkReal x1257=((x1102)+(x1101)+(x1203)+(x1202)+(x1094)+(x1095)+(x1096)+(x1097)+(x1090)+(x1092)+(x1098)+(x1099));
IkReal x1258=((x1143)+(x1146)+(x1147)+(x1145)+(x1165)+(x1168)+(x1169)+(x1138)+(x1135)+(x1210)+(x1211)+(x1170));
IkReal x1259=((x1149)+(x1160)+(x1212)+(x1213)+(x1214)+(x1215)+(x1159)+(x1155)+(x1154)+(x1157)+(x1151)+(x1153));
IkReal x1260=((x1160)+(x1212)+(x1213)+(x1214)+(x1215)+(x1176)+(x1175)+(x1173)+(x1172)+(x1155)+(x1151)+(x1153));
IkReal x1261=((x1107)+(x1105)+(x1103)+(x1109)+(x1111)+(x1113)+(x1112)+(x1114)+(x1205)+(x1204)+(x1207)+(x1206));
op[130]=((((IkReal(-0.106800000000000))*(x1036)))+(((IkReal(-0.109911310000000))*(x1016)))+(((IkReal(0.106800000000000))*(x1084)))+(((IkReal(-1.00000000000000))*(r10)*(x1037)))+(((IkReal(-0.109911310000000))*(x1039)))+(((r00)*(x1067)))+(((IkReal(0.109911310000000))*(x1042)))+(((IkReal(0.109911310000000))*(x1072))));
op[131]=((((IkReal(-1.00000000000000))*(x1227)))+(((IkReal(-0.0521040950000000))*(x1082)))+(((IkReal(-0.0453900000000000))*(x1058)))+(((r10)*(x1032)))+(((IkReal(0.0521040950000000))*(gconst7_0)*(r11)))+(((IkReal(0.0453900000000000))*(x1043)))+(((IkReal(0.0453900000000000))*(x1065)))+(((IkReal(-0.0453900000000000))*(x1076)))+(x1236)+(((IkReal(-0.0521040950000000))*(x1044))));
op[132]=((((IkReal(-1.00000000000000))*(x1261)))+(x1248)+(x1257)+(((IkReal(-1.00000000000000))*(x1245))));
op[133]=((((IkReal(0.00349770000000000))*(x1043)))+(((IkReal(-1.00000000000000))*(x1227)))+(((IkReal(-1.00000000000000))*(r01)*(x1026)))+(((IkReal(-0.000719345000000000))*(x1082)))+(((IkReal(0.000719345000000000))*(gconst6_0)*(r10)))+(((IkReal(-1.00000000000000))*(r00)*(x1031)))+(((r10)*(x1025)))+(x1236)+(((IkReal(-0.000719345000000000))*(x1044)))+(((r11)*(x1054))));
op[134]=((x1245)+(((IkReal(-1.00000000000000))*(x1261)))+(((IkReal(-1.00000000000000))*(x1248)))+(x1257));
op[135]=((x1241)+(((IkReal(-1.00000000000000))*(x1254)))+(x1231)+(x1232)+(((IkReal(-1.00000000000000))*(x1237))));
op[136]=((((IkReal(0.0872823000000000))*(x1012)))+(((IkReal(0.0872823000000000))*(x1011)))+(((IkReal(-1.00000000000000))*(x1220)))+(((IkReal(1.33436934500000))*(x1048)))+(((IkReal(1.33436934500000))*(x1052))));
op[137]=((x1249)+(((IkReal(-1.00000000000000))*(x1252)))+(x1231)+(((IkReal(-1.00000000000000))*(x1237)))+(((IkReal(-1.00000000000000))*(x1232))));
op[138]=((x1243)+(((IkReal(-1.00000000000000))*(x1220))));
op[139]=((IkReal(4.00000000000000))+(((IkReal(0.106800000000000))*(x1073)))+(((IkReal(-0.109911310000000))*(x1017)))+(((IkReal(-0.109911310000000))*(x1021)))+(((IkReal(0.106800000000000))*(x1041))));
op[140]=((((IkReal(-1.00000000000000))*(x1243)))+(x1220));
op[141]=((x1246)+(x1249)+(((IkReal(-1.00000000000000))*(x1252)))+(((IkReal(-1.00000000000000))*(x1230))));
op[142]=((((IkReal(-0.00349770000000000))*(x1012)))+(x1220)+(((IkReal(-0.000719345000000000))*(x1048)))+(((IkReal(-0.00349770000000000))*(x1011)))+(((IkReal(-0.000719345000000000))*(x1052))));
op[143]=((x1241)+(x1246)+(((IkReal(-1.00000000000000))*(x1254)))+(x1230));
op[144]=((IkReal(-0.817250000000000))+(x1225)+(x1224)+(((IkReal(-1.00000000000000))*(x1229)))+(((IkReal(-1.00000000000000))*(x1228)))+(x1256)+(((IkReal(-1.00000000000000))*(x1259))));
op[145]=((((IkReal(-1.33436934500000))*(x1078)))+(((IkReal(-0.0872823000000000))*(x1013)))+(((IkReal(0.0872823000000000))*(x1079)))+(((IkReal(-1.00000000000000))*(x1226)))+(((IkReal(0.0872823000000000))*(x1046)))+(((IkReal(1.33436934500000))*(x1029)))+(((IkReal(1.33436934500000))*(x1074)))+(((IkReal(-0.0872823000000000))*(x1060)))+(x1234)+(((IkReal(-1.33436934500000))*(x1080))));
op[146]=((IkReal(0.817250000000000))+(((IkReal(-1.00000000000000))*(x1224)))+(x1229)+(x1228)+(((IkReal(-1.00000000000000))*(x1225)))+(x1256)+(((IkReal(-1.00000000000000))*(x1259))));
op[147]=((x1251)+(((IkReal(-1.00000000000000))*(x1250))));
op[148]=((IkReal(1.70000000000000))+(((IkReal(-0.109911310000000))*(x1038)))+(((IkReal(0.109911310000000))*(x1027)))+(((IkReal(-1.00000000000000))*(rxp0_1)*(x1037)))+(((IkReal(0.109911310000000))*(x1069)))+(((IkReal(-0.106800000000000))*(x1062)))+(((rxp0_0)*(x1067)))+(((IkReal(-0.109911310000000))*(x1075)))+(((IkReal(0.106800000000000))*(x1059))));
op[149]=((((IkReal(-1.00000000000000))*(x1251)))+(x1250));
op[150]=((IkReal(0.0327500000000000))+(((IkReal(-1.00000000000000))*(x1224)))+(((IkReal(-1.00000000000000))*(x1235)))+(x1228)+(((IkReal(-1.00000000000000))*(x1260)))+(x1258)+(x1233));
op[151]=((((IkReal(0.000719345000000000))*(x1080)))+(((IkReal(-1.00000000000000))*(rxp1_0)*(x1026)))+(((IkReal(0.00349770000000000))*(x1013)))+(x1226)+(((IkReal(-1.00000000000000))*(rxp0_0)*(x1031)))+(((rxp0_1)*(x1025)))+(((IkReal(-1.00000000000000))*(x1234)))+(((IkReal(-0.000719345000000000))*(x1029)))+(((rxp1_1)*(x1054)))+(((IkReal(-0.000719345000000000))*(x1074))));
op[152]=((IkReal(-0.0327500000000000))+(((IkReal(-1.00000000000000))*(x1233)))+(x1224)+(((IkReal(-1.00000000000000))*(x1260)))+(((IkReal(-1.00000000000000))*(x1228)))+(x1258)+(x1235));
op[153]=((x1223)+(((IkReal(-1.00000000000000))*(x1239)))+(x1255)+(((IkReal(-1.00000000000000))*(x1242)))+(((IkReal(-1.00000000000000))*(x1240))));
op[154]=((((IkReal(-0.00826126969500000))*(x1012)))+(x1221)+(((IkReal(-0.126298058504250))*(x1052)))+(((IkReal(-0.126298058504250))*(x1048)))+(((IkReal(-0.00826126969500000))*(x1011))));
op[155]=((((IkReal(-1.00000000000000))*(x1238)))+(x1240)+(x1223)+(((IkReal(-1.00000000000000))*(x1239)))+(x1253)+(((IkReal(-1.00000000000000))*(x1242))));
op[156]=((IkReal(-0.784500000000000))+(((IkReal(-1.00000000000000))*(x1247)))+(x1221));
op[157]=((((IkReal(0.0104031054915000))*(x1017)))+(((IkReal(-0.0101086200000000))*(x1073)))+(((IkReal(-0.0101086200000000))*(x1041)))+(((IkReal(0.0104031054915000))*(x1021))));
op[158]=((IkReal(-0.784500000000000))+(x1247)+(((IkReal(-1.00000000000000))*(x1221))));
op[159]=((((IkReal(-1.00000000000000))*(x1244)))+(((IkReal(-1.00000000000000))*(x1238)))+(x1222)+(x1253)+(((IkReal(-1.00000000000000))*(x1242))));
op[160]=((((IkReal(0.000331057305000000))*(x1011)))+(((IkReal(6.80860042500000e-5))*(x1052)))+(((IkReal(0.000331057305000000))*(x1012)))+(((IkReal(6.80860042500000e-5))*(x1048)))+(((IkReal(-1.00000000000000))*(x1221))));
op[161]=((((IkReal(-1.00000000000000))*(x1244)))+(((IkReal(-1.00000000000000))*(x1222)))+(x1255)+(((IkReal(-1.00000000000000))*(x1242))));
solvedialyticpoly12qep(op,zeror,numroots);
IkReal j1array[16], cj1array[16], sj1array[16], j2array[16], cj2array[16], sj2array[16], j3array[16], cj3array[16], sj3array[16];
int numsolutions = 0;
for(int ij1 = 0; ij1 < numroots; ij1 += 3)
{
IkReal htj1 = zeror[ij1+0], htj2 = zeror[ij1+1], htj3 = zeror[ij1+2];
j1array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj1)));
j2array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj2)));
j3array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj3)));
IkReal x1262=(htj1)*(htj1);
IkReal x1263=(htj2)*(htj2);
IkReal x1264=(htj3)*(htj3);
cj1array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x1262))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x1262)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1262))))));
cj2array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x1263))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x1263)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1263))))));
cj3array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x1264))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x1264)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1264))))));
sj1array[numsolutions]=((IkReal(2.00000000000000))*(htj1)*(((IKabs(((IkReal(1.00000000000000))+((htj1)*(htj1)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj1)*(htj1))))):(IkReal)1.0e30)));
sj2array[numsolutions]=((IkReal(2.00000000000000))*(htj2)*(((IKabs(((IkReal(1.00000000000000))+((htj2)*(htj2)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj2)*(htj2))))):(IkReal)1.0e30)));
sj3array[numsolutions]=((IkReal(2.00000000000000))*(htj3)*(((IKabs(((IkReal(1.00000000000000))+((htj3)*(htj3)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj3)*(htj3))))):(IkReal)1.0e30)));
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
if( j2array[numsolutions] > IKPI )
{
    j2array[numsolutions]-=IK2PI;
}
else if( j2array[numsolutions] < -IKPI )
{
    j2array[numsolutions]+=IK2PI;
}
if( j3array[numsolutions] > IKPI )
{
    j3array[numsolutions]-=IK2PI;
}
else if( j3array[numsolutions] < -IKPI )
{
    j3array[numsolutions]+=IK2PI;
}
numsolutions++;
}
bool j1valid[16]={true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true};
_nj1 = 16;
_nj2 = 1;
_nj3 = 1;
for(int ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
_ij2[0] = 0; _ij2[1] = -1;
_ij3[0] = 0; _ij3[1] = -1;
for(int iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( !j1valid[iij1] ) { continue; }
if( IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(cj2array[ij1]-cj2array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij1]-sj2array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(cj3array[ij1]-cj3array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij1]-sj3array[iij1]) < IKFAST_SOLUTION_THRESH &&  1 )
{
    j1valid[iij1]=false; _ij1[1] = iij1; _ij2[1] = 0; _ij3[1] = 0;  break; 
}
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];

    j2 = j2array[ij1]; cj2 = cj2array[ij1]; sj2 = sj2array[ij1];

    j3 = j3array[ij1]; cj3 = cj3array[ij1]; sj3 = sj3array[ij1];

{
IkReal dummyeval[1];
dummyeval[0]=(((r21)*(r21))+((r20)*(r20)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(((r21)*(r21))+((r20)*(r20)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(((r21)*(r21))+((r20)*(r20)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
IkReal x1265=((IkReal(1.00000000000000))*(sj3));
if( IKabs(((IkReal(-1.00000000000000))*(r21))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-1.00000000000000))*(r20))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x1266=((IkReal(1.00000000000000))*(IKatan2(((IkReal(-1.00000000000000))*(r21)), ((IkReal(-1.00000000000000))*(r20)))));
if( ((((r21)*(r21))+((r20)*(r20)))) < (IkReal)-0.00001 )
    continue;
if( (((((IKabs(IKabs(IKsqrt((((r21)*(r21))+((r20)*(r20)))))) != 0)?((IkReal)1/(IKabs(IKsqrt((((r21)*(r21))+((r20)*(r20))))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1265)))+(((cj1)*(cj2)*(cj3)))+(((IkReal(-1.00000000000000))*(cj1)*(sj2)*(x1265)))+(((IkReal(-1.00000000000000))*(cj3)*(sj1)*(sj2))))))) < -1-IKFAST_SINCOS_THRESH || (((((IKabs(IKabs(IKsqrt((((r21)*(r21))+((r20)*(r20)))))) != 0)?((IkReal)1/(IKabs(IKsqrt((((r21)*(r21))+((r20)*(r20))))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1265)))+(((cj1)*(cj2)*(cj3)))+(((IkReal(-1.00000000000000))*(cj1)*(sj2)*(x1265)))+(((IkReal(-1.00000000000000))*(cj3)*(sj1)*(sj2))))))) > 1+IKFAST_SINCOS_THRESH )
    continue;
IkReal x1267=IKasin(((((IKabs(IKabs(IKsqrt((((r21)*(r21))+((r20)*(r20)))))) != 0)?((IkReal)1/(IKabs(IKsqrt((((r21)*(r21))+((r20)*(r20))))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1265)))+(((cj1)*(cj2)*(cj3)))+(((IkReal(-1.00000000000000))*(cj1)*(sj2)*(x1265)))+(((IkReal(-1.00000000000000))*(cj3)*(sj1)*(sj2)))))));
j5array[0]=((((IkReal(-1.00000000000000))*(x1266)))+(((IkReal(-1.00000000000000))*(x1267))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
j5array[1]=((IkReal(3.14159265358979))+(((IkReal(-1.00000000000000))*(x1266)))+(x1267));
sj5array[1]=IKsin(j5array[1]);
cj5array[1]=IKcos(j5array[1]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
if( j5array[1] > IKPI )
{
    j5array[1]-=IK2PI;
}
else if( j5array[1] < -IKPI )
{    j5array[1]+=IK2PI;
}
j5valid[1] = true;
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[1];
evalcond[0]=((((IkReal(0.0946500000000000))*(r20)*(IKsin(j5))))+(((IkReal(0.392250000000000))*(cj2)*(sj1)))+(pz)+(((IkReal(0.425000000000000))*(sj1)))+(((IkReal(0.392250000000000))*(cj1)*(sj2)))+(((IkReal(0.0946500000000000))*(r21)*(IKcos(j5)))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst0;
IkReal x1268=((IkReal(20000.0000000000))*(cj5));
IkReal x1269=((IkReal(20000.0000000000))*(sj5));
gconst0=IKsign(((((py)*(r00)*(x1269)))+(((py)*(r01)*(x1268)))+(((IkReal(-1.00000000000000))*(px)*(r11)*(x1268)))+(((IkReal(-1.00000000000000))*(px)*(r10)*(x1269)))));
IkReal x1270=((IkReal(1.00000000000000))*(px));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r10)*(sj5)*(x1270)))+(((py)*(r00)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x1270)))+(((cj5)*(py)*(r01))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst2;
gconst2=IKsign((((((r21)*(r21))*((sj5)*(sj5))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20))))));
dummyeval[0]=(((((r21)*(r21))*((sj5)*(sj5))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst1;
IkReal x1271=(cj5)*(cj5);
IkReal x1272=(sj5)*(sj5);
IkReal x1273=((IkReal(1.00000000000000))*(x1272));
IkReal x1274=((IkReal(2.00000000000000))*(cj5)*(sj5));
IkReal x1275=((IkReal(1.00000000000000))*(x1271));
gconst1=IKsign(((((IkReal(-1.00000000000000))*(x1275)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1274)))+(((IkReal(-1.00000000000000))*(x1273)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1274)))+(((IkReal(-1.00000000000000))*(x1275)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x1273)*((r10)*(r10))))));
IkReal x1276=(cj5)*(cj5);
IkReal x1277=(sj5)*(sj5);
IkReal x1278=((IkReal(1.00000000000000))*(x1277));
IkReal x1279=((IkReal(2.00000000000000))*(cj5)*(sj5));
IkReal x1280=((IkReal(1.00000000000000))*(x1276));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x1278)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x1280)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x1280)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1279)))+(((IkReal(-1.00000000000000))*(x1278)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1279))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1281=((sj1)*(sj5));
IkReal x1282=((sj2)*(sj3));
IkReal x1283=((IkReal(1.00000000000000))*(cj3));
IkReal x1284=((cj2)*(r10));
IkReal x1285=((cj5)*(r11));
IkReal x1286=((cj2)*(sj1));
IkReal x1287=((cj1)*(sj5));
IkReal x1288=((cj5)*(r01));
IkReal x1289=((cj1)*(x1288));
IkReal x1290=((IkReal(1.00000000000000))*(cj2)*(sj3));
if( IKabs(((gconst1)*(((((IkReal(-1.00000000000000))*(r10)*(sj2)*(x1283)*(x1287)))+(((IkReal(-1.00000000000000))*(x1281)*(x1283)*(x1284)))+(((IkReal(-1.00000000000000))*(cj1)*(x1285)*(x1290)))+(((IkReal(-1.00000000000000))*(sj3)*(x1284)*(x1287)))+(((r10)*(x1281)*(x1282)))+(((sj1)*(x1282)*(x1285)))+(((IkReal(-1.00000000000000))*(x1283)*(x1285)*(x1286)))+(((IkReal(-1.00000000000000))*(cj1)*(sj2)*(x1283)*(x1285))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((((IkReal(-1.00000000000000))*(cj2)*(r00)*(x1281)*(x1283)))+(((IkReal(-1.00000000000000))*(r00)*(x1287)*(x1290)))+(((IkReal(-1.00000000000000))*(x1289)*(x1290)))+(((r00)*(x1281)*(x1282)))+(((IkReal(-1.00000000000000))*(sj2)*(x1283)*(x1289)))+(((sj1)*(x1282)*(x1288)))+(((IkReal(-1.00000000000000))*(x1283)*(x1286)*(x1288)))+(((IkReal(-1.00000000000000))*(r00)*(sj2)*(x1283)*(x1287))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst1)*(((((IkReal(-1.00000000000000))*(r10)*(sj2)*(x1283)*(x1287)))+(((IkReal(-1.00000000000000))*(x1281)*(x1283)*(x1284)))+(((IkReal(-1.00000000000000))*(cj1)*(x1285)*(x1290)))+(((IkReal(-1.00000000000000))*(sj3)*(x1284)*(x1287)))+(((r10)*(x1281)*(x1282)))+(((sj1)*(x1282)*(x1285)))+(((IkReal(-1.00000000000000))*(x1283)*(x1285)*(x1286)))+(((IkReal(-1.00000000000000))*(cj1)*(sj2)*(x1283)*(x1285)))))), ((gconst1)*(((((IkReal(-1.00000000000000))*(cj2)*(r00)*(x1281)*(x1283)))+(((IkReal(-1.00000000000000))*(r00)*(x1287)*(x1290)))+(((IkReal(-1.00000000000000))*(x1289)*(x1290)))+(((r00)*(x1281)*(x1282)))+(((IkReal(-1.00000000000000))*(sj2)*(x1283)*(x1289)))+(((sj1)*(x1282)*(x1288)))+(((IkReal(-1.00000000000000))*(x1283)*(x1286)*(x1288)))+(((IkReal(-1.00000000000000))*(r00)*(sj2)*(x1283)*(x1287)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[4];
IkReal x1291=IKcos(j0);
IkReal x1292=IKsin(j0);
IkReal x1293=((cj5)*(r01));
IkReal x1294=((cj5)*(r11));
IkReal x1295=((r00)*(sj5));
IkReal x1296=((IkReal(1.00000000000000))*(cj2));
IkReal x1297=((sj1)*(sj2));
IkReal x1298=((r10)*(sj5));
IkReal x1299=((IkReal(1.00000000000000))*(x1291));
IkReal x1300=((IkReal(1.00000000000000))*(x1292));
IkReal x1301=((IkReal(0.0946500000000000))*(x1291));
IkReal x1302=((IkReal(0.0946500000000000))*(x1292));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1295)*(x1300)))+(((IkReal(-1.00000000000000))*(x1293)*(x1300)))+(((x1291)*(x1298)))+(((x1291)*(x1294))));
evalcond[1]=((IkReal(0.109150000000000))+(((IkReal(-1.00000000000000))*(x1294)*(x1301)))+(((x1295)*(x1302)))+(((IkReal(-1.00000000000000))*(py)*(x1299)))+(((IkReal(-1.00000000000000))*(x1298)*(x1301)))+(((px)*(x1292)))+(((x1293)*(x1302))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1295)*(x1301)))+(((IkReal(-1.00000000000000))*(x1298)*(x1302)))+(((IkReal(-1.00000000000000))*(x1294)*(x1302)))+(((IkReal(0.392250000000000))*(cj1)*(cj2)))+(((IkReal(0.425000000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(px)*(x1299)))+(((IkReal(-1.00000000000000))*(x1293)*(x1301)))+(((IkReal(-1.00000000000000))*(py)*(x1300)))+(((IkReal(-0.392250000000000))*(x1297))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj3)*(sj1)*(x1296)))+(((x1292)*(x1294)))+(((sj3)*(x1297)))+(((x1291)*(x1293)))+(((x1291)*(x1295)))+(((IkReal(-1.00000000000000))*(cj1)*(cj3)*(sj2)))+(((x1292)*(x1298)))+(((IkReal(-1.00000000000000))*(cj1)*(sj3)*(x1296))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst3;
IkReal x1303=((IkReal(1.00000000000000))*(sj0));
IkReal x1304=((cj5)*(r22));
IkReal x1305=((r21)*(sj5));
IkReal x1306=((IkReal(1.00000000000000))*(cj0));
IkReal x1307=((r22)*(sj5));
IkReal x1308=((cj5)*(r20));
gconst3=IKsign(((((IkReal(-1.00000000000000))*(r02)*(x1303)*(x1305)))+(((r02)*(sj0)*(x1308)))+(((r01)*(sj0)*(x1307)))+(((IkReal(-1.00000000000000))*(r12)*(x1306)*(x1308)))+(((cj0)*(r12)*(x1305)))+(((IkReal(-1.00000000000000))*(r11)*(x1306)*(x1307)))+(((cj0)*(r10)*(x1304)))+(((IkReal(-1.00000000000000))*(r00)*(x1303)*(x1304)))));
IkReal x1309=((IkReal(1.00000000000000))*(sj0));
IkReal x1310=((cj5)*(r22));
IkReal x1311=((r21)*(sj5));
IkReal x1312=((IkReal(1.00000000000000))*(cj0));
IkReal x1313=((r22)*(sj5));
IkReal x1314=((cj5)*(r20));
dummyeval[0]=((((cj0)*(r12)*(x1311)))+(((IkReal(-1.00000000000000))*(r11)*(x1312)*(x1313)))+(((IkReal(-1.00000000000000))*(r02)*(x1309)*(x1311)))+(((IkReal(-1.00000000000000))*(r00)*(x1309)*(x1310)))+(((r01)*(sj0)*(x1313)))+(((IkReal(-1.00000000000000))*(r12)*(x1312)*(x1314)))+(((cj0)*(r10)*(x1310)))+(((r02)*(sj0)*(x1314))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign((((((r21)*(r21))*((sj5)*(sj5))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20))))));
dummyeval[0]=(((((r21)*(r21))*((sj5)*(sj5))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1315=((cj3)*(sj2));
IkReal x1316=((cj2)*(sj3));
IkReal x1317=((r21)*(sj5));
IkReal x1318=((IkReal(1.00000000000000))*(cj1));
IkReal x1319=((cj5)*(r20));
IkReal x1320=((r22)*(x1318));
IkReal x1321=((sj1)*(sj2)*(sj3));
IkReal x1322=((cj2)*(cj3)*(sj1));
if( IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(r22)*(x1322)))+(((r22)*(x1321)))+(((IkReal(-1.00000000000000))*(x1315)*(x1320)))+(((IkReal(-1.00000000000000))*(x1316)*(x1320))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(x1319)*(x1321)))+(((x1317)*(x1321)))+(((IkReal(-1.00000000000000))*(x1315)*(x1317)*(x1318)))+(((IkReal(-1.00000000000000))*(x1316)*(x1317)*(x1318)))+(((x1319)*(x1322)))+(((cj1)*(x1316)*(x1319)))+(((cj1)*(x1315)*(x1319)))+(((IkReal(-1.00000000000000))*(x1317)*(x1322))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst4)*(((((IkReal(-1.00000000000000))*(r22)*(x1322)))+(((r22)*(x1321)))+(((IkReal(-1.00000000000000))*(x1315)*(x1320)))+(((IkReal(-1.00000000000000))*(x1316)*(x1320)))))), ((gconst4)*(((((IkReal(-1.00000000000000))*(x1319)*(x1321)))+(((x1317)*(x1321)))+(((IkReal(-1.00000000000000))*(x1315)*(x1317)*(x1318)))+(((IkReal(-1.00000000000000))*(x1316)*(x1317)*(x1318)))+(((x1319)*(x1322)))+(((cj1)*(x1316)*(x1319)))+(((cj1)*(x1315)*(x1319)))+(((IkReal(-1.00000000000000))*(x1317)*(x1322)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1323=IKsin(j4);
IkReal x1324=IKcos(j4);
IkReal x1325=((IkReal(1.00000000000000))*(cj2));
IkReal x1326=((cj3)*(sj1));
IkReal x1327=((cj1)*(sj3));
IkReal x1328=((IkReal(1.00000000000000))*(cj5));
IkReal x1329=((sj1)*(sj3));
IkReal x1330=((IkReal(1.00000000000000))*(r01));
IkReal x1331=((cj1)*(cj3));
IkReal x1332=((r11)*(sj5));
IkReal x1333=((r01)*(sj5));
IkReal x1334=((r21)*(sj5));
IkReal x1335=((cj0)*(x1323));
IkReal x1336=((cj5)*(x1323));
IkReal x1337=((sj0)*(x1324));
IkReal x1338=((IkReal(1.00000000000000))*(x1323));
IkReal x1339=((cj0)*(x1324));
IkReal x1340=((sj0)*(sj5)*(x1323));
IkReal x1341=((IkReal(1.00000000000000))*(x1339));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1334)*(x1338)))+(((r20)*(x1336)))+(((r22)*(x1324))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj5)*(x1330)*(x1337)))+(((IkReal(-1.00000000000000))*(r02)*(sj0)*(x1338)))+(((IkReal(-1.00000000000000))*(r10)*(x1328)*(x1339)))+(((r12)*(x1335)))+(((x1332)*(x1339)))+(((cj5)*(r00)*(x1337))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(x1328)*(x1335)))+(((sj0)*(x1323)*(x1332)))+(((IkReal(-1.00000000000000))*(r02)*(x1341)))+(((IkReal(-1.00000000000000))*(r10)*(sj0)*(x1323)*(x1328)))+(((IkReal(-1.00000000000000))*(r12)*(x1337)))+(((x1333)*(x1335))));
evalcond[3]=((IkReal(1.00000000000000))+(((r02)*(x1337)))+(((IkReal(-1.00000000000000))*(x1330)*(x1340)))+(((IkReal(-1.00000000000000))*(r10)*(x1328)*(x1335)))+(((x1332)*(x1335)))+(((r00)*(sj0)*(x1336)))+(((IkReal(-1.00000000000000))*(r12)*(x1341))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r22)*(x1338)))+(((IkReal(-1.00000000000000))*(x1325)*(x1326)))+(((cj5)*(r20)*(x1324)))+(((IkReal(-1.00000000000000))*(sj2)*(x1331)))+(((IkReal(-1.00000000000000))*(x1325)*(x1327)))+(((IkReal(-1.00000000000000))*(x1324)*(x1334)))+(((sj2)*(x1329))));
evalcond[5]=((((sj2)*(x1326)))+(((cj2)*(x1329)))+(((r12)*(sj0)*(x1323)))+(((x1333)*(x1339)))+(((IkReal(-1.00000000000000))*(r10)*(x1328)*(x1337)))+(((IkReal(-1.00000000000000))*(r00)*(x1328)*(x1339)))+(((sj2)*(x1327)))+(((r02)*(x1335)))+(((IkReal(-1.00000000000000))*(x1325)*(x1331)))+(((x1332)*(x1337))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((gconst3)*(r22))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((r21)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r20))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst3)*(r22)), ((gconst3)*(((((r21)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r20)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1342=IKsin(j4);
IkReal x1343=IKcos(j4);
IkReal x1344=((IkReal(1.00000000000000))*(cj2));
IkReal x1345=((cj3)*(sj1));
IkReal x1346=((cj1)*(sj3));
IkReal x1347=((IkReal(1.00000000000000))*(cj5));
IkReal x1348=((sj1)*(sj3));
IkReal x1349=((IkReal(1.00000000000000))*(r01));
IkReal x1350=((cj1)*(cj3));
IkReal x1351=((r11)*(sj5));
IkReal x1352=((r01)*(sj5));
IkReal x1353=((r21)*(sj5));
IkReal x1354=((cj0)*(x1342));
IkReal x1355=((cj5)*(x1342));
IkReal x1356=((sj0)*(x1343));
IkReal x1357=((IkReal(1.00000000000000))*(x1342));
IkReal x1358=((cj0)*(x1343));
IkReal x1359=((sj0)*(sj5)*(x1342));
IkReal x1360=((IkReal(1.00000000000000))*(x1358));
evalcond[0]=((((r20)*(x1355)))+(((r22)*(x1343)))+(((IkReal(-1.00000000000000))*(x1353)*(x1357))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r02)*(sj0)*(x1357)))+(((x1351)*(x1358)))+(((IkReal(-1.00000000000000))*(sj5)*(x1349)*(x1356)))+(((cj5)*(r00)*(x1356)))+(((IkReal(-1.00000000000000))*(r10)*(x1347)*(x1358)))+(((r12)*(x1354))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(sj0)*(x1342)*(x1347)))+(((IkReal(-1.00000000000000))*(r00)*(x1347)*(x1354)))+(((IkReal(-1.00000000000000))*(r12)*(x1356)))+(((sj0)*(x1342)*(x1351)))+(((IkReal(-1.00000000000000))*(r02)*(x1360)))+(((x1352)*(x1354))));
evalcond[3]=((IkReal(1.00000000000000))+(((r02)*(x1356)))+(((x1351)*(x1354)))+(((IkReal(-1.00000000000000))*(r12)*(x1360)))+(((r00)*(sj0)*(x1355)))+(((IkReal(-1.00000000000000))*(x1349)*(x1359)))+(((IkReal(-1.00000000000000))*(r10)*(x1347)*(x1354))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1344)*(x1345)))+(((sj2)*(x1348)))+(((IkReal(-1.00000000000000))*(sj2)*(x1350)))+(((IkReal(-1.00000000000000))*(x1344)*(x1346)))+(((IkReal(-1.00000000000000))*(r22)*(x1357)))+(((cj5)*(r20)*(x1343)))+(((IkReal(-1.00000000000000))*(x1343)*(x1353))));
evalcond[5]=((((r02)*(x1354)))+(((IkReal(-1.00000000000000))*(x1344)*(x1350)))+(((sj2)*(x1346)))+(((sj2)*(x1345)))+(((cj2)*(x1348)))+(((IkReal(-1.00000000000000))*(r10)*(x1347)*(x1356)))+(((x1352)*(x1358)))+(((IkReal(-1.00000000000000))*(r00)*(x1347)*(x1358)))+(((x1351)*(x1356)))+(((r12)*(sj0)*(x1342))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1361=((cj3)*(sj2));
IkReal x1362=((cj3)*(sj1));
IkReal x1363=((cj2)*(sj3));
IkReal x1364=((r21)*(sj5));
IkReal x1365=((IkReal(1.00000000000000))*(cj1));
IkReal x1366=((cj5)*(r20));
IkReal x1367=((IkReal(1.00000000000000))*(cj2));
IkReal x1368=((r22)*(x1365));
IkReal x1369=((cj2)*(x1366));
IkReal x1370=((sj1)*(sj2)*(sj3));
if( IKabs(((gconst2)*(((((IkReal(-1.00000000000000))*(x1361)*(x1368)))+(((r22)*(x1370)))+(((IkReal(-1.00000000000000))*(r22)*(x1362)*(x1367)))+(((IkReal(-1.00000000000000))*(x1363)*(x1368))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((x1362)*(x1369)))+(((x1364)*(x1370)))+(((IkReal(-1.00000000000000))*(x1362)*(x1364)*(x1367)))+(((cj1)*(x1361)*(x1366)))+(((cj1)*(x1363)*(x1366)))+(((IkReal(-1.00000000000000))*(x1361)*(x1364)*(x1365)))+(((IkReal(-1.00000000000000))*(x1363)*(x1364)*(x1365)))+(((IkReal(-1.00000000000000))*(x1366)*(x1370))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst2)*(((((IkReal(-1.00000000000000))*(x1361)*(x1368)))+(((r22)*(x1370)))+(((IkReal(-1.00000000000000))*(r22)*(x1362)*(x1367)))+(((IkReal(-1.00000000000000))*(x1363)*(x1368)))))), ((gconst2)*(((((x1362)*(x1369)))+(((x1364)*(x1370)))+(((IkReal(-1.00000000000000))*(x1362)*(x1364)*(x1367)))+(((cj1)*(x1361)*(x1366)))+(((cj1)*(x1363)*(x1366)))+(((IkReal(-1.00000000000000))*(x1361)*(x1364)*(x1365)))+(((IkReal(-1.00000000000000))*(x1363)*(x1364)*(x1365)))+(((IkReal(-1.00000000000000))*(x1366)*(x1370)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x1371=IKsin(j4);
IkReal x1372=IKcos(j4);
IkReal x1373=((IkReal(1.00000000000000))*(cj1));
IkReal x1374=((cj5)*(r20));
IkReal x1375=((IkReal(1.00000000000000))*(r21)*(sj5));
evalcond[0]=((((r22)*(x1372)))+(((x1371)*(x1374)))+(((IkReal(-1.00000000000000))*(x1371)*(x1375))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj2)*(cj3)*(sj1)))+(((IkReal(-1.00000000000000))*(x1372)*(x1375)))+(((IkReal(-1.00000000000000))*(cj2)*(sj3)*(x1373)))+(((sj1)*(sj2)*(sj3)))+(((IkReal(-1.00000000000000))*(cj3)*(sj2)*(x1373)))+(((IkReal(-1.00000000000000))*(r22)*(x1371)))+(((x1372)*(x1374))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst5;
IkReal x1376=((IkReal(20000.0000000000))*(cj5));
IkReal x1377=((IkReal(20000.0000000000))*(sj5));
gconst5=IKsign(((((IkReal(-1.00000000000000))*(px)*(r10)*(x1377)))+(((py)*(r00)*(x1377)))+(((py)*(r01)*(x1376)))+(((IkReal(-1.00000000000000))*(px)*(r11)*(x1376)))));
IkReal x1378=((IkReal(1.00000000000000))*(px));
dummyeval[0]=((((IkReal(-1.00000000000000))*(cj5)*(r11)*(x1378)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x1378)))+(((py)*(r00)*(sj5)))+(((cj5)*(py)*(r01))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst6;
IkReal x1379=(sj5)*(sj5);
IkReal x1380=(cj5)*(cj5);
IkReal x1381=((cj4)*(sj5));
IkReal x1382=((IkReal(1.00000000000000))*(r02));
IkReal x1383=((r01)*(r10));
IkReal x1384=((cj4)*(cj5));
IkReal x1385=((sj4)*(x1380));
IkReal x1386=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x1387=((sj4)*(x1379));
gconst6=IKsign(((((x1383)*(x1385)))+(((IkReal(-1.00000000000000))*(r10)*(x1381)*(x1382)))+(((IkReal(-1.00000000000000))*(r11)*(x1382)*(x1384)))+(((r00)*(r12)*(x1381)))+(((IkReal(-1.00000000000000))*(x1385)*(x1386)))+(((x1383)*(x1387)))+(((IkReal(-1.00000000000000))*(x1386)*(x1387)))+(((r01)*(r12)*(x1384)))));
IkReal x1388=(sj5)*(sj5);
IkReal x1389=(cj5)*(cj5);
IkReal x1390=((cj4)*(sj5));
IkReal x1391=((IkReal(1.00000000000000))*(r02));
IkReal x1392=((r01)*(r10));
IkReal x1393=((cj4)*(cj5));
IkReal x1394=((sj4)*(x1389));
IkReal x1395=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x1396=((sj4)*(x1388));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r11)*(x1391)*(x1393)))+(((IkReal(-1.00000000000000))*(x1394)*(x1395)))+(((x1392)*(x1396)))+(((r00)*(r12)*(x1390)))+(((x1392)*(x1394)))+(((IkReal(-1.00000000000000))*(x1395)*(x1396)))+(((r01)*(r12)*(x1393)))+(((IkReal(-1.00000000000000))*(r10)*(x1390)*(x1391))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
if( IKabs(((gconst6)*(((((cj5)*(r11)))+(((r10)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((cj5)*(r01)))+(((r00)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst6)*(((((cj5)*(r11)))+(((r10)*(sj5)))))), ((gconst6)*(((((cj5)*(r01)))+(((r00)*(sj5)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[8];
IkReal x1397=IKcos(j0);
IkReal x1398=IKsin(j0);
IkReal x1399=((cj5)*(r01));
IkReal x1400=((IkReal(0.0946500000000000))*(cj5));
IkReal x1401=((IkReal(1.00000000000000))*(cj2));
IkReal x1402=((cj3)*(sj1));
IkReal x1403=((cj5)*(sj4));
IkReal x1404=((cj1)*(sj3));
IkReal x1405=((sj4)*(sj5));
IkReal x1406=((r02)*(sj4));
IkReal x1407=((cj1)*(cj3));
IkReal x1408=((sj1)*(sj3));
IkReal x1409=((cj4)*(cj5));
IkReal x1410=((cj4)*(sj5));
IkReal x1411=((r10)*(sj5));
IkReal x1412=((cj4)*(r02));
IkReal x1413=((r00)*(sj5));
IkReal x1414=((cj4)*(r12));
IkReal x1415=((r12)*(sj4));
IkReal x1416=((IkReal(1.00000000000000))*(x1397));
IkReal x1417=((IkReal(1.00000000000000))*(x1398));
IkReal x1418=((r11)*(x1397));
IkReal x1419=((sj5)*(x1397));
IkReal x1420=((IkReal(0.0946500000000000))*(x1398));
IkReal x1421=((r11)*(x1398));
IkReal x1422=((r00)*(x1398));
evalcond[0]=((((x1397)*(x1411)))+(((IkReal(-1.00000000000000))*(x1399)*(x1417)))+(((cj5)*(x1418)))+(((IkReal(-1.00000000000000))*(x1413)*(x1417))));
evalcond[1]=((IkReal(0.109150000000000))+(((IkReal(-1.00000000000000))*(py)*(x1416)))+(((IkReal(-1.00000000000000))*(x1400)*(x1418)))+(((x1413)*(x1420)))+(((x1399)*(x1420)))+(((IkReal(-0.0946500000000000))*(x1397)*(x1411)))+(((px)*(x1398))));
evalcond[2]=((((x1410)*(x1418)))+(((IkReal(-1.00000000000000))*(r01)*(x1410)*(x1417)))+(((IkReal(-1.00000000000000))*(x1406)*(x1417)))+(((x1397)*(x1415)))+(((x1409)*(x1422)))+(((IkReal(-1.00000000000000))*(r10)*(x1409)*(x1416))));
evalcond[3]=((((x1405)*(x1421)))+(((IkReal(-1.00000000000000))*(x1412)*(x1416)))+(((IkReal(-1.00000000000000))*(x1414)*(x1417)))+(((r01)*(x1397)*(x1405)))+(((IkReal(-1.00000000000000))*(r00)*(x1403)*(x1416)))+(((IkReal(-1.00000000000000))*(r10)*(x1403)*(x1417))));
evalcond[4]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1414)*(x1416)))+(((x1398)*(x1412)))+(((IkReal(-1.00000000000000))*(r01)*(x1405)*(x1417)))+(((x1403)*(x1422)))+(((IkReal(-1.00000000000000))*(r10)*(x1403)*(x1416)))+(((x1405)*(x1418))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1411)*(x1420)))+(((IkReal(-1.00000000000000))*(py)*(x1417)))+(((IkReal(-0.0946500000000000))*(x1397)*(x1399)))+(((IkReal(0.392250000000000))*(cj1)*(cj2)))+(((IkReal(-0.0946500000000000))*(x1397)*(x1413)))+(((IkReal(-0.392250000000000))*(sj1)*(sj2)))+(((IkReal(0.425000000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(x1400)*(x1421)))+(((IkReal(-1.00000000000000))*(px)*(x1416))));
evalcond[6]=((((x1398)*(x1411)))+(((IkReal(-1.00000000000000))*(x1401)*(x1402)))+(((sj2)*(x1408)))+(((cj5)*(x1421)))+(((x1397)*(x1399)))+(((IkReal(-1.00000000000000))*(sj2)*(x1407)))+(((IkReal(-1.00000000000000))*(x1401)*(x1404)))+(((x1397)*(x1413))));
evalcond[7]=((((sj2)*(x1404)))+(((IkReal(-1.00000000000000))*(x1401)*(x1407)))+(((IkReal(-1.00000000000000))*(r00)*(x1409)*(x1416)))+(((x1398)*(x1415)))+(((cj2)*(x1408)))+(((IkReal(-1.00000000000000))*(r10)*(x1409)*(x1417)))+(((x1410)*(x1421)))+(((sj2)*(x1402)))+(((x1397)*(x1406)))+(((r01)*(x1397)*(x1410))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1423=((IkReal(2183.00000000000))*(sj5));
IkReal x1424=((IkReal(2183.00000000000))*(cj5));
if( IKabs(((gconst5)*(((((r10)*(x1423)))+(((r11)*(x1424))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((r00)*(x1423)))+(((r01)*(x1424))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst5)*(((((r10)*(x1423)))+(((r11)*(x1424)))))), ((gconst5)*(((((r00)*(x1423)))+(((r01)*(x1424)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[8];
IkReal x1425=IKcos(j0);
IkReal x1426=IKsin(j0);
IkReal x1427=((cj5)*(r01));
IkReal x1428=((IkReal(0.0946500000000000))*(cj5));
IkReal x1429=((IkReal(1.00000000000000))*(cj2));
IkReal x1430=((cj3)*(sj1));
IkReal x1431=((cj5)*(sj4));
IkReal x1432=((cj1)*(sj3));
IkReal x1433=((sj4)*(sj5));
IkReal x1434=((r02)*(sj4));
IkReal x1435=((cj1)*(cj3));
IkReal x1436=((sj1)*(sj3));
IkReal x1437=((cj4)*(cj5));
IkReal x1438=((cj4)*(sj5));
IkReal x1439=((r10)*(sj5));
IkReal x1440=((cj4)*(r02));
IkReal x1441=((r00)*(sj5));
IkReal x1442=((cj4)*(r12));
IkReal x1443=((r12)*(sj4));
IkReal x1444=((IkReal(1.00000000000000))*(x1425));
IkReal x1445=((IkReal(1.00000000000000))*(x1426));
IkReal x1446=((r11)*(x1425));
IkReal x1447=((sj5)*(x1425));
IkReal x1448=((IkReal(0.0946500000000000))*(x1426));
IkReal x1449=((r11)*(x1426));
IkReal x1450=((r00)*(x1426));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1441)*(x1445)))+(((x1425)*(x1439)))+(((IkReal(-1.00000000000000))*(x1427)*(x1445)))+(((cj5)*(x1446))));
evalcond[1]=((IkReal(0.109150000000000))+(((IkReal(-1.00000000000000))*(py)*(x1444)))+(((IkReal(-1.00000000000000))*(x1428)*(x1446)))+(((x1441)*(x1448)))+(((IkReal(-0.0946500000000000))*(x1425)*(x1439)))+(((px)*(x1426)))+(((x1427)*(x1448))));
evalcond[2]=((((x1438)*(x1446)))+(((x1425)*(x1443)))+(((IkReal(-1.00000000000000))*(r01)*(x1438)*(x1445)))+(((IkReal(-1.00000000000000))*(r10)*(x1437)*(x1444)))+(((x1437)*(x1450)))+(((IkReal(-1.00000000000000))*(x1434)*(x1445))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1440)*(x1444)))+(((IkReal(-1.00000000000000))*(r00)*(x1431)*(x1444)))+(((IkReal(-1.00000000000000))*(r10)*(x1431)*(x1445)))+(((x1433)*(x1449)))+(((IkReal(-1.00000000000000))*(x1442)*(x1445)))+(((r01)*(x1425)*(x1433))));
evalcond[4]=((IkReal(1.00000000000000))+(((x1431)*(x1450)))+(((IkReal(-1.00000000000000))*(r10)*(x1431)*(x1444)))+(((IkReal(-1.00000000000000))*(x1442)*(x1444)))+(((IkReal(-1.00000000000000))*(r01)*(x1433)*(x1445)))+(((x1433)*(x1446)))+(((x1426)*(x1440))));
evalcond[5]=((((IkReal(0.392250000000000))*(cj1)*(cj2)))+(((IkReal(-0.0946500000000000))*(x1425)*(x1441)))+(((IkReal(-1.00000000000000))*(py)*(x1445)))+(((IkReal(-0.392250000000000))*(sj1)*(sj2)))+(((IkReal(-1.00000000000000))*(x1428)*(x1449)))+(((IkReal(0.425000000000000))*(cj1)))+(((IkReal(-0.0946500000000000))*(x1425)*(x1427)))+(((IkReal(-1.00000000000000))*(px)*(x1444)))+(((IkReal(-1.00000000000000))*(x1439)*(x1448))));
evalcond[6]=((((IkReal(-1.00000000000000))*(sj2)*(x1435)))+(((IkReal(-1.00000000000000))*(x1429)*(x1432)))+(((x1425)*(x1441)))+(((sj2)*(x1436)))+(((x1425)*(x1427)))+(((IkReal(-1.00000000000000))*(x1429)*(x1430)))+(((cj5)*(x1449)))+(((x1426)*(x1439))));
evalcond[7]=((((sj2)*(x1432)))+(((IkReal(-1.00000000000000))*(x1429)*(x1435)))+(((x1426)*(x1443)))+(((IkReal(-1.00000000000000))*(r10)*(x1437)*(x1445)))+(((x1425)*(x1434)))+(((IkReal(-1.00000000000000))*(r00)*(x1437)*(x1444)))+(((sj2)*(x1430)))+(((r01)*(x1425)*(x1438)))+(((cj2)*(x1436)))+(((x1438)*(x1449))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1451=((IkReal(2183.00000000000))*(sj5));
IkReal x1452=((IkReal(2183.00000000000))*(cj5));
if( IKabs(((gconst0)*(((((r11)*(x1452)))+(((r10)*(x1451))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((((r01)*(x1452)))+(((r00)*(x1451))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst0)*(((((r11)*(x1452)))+(((r10)*(x1451)))))), ((gconst0)*(((((r01)*(x1452)))+(((r00)*(x1451)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[4];
IkReal x1453=IKcos(j0);
IkReal x1454=IKsin(j0);
IkReal x1455=((cj5)*(r01));
IkReal x1456=((cj5)*(r11));
IkReal x1457=((r00)*(sj5));
IkReal x1458=((IkReal(1.00000000000000))*(cj2));
IkReal x1459=((sj1)*(sj2));
IkReal x1460=((r10)*(sj5));
IkReal x1461=((IkReal(1.00000000000000))*(x1453));
IkReal x1462=((IkReal(1.00000000000000))*(x1454));
IkReal x1463=((IkReal(0.0946500000000000))*(x1453));
IkReal x1464=((IkReal(0.0946500000000000))*(x1454));
evalcond[0]=((((x1453)*(x1456)))+(((IkReal(-1.00000000000000))*(x1457)*(x1462)))+(((IkReal(-1.00000000000000))*(x1455)*(x1462)))+(((x1453)*(x1460))));
evalcond[1]=((IkReal(0.109150000000000))+(((IkReal(-1.00000000000000))*(x1456)*(x1463)))+(((x1457)*(x1464)))+(((IkReal(-1.00000000000000))*(py)*(x1461)))+(((x1455)*(x1464)))+(((IkReal(-1.00000000000000))*(x1460)*(x1463)))+(((px)*(x1454))));
evalcond[2]=((((IkReal(0.392250000000000))*(cj1)*(cj2)))+(((IkReal(-1.00000000000000))*(x1457)*(x1463)))+(((IkReal(-1.00000000000000))*(x1460)*(x1464)))+(((IkReal(-0.392250000000000))*(x1459)))+(((IkReal(0.425000000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(x1456)*(x1464)))+(((IkReal(-1.00000000000000))*(x1455)*(x1463)))+(((IkReal(-1.00000000000000))*(px)*(x1461)))+(((IkReal(-1.00000000000000))*(py)*(x1462))));
evalcond[3]=((((x1454)*(x1460)))+(((x1454)*(x1456)))+(((x1453)*(x1457)))+(((IkReal(-1.00000000000000))*(cj1)*(cj3)*(sj2)))+(((sj3)*(x1459)))+(((IkReal(-1.00000000000000))*(cj1)*(sj3)*(x1458)))+(((x1453)*(x1455)))+(((IkReal(-1.00000000000000))*(cj3)*(sj1)*(x1458))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst3;
IkReal x1465=((IkReal(1.00000000000000))*(sj0));
IkReal x1466=((cj5)*(r22));
IkReal x1467=((r21)*(sj5));
IkReal x1468=((IkReal(1.00000000000000))*(cj0));
IkReal x1469=((r22)*(sj5));
IkReal x1470=((cj5)*(r20));
gconst3=IKsign(((((r01)*(sj0)*(x1469)))+(((IkReal(-1.00000000000000))*(r02)*(x1465)*(x1467)))+(((cj0)*(r12)*(x1467)))+(((IkReal(-1.00000000000000))*(r12)*(x1468)*(x1470)))+(((cj0)*(r10)*(x1466)))+(((r02)*(sj0)*(x1470)))+(((IkReal(-1.00000000000000))*(r11)*(x1468)*(x1469)))+(((IkReal(-1.00000000000000))*(r00)*(x1465)*(x1466)))));
IkReal x1471=((IkReal(1.00000000000000))*(sj0));
IkReal x1472=((cj5)*(r22));
IkReal x1473=((r21)*(sj5));
IkReal x1474=((IkReal(1.00000000000000))*(cj0));
IkReal x1475=((r22)*(sj5));
IkReal x1476=((cj5)*(r20));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r12)*(x1474)*(x1476)))+(((IkReal(-1.00000000000000))*(r02)*(x1471)*(x1473)))+(((cj0)*(r10)*(x1472)))+(((r02)*(sj0)*(x1476)))+(((IkReal(-1.00000000000000))*(r00)*(x1471)*(x1472)))+(((IkReal(-1.00000000000000))*(r11)*(x1474)*(x1475)))+(((r01)*(sj0)*(x1475)))+(((cj0)*(r12)*(x1473))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign((((((r21)*(r21))*((sj5)*(sj5))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20))))));
dummyeval[0]=(((((r21)*(r21))*((sj5)*(sj5))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1477=((cj3)*(sj2));
IkReal x1478=((cj2)*(sj3));
IkReal x1479=((r21)*(sj5));
IkReal x1480=((IkReal(1.00000000000000))*(cj1));
IkReal x1481=((cj5)*(r20));
IkReal x1482=((r22)*(x1480));
IkReal x1483=((sj1)*(sj2)*(sj3));
IkReal x1484=((cj2)*(cj3)*(sj1));
if( IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(x1477)*(x1482)))+(((IkReal(-1.00000000000000))*(x1478)*(x1482)))+(((IkReal(-1.00000000000000))*(r22)*(x1484)))+(((r22)*(x1483))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(x1478)*(x1479)*(x1480)))+(((IkReal(-1.00000000000000))*(x1477)*(x1479)*(x1480)))+(((IkReal(-1.00000000000000))*(x1481)*(x1483)))+(((cj1)*(x1478)*(x1481)))+(((cj1)*(x1477)*(x1481)))+(((x1481)*(x1484)))+(((x1479)*(x1483)))+(((IkReal(-1.00000000000000))*(x1479)*(x1484))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst4)*(((((IkReal(-1.00000000000000))*(x1477)*(x1482)))+(((IkReal(-1.00000000000000))*(x1478)*(x1482)))+(((IkReal(-1.00000000000000))*(r22)*(x1484)))+(((r22)*(x1483)))))), ((gconst4)*(((((IkReal(-1.00000000000000))*(x1478)*(x1479)*(x1480)))+(((IkReal(-1.00000000000000))*(x1477)*(x1479)*(x1480)))+(((IkReal(-1.00000000000000))*(x1481)*(x1483)))+(((cj1)*(x1478)*(x1481)))+(((cj1)*(x1477)*(x1481)))+(((x1481)*(x1484)))+(((x1479)*(x1483)))+(((IkReal(-1.00000000000000))*(x1479)*(x1484)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1485=IKsin(j4);
IkReal x1486=IKcos(j4);
IkReal x1487=((IkReal(1.00000000000000))*(cj2));
IkReal x1488=((cj3)*(sj1));
IkReal x1489=((cj1)*(sj3));
IkReal x1490=((IkReal(1.00000000000000))*(cj5));
IkReal x1491=((sj1)*(sj3));
IkReal x1492=((IkReal(1.00000000000000))*(r01));
IkReal x1493=((cj1)*(cj3));
IkReal x1494=((r11)*(sj5));
IkReal x1495=((r01)*(sj5));
IkReal x1496=((r21)*(sj5));
IkReal x1497=((cj0)*(x1485));
IkReal x1498=((cj5)*(x1485));
IkReal x1499=((sj0)*(x1486));
IkReal x1500=((IkReal(1.00000000000000))*(x1485));
IkReal x1501=((cj0)*(x1486));
IkReal x1502=((sj0)*(sj5)*(x1485));
IkReal x1503=((IkReal(1.00000000000000))*(x1501));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1496)*(x1500)))+(((r22)*(x1486)))+(((r20)*(x1498))));
evalcond[1]=((((x1494)*(x1501)))+(((IkReal(-1.00000000000000))*(r10)*(x1490)*(x1501)))+(((cj5)*(r00)*(x1499)))+(((r12)*(x1497)))+(((IkReal(-1.00000000000000))*(sj5)*(x1492)*(x1499)))+(((IkReal(-1.00000000000000))*(r02)*(sj0)*(x1500))));
evalcond[2]=((((x1495)*(x1497)))+(((IkReal(-1.00000000000000))*(r12)*(x1499)))+(((IkReal(-1.00000000000000))*(r02)*(x1503)))+(((IkReal(-1.00000000000000))*(r00)*(x1490)*(x1497)))+(((IkReal(-1.00000000000000))*(r10)*(sj0)*(x1485)*(x1490)))+(((sj0)*(x1485)*(x1494))));
evalcond[3]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r10)*(x1490)*(x1497)))+(((r02)*(x1499)))+(((r00)*(sj0)*(x1498)))+(((x1494)*(x1497)))+(((IkReal(-1.00000000000000))*(r12)*(x1503)))+(((IkReal(-1.00000000000000))*(x1492)*(x1502))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1486)*(x1496)))+(((cj5)*(r20)*(x1486)))+(((IkReal(-1.00000000000000))*(r22)*(x1500)))+(((IkReal(-1.00000000000000))*(x1487)*(x1489)))+(((IkReal(-1.00000000000000))*(x1487)*(x1488)))+(((sj2)*(x1491)))+(((IkReal(-1.00000000000000))*(sj2)*(x1493))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r10)*(x1490)*(x1499)))+(((sj2)*(x1489)))+(((IkReal(-1.00000000000000))*(x1487)*(x1493)))+(((sj2)*(x1488)))+(((x1495)*(x1501)))+(((IkReal(-1.00000000000000))*(r00)*(x1490)*(x1501)))+(((cj2)*(x1491)))+(((r12)*(sj0)*(x1485)))+(((x1494)*(x1499)))+(((r02)*(x1497))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((gconst3)*(r22))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((r21)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r20))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst3)*(r22)), ((gconst3)*(((((r21)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r20)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1504=IKsin(j4);
IkReal x1505=IKcos(j4);
IkReal x1506=((IkReal(1.00000000000000))*(cj2));
IkReal x1507=((cj3)*(sj1));
IkReal x1508=((cj1)*(sj3));
IkReal x1509=((IkReal(1.00000000000000))*(cj5));
IkReal x1510=((sj1)*(sj3));
IkReal x1511=((IkReal(1.00000000000000))*(r01));
IkReal x1512=((cj1)*(cj3));
IkReal x1513=((r11)*(sj5));
IkReal x1514=((r01)*(sj5));
IkReal x1515=((r21)*(sj5));
IkReal x1516=((cj0)*(x1504));
IkReal x1517=((cj5)*(x1504));
IkReal x1518=((sj0)*(x1505));
IkReal x1519=((IkReal(1.00000000000000))*(x1504));
IkReal x1520=((cj0)*(x1505));
IkReal x1521=((sj0)*(sj5)*(x1504));
IkReal x1522=((IkReal(1.00000000000000))*(x1520));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1515)*(x1519)))+(((r22)*(x1505)))+(((r20)*(x1517))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r10)*(x1509)*(x1520)))+(((x1513)*(x1520)))+(((r12)*(x1516)))+(((IkReal(-1.00000000000000))*(r02)*(sj0)*(x1519)))+(((IkReal(-1.00000000000000))*(sj5)*(x1511)*(x1518)))+(((cj5)*(r00)*(x1518))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(sj0)*(x1504)*(x1509)))+(((IkReal(-1.00000000000000))*(r02)*(x1522)))+(((IkReal(-1.00000000000000))*(r12)*(x1518)))+(((IkReal(-1.00000000000000))*(r00)*(x1509)*(x1516)))+(((x1514)*(x1516)))+(((sj0)*(x1504)*(x1513))));
evalcond[3]=((IkReal(1.00000000000000))+(((r00)*(sj0)*(x1517)))+(((IkReal(-1.00000000000000))*(r10)*(x1509)*(x1516)))+(((r02)*(x1518)))+(((IkReal(-1.00000000000000))*(x1511)*(x1521)))+(((IkReal(-1.00000000000000))*(r12)*(x1522)))+(((x1513)*(x1516))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1505)*(x1515)))+(((IkReal(-1.00000000000000))*(r22)*(x1519)))+(((IkReal(-1.00000000000000))*(sj2)*(x1512)))+(((IkReal(-1.00000000000000))*(x1506)*(x1507)))+(((sj2)*(x1510)))+(((IkReal(-1.00000000000000))*(x1506)*(x1508)))+(((cj5)*(r20)*(x1505))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r10)*(x1509)*(x1518)))+(((cj2)*(x1510)))+(((x1514)*(x1520)))+(((sj2)*(x1508)))+(((r02)*(x1516)))+(((IkReal(-1.00000000000000))*(x1506)*(x1512)))+(((x1513)*(x1518)))+(((r12)*(sj0)*(x1504)))+(((sj2)*(x1507)))+(((IkReal(-1.00000000000000))*(r00)*(x1509)*(x1520))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
if( IKabs(((IkReal(0.0946500000000000))*(r21))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(0.0946500000000000))*(r20))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x1523=((IkReal(1.00000000000000))*(IKatan2(((IkReal(0.0946500000000000))*(r21)), ((IkReal(0.0946500000000000))*(r20)))));
if( (((((IkReal(0.00895862250000000))*((r21)*(r21))))+(((IkReal(0.00895862250000000))*((r20)*(r20)))))) < (IkReal)-0.00001 )
    continue;
if( (((((IKabs(IKabs(IKsqrt(((((IkReal(0.00895862250000000))*((r21)*(r21))))+(((IkReal(0.00895862250000000))*((r20)*(r20)))))))) != 0)?((IkReal)1/(IKabs(IKsqrt(((((IkReal(0.00895862250000000))*((r21)*(r21))))+(((IkReal(0.00895862250000000))*((r20)*(r20))))))))):(IkReal)1.0e30))*(((((IkReal(0.392250000000000))*(cj2)*(sj1)))+(pz)+(((IkReal(0.425000000000000))*(sj1)))+(((IkReal(0.392250000000000))*(cj1)*(sj2))))))) < -1-IKFAST_SINCOS_THRESH || (((((IKabs(IKabs(IKsqrt(((((IkReal(0.00895862250000000))*((r21)*(r21))))+(((IkReal(0.00895862250000000))*((r20)*(r20)))))))) != 0)?((IkReal)1/(IKabs(IKsqrt(((((IkReal(0.00895862250000000))*((r21)*(r21))))+(((IkReal(0.00895862250000000))*((r20)*(r20))))))))):(IkReal)1.0e30))*(((((IkReal(0.392250000000000))*(cj2)*(sj1)))+(pz)+(((IkReal(0.425000000000000))*(sj1)))+(((IkReal(0.392250000000000))*(cj1)*(sj2))))))) > 1+IKFAST_SINCOS_THRESH )
    continue;
IkReal x1524=IKasin(((((IKabs(IKabs(IKsqrt(((((IkReal(0.00895862250000000))*((r21)*(r21))))+(((IkReal(0.00895862250000000))*((r20)*(r20)))))))) != 0)?((IkReal)1/(IKabs(IKsqrt(((((IkReal(0.00895862250000000))*((r21)*(r21))))+(((IkReal(0.00895862250000000))*((r20)*(r20))))))))):(IkReal)1.0e30))*(((((IkReal(0.392250000000000))*(cj2)*(sj1)))+(pz)+(((IkReal(0.425000000000000))*(sj1)))+(((IkReal(0.392250000000000))*(cj1)*(sj2)))))));
j5array[0]=((((IkReal(-1.00000000000000))*(x1524)))+(((IkReal(-1.00000000000000))*(x1523))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
j5array[1]=((IkReal(3.14159265358979))+(((IkReal(-1.00000000000000))*(x1523)))+(x1524));
sj5array[1]=IKsin(j5array[1]);
cj5array[1]=IKcos(j5array[1]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
if( j5array[1] > IKPI )
{
    j5array[1]-=IK2PI;
}
else if( j5array[1] < -IKPI )
{    j5array[1]+=IK2PI;
}
j5valid[1] = true;
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[1];
IkReal x1525=((IkReal(1.00000000000000))*(sj3));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1525)))+(((cj1)*(cj2)*(cj3)))+(((IkReal(-1.00000000000000))*(r20)*(IKsin(j5))))+(((IkReal(-1.00000000000000))*(cj1)*(sj2)*(x1525)))+(((IkReal(-1.00000000000000))*(cj3)*(sj1)*(sj2)))+(((IkReal(-1.00000000000000))*(r21)*(IKcos(j5)))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst0;
IkReal x1526=((IkReal(20000.0000000000))*(cj5));
IkReal x1527=((IkReal(20000.0000000000))*(sj5));
gconst0=IKsign(((((IkReal(-1.00000000000000))*(px)*(r10)*(x1527)))+(((IkReal(-1.00000000000000))*(px)*(r11)*(x1526)))+(((py)*(r00)*(x1527)))+(((py)*(r01)*(x1526)))));
IkReal x1528=((IkReal(1.00000000000000))*(px));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r10)*(sj5)*(x1528)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x1528)))+(((py)*(r00)*(sj5)))+(((cj5)*(py)*(r01))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst2;
gconst2=IKsign((((((r21)*(r21))*((sj5)*(sj5))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20))))));
dummyeval[0]=(((((r21)*(r21))*((sj5)*(sj5))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst1;
IkReal x1529=(cj5)*(cj5);
IkReal x1530=(sj5)*(sj5);
IkReal x1531=((IkReal(1.00000000000000))*(x1530));
IkReal x1532=((IkReal(2.00000000000000))*(cj5)*(sj5));
IkReal x1533=((IkReal(1.00000000000000))*(x1529));
gconst1=IKsign(((((IkReal(-1.00000000000000))*(x1531)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1532)))+(((IkReal(-1.00000000000000))*(x1533)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1532)))+(((IkReal(-1.00000000000000))*(x1531)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x1533)*((r01)*(r01))))));
IkReal x1534=(cj5)*(cj5);
IkReal x1535=(sj5)*(sj5);
IkReal x1536=((IkReal(1.00000000000000))*(x1535));
IkReal x1537=((IkReal(2.00000000000000))*(cj5)*(sj5));
IkReal x1538=((IkReal(1.00000000000000))*(x1534));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r00)*(r01)*(x1537)))+(((IkReal(-1.00000000000000))*(x1538)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1537)))+(((IkReal(-1.00000000000000))*(x1536)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x1536)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x1538)*((r01)*(r01)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1539=((sj1)*(sj5));
IkReal x1540=((sj2)*(sj3));
IkReal x1541=((IkReal(1.00000000000000))*(cj3));
IkReal x1542=((cj2)*(r10));
IkReal x1543=((cj5)*(r11));
IkReal x1544=((cj2)*(sj1));
IkReal x1545=((cj1)*(sj5));
IkReal x1546=((cj5)*(r01));
IkReal x1547=((cj1)*(x1546));
IkReal x1548=((IkReal(1.00000000000000))*(cj2)*(sj3));
if( IKabs(((gconst1)*(((((IkReal(-1.00000000000000))*(cj1)*(sj2)*(x1541)*(x1543)))+(((IkReal(-1.00000000000000))*(sj3)*(x1542)*(x1545)))+(((IkReal(-1.00000000000000))*(x1541)*(x1543)*(x1544)))+(((IkReal(-1.00000000000000))*(x1539)*(x1541)*(x1542)))+(((sj1)*(x1540)*(x1543)))+(((IkReal(-1.00000000000000))*(r10)*(sj2)*(x1541)*(x1545)))+(((IkReal(-1.00000000000000))*(cj1)*(x1543)*(x1548)))+(((r10)*(x1539)*(x1540))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((((IkReal(-1.00000000000000))*(sj2)*(x1541)*(x1547)))+(((r00)*(x1539)*(x1540)))+(((IkReal(-1.00000000000000))*(r00)*(sj2)*(x1541)*(x1545)))+(((IkReal(-1.00000000000000))*(x1547)*(x1548)))+(((IkReal(-1.00000000000000))*(r00)*(x1545)*(x1548)))+(((IkReal(-1.00000000000000))*(x1541)*(x1544)*(x1546)))+(((sj1)*(x1540)*(x1546)))+(((IkReal(-1.00000000000000))*(cj2)*(r00)*(x1539)*(x1541))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst1)*(((((IkReal(-1.00000000000000))*(cj1)*(sj2)*(x1541)*(x1543)))+(((IkReal(-1.00000000000000))*(sj3)*(x1542)*(x1545)))+(((IkReal(-1.00000000000000))*(x1541)*(x1543)*(x1544)))+(((IkReal(-1.00000000000000))*(x1539)*(x1541)*(x1542)))+(((sj1)*(x1540)*(x1543)))+(((IkReal(-1.00000000000000))*(r10)*(sj2)*(x1541)*(x1545)))+(((IkReal(-1.00000000000000))*(cj1)*(x1543)*(x1548)))+(((r10)*(x1539)*(x1540)))))), ((gconst1)*(((((IkReal(-1.00000000000000))*(sj2)*(x1541)*(x1547)))+(((r00)*(x1539)*(x1540)))+(((IkReal(-1.00000000000000))*(r00)*(sj2)*(x1541)*(x1545)))+(((IkReal(-1.00000000000000))*(x1547)*(x1548)))+(((IkReal(-1.00000000000000))*(r00)*(x1545)*(x1548)))+(((IkReal(-1.00000000000000))*(x1541)*(x1544)*(x1546)))+(((sj1)*(x1540)*(x1546)))+(((IkReal(-1.00000000000000))*(cj2)*(r00)*(x1539)*(x1541)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[4];
IkReal x1549=IKcos(j0);
IkReal x1550=IKsin(j0);
IkReal x1551=((cj5)*(r01));
IkReal x1552=((cj5)*(r11));
IkReal x1553=((r00)*(sj5));
IkReal x1554=((IkReal(1.00000000000000))*(cj2));
IkReal x1555=((sj1)*(sj2));
IkReal x1556=((r10)*(sj5));
IkReal x1557=((IkReal(1.00000000000000))*(x1549));
IkReal x1558=((IkReal(1.00000000000000))*(x1550));
IkReal x1559=((IkReal(0.0946500000000000))*(x1549));
IkReal x1560=((IkReal(0.0946500000000000))*(x1550));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1551)*(x1558)))+(((x1549)*(x1552)))+(((x1549)*(x1556)))+(((IkReal(-1.00000000000000))*(x1553)*(x1558))));
evalcond[1]=((IkReal(0.109150000000000))+(((px)*(x1550)))+(((x1551)*(x1560)))+(((IkReal(-1.00000000000000))*(py)*(x1557)))+(((IkReal(-1.00000000000000))*(x1556)*(x1559)))+(((IkReal(-1.00000000000000))*(x1552)*(x1559)))+(((x1553)*(x1560))));
evalcond[2]=((((IkReal(0.392250000000000))*(cj1)*(cj2)))+(((IkReal(0.425000000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(px)*(x1557)))+(((IkReal(-1.00000000000000))*(x1551)*(x1559)))+(((IkReal(-1.00000000000000))*(x1552)*(x1560)))+(((IkReal(-1.00000000000000))*(py)*(x1558)))+(((IkReal(-0.392250000000000))*(x1555)))+(((IkReal(-1.00000000000000))*(x1553)*(x1559)))+(((IkReal(-1.00000000000000))*(x1556)*(x1560))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj3)*(sj1)*(x1554)))+(((sj3)*(x1555)))+(((IkReal(-1.00000000000000))*(cj1)*(sj3)*(x1554)))+(((x1550)*(x1552)))+(((IkReal(-1.00000000000000))*(cj1)*(cj3)*(sj2)))+(((x1549)*(x1551)))+(((x1549)*(x1553)))+(((x1550)*(x1556))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst3;
IkReal x1561=((IkReal(1.00000000000000))*(sj0));
IkReal x1562=((cj5)*(r22));
IkReal x1563=((r21)*(sj5));
IkReal x1564=((IkReal(1.00000000000000))*(cj0));
IkReal x1565=((r22)*(sj5));
IkReal x1566=((cj5)*(r20));
gconst3=IKsign(((((IkReal(-1.00000000000000))*(r02)*(x1561)*(x1563)))+(((IkReal(-1.00000000000000))*(r00)*(x1561)*(x1562)))+(((cj0)*(r10)*(x1562)))+(((r01)*(sj0)*(x1565)))+(((IkReal(-1.00000000000000))*(r12)*(x1564)*(x1566)))+(((r02)*(sj0)*(x1566)))+(((cj0)*(r12)*(x1563)))+(((IkReal(-1.00000000000000))*(r11)*(x1564)*(x1565)))));
IkReal x1567=((IkReal(1.00000000000000))*(sj0));
IkReal x1568=((cj5)*(r22));
IkReal x1569=((r21)*(sj5));
IkReal x1570=((IkReal(1.00000000000000))*(cj0));
IkReal x1571=((r22)*(sj5));
IkReal x1572=((cj5)*(r20));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r11)*(x1570)*(x1571)))+(((IkReal(-1.00000000000000))*(r12)*(x1570)*(x1572)))+(((cj0)*(r10)*(x1568)))+(((IkReal(-1.00000000000000))*(r00)*(x1567)*(x1568)))+(((r01)*(sj0)*(x1571)))+(((cj0)*(r12)*(x1569)))+(((IkReal(-1.00000000000000))*(r02)*(x1567)*(x1569)))+(((r02)*(sj0)*(x1572))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign((((((r21)*(r21))*((sj5)*(sj5))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20))))));
dummyeval[0]=(((((r21)*(r21))*((sj5)*(sj5))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1573=((cj3)*(sj2));
IkReal x1574=((cj2)*(sj3));
IkReal x1575=((r21)*(sj5));
IkReal x1576=((IkReal(1.00000000000000))*(cj1));
IkReal x1577=((cj5)*(r20));
IkReal x1578=((r22)*(x1576));
IkReal x1579=((sj1)*(sj2)*(sj3));
IkReal x1580=((cj2)*(cj3)*(sj1));
if( IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(x1573)*(x1578)))+(((IkReal(-1.00000000000000))*(r22)*(x1580)))+(((IkReal(-1.00000000000000))*(x1574)*(x1578)))+(((r22)*(x1579))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((cj1)*(x1573)*(x1577)))+(((x1575)*(x1579)))+(((IkReal(-1.00000000000000))*(x1574)*(x1575)*(x1576)))+(((IkReal(-1.00000000000000))*(x1577)*(x1579)))+(((IkReal(-1.00000000000000))*(x1575)*(x1580)))+(((IkReal(-1.00000000000000))*(x1573)*(x1575)*(x1576)))+(((cj1)*(x1574)*(x1577)))+(((x1577)*(x1580))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst4)*(((((IkReal(-1.00000000000000))*(x1573)*(x1578)))+(((IkReal(-1.00000000000000))*(r22)*(x1580)))+(((IkReal(-1.00000000000000))*(x1574)*(x1578)))+(((r22)*(x1579)))))), ((gconst4)*(((((cj1)*(x1573)*(x1577)))+(((x1575)*(x1579)))+(((IkReal(-1.00000000000000))*(x1574)*(x1575)*(x1576)))+(((IkReal(-1.00000000000000))*(x1577)*(x1579)))+(((IkReal(-1.00000000000000))*(x1575)*(x1580)))+(((IkReal(-1.00000000000000))*(x1573)*(x1575)*(x1576)))+(((cj1)*(x1574)*(x1577)))+(((x1577)*(x1580)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1581=IKsin(j4);
IkReal x1582=IKcos(j4);
IkReal x1583=((IkReal(1.00000000000000))*(cj2));
IkReal x1584=((cj3)*(sj1));
IkReal x1585=((cj1)*(sj3));
IkReal x1586=((IkReal(1.00000000000000))*(cj5));
IkReal x1587=((sj1)*(sj3));
IkReal x1588=((IkReal(1.00000000000000))*(r01));
IkReal x1589=((cj1)*(cj3));
IkReal x1590=((r11)*(sj5));
IkReal x1591=((r01)*(sj5));
IkReal x1592=((r21)*(sj5));
IkReal x1593=((cj0)*(x1581));
IkReal x1594=((cj5)*(x1581));
IkReal x1595=((sj0)*(x1582));
IkReal x1596=((IkReal(1.00000000000000))*(x1581));
IkReal x1597=((cj0)*(x1582));
IkReal x1598=((sj0)*(sj5)*(x1581));
IkReal x1599=((IkReal(1.00000000000000))*(x1597));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1592)*(x1596)))+(((r20)*(x1594)))+(((r22)*(x1582))));
evalcond[1]=((((x1590)*(x1597)))+(((IkReal(-1.00000000000000))*(r10)*(x1586)*(x1597)))+(((IkReal(-1.00000000000000))*(sj5)*(x1588)*(x1595)))+(((IkReal(-1.00000000000000))*(r02)*(sj0)*(x1596)))+(((cj5)*(r00)*(x1595)))+(((r12)*(x1593))));
evalcond[2]=((((x1591)*(x1593)))+(((IkReal(-1.00000000000000))*(r00)*(x1586)*(x1593)))+(((IkReal(-1.00000000000000))*(r02)*(x1599)))+(((sj0)*(x1581)*(x1590)))+(((IkReal(-1.00000000000000))*(r12)*(x1595)))+(((IkReal(-1.00000000000000))*(r10)*(sj0)*(x1581)*(x1586))));
evalcond[3]=((IkReal(1.00000000000000))+(((x1590)*(x1593)))+(((IkReal(-1.00000000000000))*(r10)*(x1586)*(x1593)))+(((IkReal(-1.00000000000000))*(r12)*(x1599)))+(((r00)*(sj0)*(x1594)))+(((r02)*(x1595)))+(((IkReal(-1.00000000000000))*(x1588)*(x1598))));
evalcond[4]=((((IkReal(-1.00000000000000))*(sj2)*(x1589)))+(((IkReal(-1.00000000000000))*(x1582)*(x1592)))+(((cj5)*(r20)*(x1582)))+(((sj2)*(x1587)))+(((IkReal(-1.00000000000000))*(x1583)*(x1584)))+(((IkReal(-1.00000000000000))*(r22)*(x1596)))+(((IkReal(-1.00000000000000))*(x1583)*(x1585))));
evalcond[5]=((((sj2)*(x1584)))+(((cj2)*(x1587)))+(((sj2)*(x1585)))+(((IkReal(-1.00000000000000))*(x1583)*(x1589)))+(((x1590)*(x1595)))+(((r02)*(x1593)))+(((r12)*(sj0)*(x1581)))+(((x1591)*(x1597)))+(((IkReal(-1.00000000000000))*(r10)*(x1586)*(x1595)))+(((IkReal(-1.00000000000000))*(r00)*(x1586)*(x1597))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((gconst3)*(r22))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((r21)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r20))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst3)*(r22)), ((gconst3)*(((((r21)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r20)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1600=IKsin(j4);
IkReal x1601=IKcos(j4);
IkReal x1602=((IkReal(1.00000000000000))*(cj2));
IkReal x1603=((cj3)*(sj1));
IkReal x1604=((cj1)*(sj3));
IkReal x1605=((IkReal(1.00000000000000))*(cj5));
IkReal x1606=((sj1)*(sj3));
IkReal x1607=((IkReal(1.00000000000000))*(r01));
IkReal x1608=((cj1)*(cj3));
IkReal x1609=((r11)*(sj5));
IkReal x1610=((r01)*(sj5));
IkReal x1611=((r21)*(sj5));
IkReal x1612=((cj0)*(x1600));
IkReal x1613=((cj5)*(x1600));
IkReal x1614=((sj0)*(x1601));
IkReal x1615=((IkReal(1.00000000000000))*(x1600));
IkReal x1616=((cj0)*(x1601));
IkReal x1617=((sj0)*(sj5)*(x1600));
IkReal x1618=((IkReal(1.00000000000000))*(x1616));
evalcond[0]=((((r22)*(x1601)))+(((IkReal(-1.00000000000000))*(x1611)*(x1615)))+(((r20)*(x1613))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r02)*(sj0)*(x1615)))+(((r12)*(x1612)))+(((IkReal(-1.00000000000000))*(sj5)*(x1607)*(x1614)))+(((IkReal(-1.00000000000000))*(r10)*(x1605)*(x1616)))+(((x1609)*(x1616)))+(((cj5)*(r00)*(x1614))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r12)*(x1614)))+(((IkReal(-1.00000000000000))*(r10)*(sj0)*(x1600)*(x1605)))+(((IkReal(-1.00000000000000))*(r02)*(x1618)))+(((IkReal(-1.00000000000000))*(r00)*(x1605)*(x1612)))+(((x1610)*(x1612)))+(((sj0)*(x1600)*(x1609))));
evalcond[3]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r12)*(x1618)))+(((x1609)*(x1612)))+(((r00)*(sj0)*(x1613)))+(((IkReal(-1.00000000000000))*(r10)*(x1605)*(x1612)))+(((r02)*(x1614)))+(((IkReal(-1.00000000000000))*(x1607)*(x1617))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1602)*(x1603)))+(((IkReal(-1.00000000000000))*(sj2)*(x1608)))+(((IkReal(-1.00000000000000))*(r22)*(x1615)))+(((cj5)*(r20)*(x1601)))+(((sj2)*(x1606)))+(((IkReal(-1.00000000000000))*(x1602)*(x1604)))+(((IkReal(-1.00000000000000))*(x1601)*(x1611))));
evalcond[5]=((((sj2)*(x1604)))+(((r12)*(sj0)*(x1600)))+(((x1610)*(x1616)))+(((x1609)*(x1614)))+(((IkReal(-1.00000000000000))*(r10)*(x1605)*(x1614)))+(((IkReal(-1.00000000000000))*(r00)*(x1605)*(x1616)))+(((sj2)*(x1603)))+(((cj2)*(x1606)))+(((IkReal(-1.00000000000000))*(x1602)*(x1608)))+(((r02)*(x1612))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1619=((cj3)*(sj2));
IkReal x1620=((cj3)*(sj1));
IkReal x1621=((cj2)*(sj3));
IkReal x1622=((r21)*(sj5));
IkReal x1623=((IkReal(1.00000000000000))*(cj1));
IkReal x1624=((cj5)*(r20));
IkReal x1625=((IkReal(1.00000000000000))*(cj2));
IkReal x1626=((r22)*(x1623));
IkReal x1627=((cj2)*(x1624));
IkReal x1628=((sj1)*(sj2)*(sj3));
if( IKabs(((gconst2)*(((((IkReal(-1.00000000000000))*(x1619)*(x1626)))+(((r22)*(x1628)))+(((IkReal(-1.00000000000000))*(r22)*(x1620)*(x1625)))+(((IkReal(-1.00000000000000))*(x1621)*(x1626))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((cj1)*(x1619)*(x1624)))+(((cj1)*(x1621)*(x1624)))+(((IkReal(-1.00000000000000))*(x1619)*(x1622)*(x1623)))+(((x1622)*(x1628)))+(((IkReal(-1.00000000000000))*(x1620)*(x1622)*(x1625)))+(((x1620)*(x1627)))+(((IkReal(-1.00000000000000))*(x1624)*(x1628)))+(((IkReal(-1.00000000000000))*(x1621)*(x1622)*(x1623))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst2)*(((((IkReal(-1.00000000000000))*(x1619)*(x1626)))+(((r22)*(x1628)))+(((IkReal(-1.00000000000000))*(r22)*(x1620)*(x1625)))+(((IkReal(-1.00000000000000))*(x1621)*(x1626)))))), ((gconst2)*(((((cj1)*(x1619)*(x1624)))+(((cj1)*(x1621)*(x1624)))+(((IkReal(-1.00000000000000))*(x1619)*(x1622)*(x1623)))+(((x1622)*(x1628)))+(((IkReal(-1.00000000000000))*(x1620)*(x1622)*(x1625)))+(((x1620)*(x1627)))+(((IkReal(-1.00000000000000))*(x1624)*(x1628)))+(((IkReal(-1.00000000000000))*(x1621)*(x1622)*(x1623)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x1629=IKsin(j4);
IkReal x1630=IKcos(j4);
IkReal x1631=((IkReal(1.00000000000000))*(cj1));
IkReal x1632=((cj5)*(r20));
IkReal x1633=((IkReal(1.00000000000000))*(r21)*(sj5));
evalcond[0]=((((x1629)*(x1632)))+(((IkReal(-1.00000000000000))*(x1629)*(x1633)))+(((r22)*(x1630))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj2)*(sj3)*(x1631)))+(((IkReal(-1.00000000000000))*(cj2)*(cj3)*(sj1)))+(((IkReal(-1.00000000000000))*(r22)*(x1629)))+(((sj1)*(sj2)*(sj3)))+(((IkReal(-1.00000000000000))*(cj3)*(sj2)*(x1631)))+(((x1630)*(x1632)))+(((IkReal(-1.00000000000000))*(x1630)*(x1633))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst5;
IkReal x1634=((IkReal(20000.0000000000))*(cj5));
IkReal x1635=((IkReal(20000.0000000000))*(sj5));
gconst5=IKsign(((((py)*(r00)*(x1635)))+(((IkReal(-1.00000000000000))*(px)*(r10)*(x1635)))+(((IkReal(-1.00000000000000))*(px)*(r11)*(x1634)))+(((py)*(r01)*(x1634)))));
IkReal x1636=((IkReal(1.00000000000000))*(px));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r10)*(sj5)*(x1636)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x1636)))+(((py)*(r00)*(sj5)))+(((cj5)*(py)*(r01))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst6;
IkReal x1637=(sj5)*(sj5);
IkReal x1638=(cj5)*(cj5);
IkReal x1639=((cj4)*(sj5));
IkReal x1640=((IkReal(1.00000000000000))*(r02));
IkReal x1641=((r01)*(r10));
IkReal x1642=((cj4)*(cj5));
IkReal x1643=((sj4)*(x1638));
IkReal x1644=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x1645=((sj4)*(x1637));
gconst6=IKsign(((((x1641)*(x1645)))+(((IkReal(-1.00000000000000))*(r11)*(x1640)*(x1642)))+(((x1641)*(x1643)))+(((IkReal(-1.00000000000000))*(r10)*(x1639)*(x1640)))+(((IkReal(-1.00000000000000))*(x1643)*(x1644)))+(((IkReal(-1.00000000000000))*(x1644)*(x1645)))+(((r01)*(r12)*(x1642)))+(((r00)*(r12)*(x1639)))));
IkReal x1646=(sj5)*(sj5);
IkReal x1647=(cj5)*(cj5);
IkReal x1648=((cj4)*(sj5));
IkReal x1649=((IkReal(1.00000000000000))*(r02));
IkReal x1650=((r01)*(r10));
IkReal x1651=((cj4)*(cj5));
IkReal x1652=((sj4)*(x1647));
IkReal x1653=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x1654=((sj4)*(x1646));
dummyeval[0]=((((r01)*(r12)*(x1651)))+(((IkReal(-1.00000000000000))*(r11)*(x1649)*(x1651)))+(((x1650)*(x1654)))+(((IkReal(-1.00000000000000))*(x1653)*(x1654)))+(((r00)*(r12)*(x1648)))+(((IkReal(-1.00000000000000))*(r10)*(x1648)*(x1649)))+(((x1650)*(x1652)))+(((IkReal(-1.00000000000000))*(x1652)*(x1653))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
if( IKabs(((gconst6)*(((((cj5)*(r11)))+(((r10)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((cj5)*(r01)))+(((r00)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst6)*(((((cj5)*(r11)))+(((r10)*(sj5)))))), ((gconst6)*(((((cj5)*(r01)))+(((r00)*(sj5)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[8];
IkReal x1655=IKcos(j0);
IkReal x1656=IKsin(j0);
IkReal x1657=((cj5)*(r01));
IkReal x1658=((IkReal(0.0946500000000000))*(cj5));
IkReal x1659=((IkReal(1.00000000000000))*(cj2));
IkReal x1660=((cj3)*(sj1));
IkReal x1661=((cj5)*(sj4));
IkReal x1662=((cj1)*(sj3));
IkReal x1663=((sj4)*(sj5));
IkReal x1664=((r02)*(sj4));
IkReal x1665=((cj1)*(cj3));
IkReal x1666=((sj1)*(sj3));
IkReal x1667=((cj4)*(cj5));
IkReal x1668=((cj4)*(sj5));
IkReal x1669=((r10)*(sj5));
IkReal x1670=((cj4)*(r02));
IkReal x1671=((r00)*(sj5));
IkReal x1672=((cj4)*(r12));
IkReal x1673=((r12)*(sj4));
IkReal x1674=((IkReal(1.00000000000000))*(x1655));
IkReal x1675=((IkReal(1.00000000000000))*(x1656));
IkReal x1676=((r11)*(x1655));
IkReal x1677=((sj5)*(x1655));
IkReal x1678=((IkReal(0.0946500000000000))*(x1656));
IkReal x1679=((r11)*(x1656));
IkReal x1680=((r00)*(x1656));
evalcond[0]=((((cj5)*(x1676)))+(((IkReal(-1.00000000000000))*(x1657)*(x1675)))+(((x1655)*(x1669)))+(((IkReal(-1.00000000000000))*(x1671)*(x1675))));
evalcond[1]=((IkReal(0.109150000000000))+(((x1671)*(x1678)))+(((IkReal(-1.00000000000000))*(py)*(x1674)))+(((IkReal(-0.0946500000000000))*(x1655)*(x1669)))+(((px)*(x1656)))+(((IkReal(-1.00000000000000))*(x1658)*(x1676)))+(((x1657)*(x1678))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1664)*(x1675)))+(((x1655)*(x1673)))+(((x1667)*(x1680)))+(((IkReal(-1.00000000000000))*(r01)*(x1668)*(x1675)))+(((x1668)*(x1676)))+(((IkReal(-1.00000000000000))*(r10)*(x1667)*(x1674))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r10)*(x1661)*(x1675)))+(((IkReal(-1.00000000000000))*(x1672)*(x1675)))+(((r01)*(x1655)*(x1663)))+(((IkReal(-1.00000000000000))*(x1670)*(x1674)))+(((x1663)*(x1679)))+(((IkReal(-1.00000000000000))*(r00)*(x1661)*(x1674))));
evalcond[4]=((IkReal(1.00000000000000))+(((x1661)*(x1680)))+(((IkReal(-1.00000000000000))*(x1672)*(x1674)))+(((IkReal(-1.00000000000000))*(r10)*(x1661)*(x1674)))+(((x1663)*(x1676)))+(((x1656)*(x1670)))+(((IkReal(-1.00000000000000))*(r01)*(x1663)*(x1675))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1658)*(x1679)))+(((IkReal(-0.0946500000000000))*(x1655)*(x1657)))+(((IkReal(-1.00000000000000))*(py)*(x1675)))+(((IkReal(0.392250000000000))*(cj1)*(cj2)))+(((IkReal(-0.0946500000000000))*(x1655)*(x1671)))+(((IkReal(-1.00000000000000))*(x1669)*(x1678)))+(((IkReal(-0.392250000000000))*(sj1)*(sj2)))+(((IkReal(0.425000000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(px)*(x1674))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x1659)*(x1662)))+(((IkReal(-1.00000000000000))*(x1659)*(x1660)))+(((IkReal(-1.00000000000000))*(sj2)*(x1665)))+(((x1655)*(x1657)))+(((sj2)*(x1666)))+(((x1656)*(x1669)))+(((x1655)*(x1671)))+(((cj5)*(x1679))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x1659)*(x1665)))+(((cj2)*(x1666)))+(((IkReal(-1.00000000000000))*(r10)*(x1667)*(x1675)))+(((IkReal(-1.00000000000000))*(r00)*(x1667)*(x1674)))+(((r01)*(x1655)*(x1668)))+(((x1655)*(x1664)))+(((sj2)*(x1662)))+(((sj2)*(x1660)))+(((x1656)*(x1673)))+(((x1668)*(x1679))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1681=((IkReal(2183.00000000000))*(sj5));
IkReal x1682=((IkReal(2183.00000000000))*(cj5));
if( IKabs(((gconst5)*(((((r11)*(x1682)))+(((r10)*(x1681))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((r00)*(x1681)))+(((r01)*(x1682))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst5)*(((((r11)*(x1682)))+(((r10)*(x1681)))))), ((gconst5)*(((((r00)*(x1681)))+(((r01)*(x1682)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[8];
IkReal x1683=IKcos(j0);
IkReal x1684=IKsin(j0);
IkReal x1685=((cj5)*(r01));
IkReal x1686=((IkReal(0.0946500000000000))*(cj5));
IkReal x1687=((IkReal(1.00000000000000))*(cj2));
IkReal x1688=((cj3)*(sj1));
IkReal x1689=((cj5)*(sj4));
IkReal x1690=((cj1)*(sj3));
IkReal x1691=((sj4)*(sj5));
IkReal x1692=((r02)*(sj4));
IkReal x1693=((cj1)*(cj3));
IkReal x1694=((sj1)*(sj3));
IkReal x1695=((cj4)*(cj5));
IkReal x1696=((cj4)*(sj5));
IkReal x1697=((r10)*(sj5));
IkReal x1698=((cj4)*(r02));
IkReal x1699=((r00)*(sj5));
IkReal x1700=((cj4)*(r12));
IkReal x1701=((r12)*(sj4));
IkReal x1702=((IkReal(1.00000000000000))*(x1683));
IkReal x1703=((IkReal(1.00000000000000))*(x1684));
IkReal x1704=((r11)*(x1683));
IkReal x1705=((sj5)*(x1683));
IkReal x1706=((IkReal(0.0946500000000000))*(x1684));
IkReal x1707=((r11)*(x1684));
IkReal x1708=((r00)*(x1684));
evalcond[0]=((((cj5)*(x1704)))+(((IkReal(-1.00000000000000))*(x1685)*(x1703)))+(((x1683)*(x1697)))+(((IkReal(-1.00000000000000))*(x1699)*(x1703))));
evalcond[1]=((IkReal(0.109150000000000))+(((x1699)*(x1706)))+(((IkReal(-1.00000000000000))*(x1686)*(x1704)))+(((px)*(x1684)))+(((IkReal(-1.00000000000000))*(py)*(x1702)))+(((x1685)*(x1706)))+(((IkReal(-0.0946500000000000))*(x1683)*(x1697))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(x1695)*(x1702)))+(((x1683)*(x1701)))+(((x1695)*(x1708)))+(((x1696)*(x1704)))+(((IkReal(-1.00000000000000))*(r01)*(x1696)*(x1703)))+(((IkReal(-1.00000000000000))*(x1692)*(x1703))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1698)*(x1702)))+(((r01)*(x1683)*(x1691)))+(((IkReal(-1.00000000000000))*(x1700)*(x1703)))+(((IkReal(-1.00000000000000))*(r10)*(x1689)*(x1703)))+(((IkReal(-1.00000000000000))*(r00)*(x1689)*(x1702)))+(((x1691)*(x1707))));
evalcond[4]=((IkReal(1.00000000000000))+(((x1684)*(x1698)))+(((IkReal(-1.00000000000000))*(x1700)*(x1702)))+(((IkReal(-1.00000000000000))*(r01)*(x1691)*(x1703)))+(((IkReal(-1.00000000000000))*(r10)*(x1689)*(x1702)))+(((x1691)*(x1704)))+(((x1689)*(x1708))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1697)*(x1706)))+(((IkReal(-1.00000000000000))*(x1686)*(x1707)))+(((IkReal(0.392250000000000))*(cj1)*(cj2)))+(((IkReal(-0.392250000000000))*(sj1)*(sj2)))+(((IkReal(0.425000000000000))*(cj1)))+(((IkReal(-0.0946500000000000))*(x1683)*(x1685)))+(((IkReal(-1.00000000000000))*(py)*(x1703)))+(((IkReal(-1.00000000000000))*(px)*(x1702)))+(((IkReal(-0.0946500000000000))*(x1683)*(x1699))));
evalcond[6]=((((x1684)*(x1697)))+(((IkReal(-1.00000000000000))*(sj2)*(x1693)))+(((x1683)*(x1699)))+(((cj5)*(x1707)))+(((sj2)*(x1694)))+(((IkReal(-1.00000000000000))*(x1687)*(x1688)))+(((IkReal(-1.00000000000000))*(x1687)*(x1690)))+(((x1683)*(x1685))));
evalcond[7]=((((sj2)*(x1688)))+(((x1683)*(x1692)))+(((x1684)*(x1701)))+(((x1696)*(x1707)))+(((sj2)*(x1690)))+(((IkReal(-1.00000000000000))*(r10)*(x1695)*(x1703)))+(((r01)*(x1683)*(x1696)))+(((IkReal(-1.00000000000000))*(r00)*(x1695)*(x1702)))+(((cj2)*(x1694)))+(((IkReal(-1.00000000000000))*(x1687)*(x1693))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1709=((IkReal(2183.00000000000))*(sj5));
IkReal x1710=((IkReal(2183.00000000000))*(cj5));
if( IKabs(((gconst0)*(((((r10)*(x1709)))+(((r11)*(x1710))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((((r00)*(x1709)))+(((r01)*(x1710))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst0)*(((((r10)*(x1709)))+(((r11)*(x1710)))))), ((gconst0)*(((((r00)*(x1709)))+(((r01)*(x1710)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[4];
IkReal x1711=IKcos(j0);
IkReal x1712=IKsin(j0);
IkReal x1713=((cj5)*(r01));
IkReal x1714=((cj5)*(r11));
IkReal x1715=((r00)*(sj5));
IkReal x1716=((IkReal(1.00000000000000))*(cj2));
IkReal x1717=((sj1)*(sj2));
IkReal x1718=((r10)*(sj5));
IkReal x1719=((IkReal(1.00000000000000))*(x1711));
IkReal x1720=((IkReal(1.00000000000000))*(x1712));
IkReal x1721=((IkReal(0.0946500000000000))*(x1711));
IkReal x1722=((IkReal(0.0946500000000000))*(x1712));
evalcond[0]=((((x1711)*(x1714)))+(((IkReal(-1.00000000000000))*(x1715)*(x1720)))+(((IkReal(-1.00000000000000))*(x1713)*(x1720)))+(((x1711)*(x1718))));
evalcond[1]=((IkReal(0.109150000000000))+(((px)*(x1712)))+(((IkReal(-1.00000000000000))*(x1714)*(x1721)))+(((x1715)*(x1722)))+(((x1713)*(x1722)))+(((IkReal(-1.00000000000000))*(py)*(x1719)))+(((IkReal(-1.00000000000000))*(x1718)*(x1721))));
evalcond[2]=((((IkReal(-0.392250000000000))*(x1717)))+(((IkReal(-1.00000000000000))*(x1715)*(x1721)))+(((IkReal(0.392250000000000))*(cj1)*(cj2)))+(((IkReal(-1.00000000000000))*(py)*(x1720)))+(((IkReal(0.425000000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(x1714)*(x1722)))+(((IkReal(-1.00000000000000))*(x1713)*(x1721)))+(((IkReal(-1.00000000000000))*(x1718)*(x1722)))+(((IkReal(-1.00000000000000))*(px)*(x1719))));
evalcond[3]=((((x1711)*(x1715)))+(((IkReal(-1.00000000000000))*(cj3)*(sj1)*(x1716)))+(((IkReal(-1.00000000000000))*(cj1)*(sj3)*(x1716)))+(((IkReal(-1.00000000000000))*(cj1)*(cj3)*(sj2)))+(((x1711)*(x1713)))+(((sj3)*(x1717)))+(((x1712)*(x1714)))+(((x1712)*(x1718))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst3;
IkReal x1723=((IkReal(1.00000000000000))*(sj0));
IkReal x1724=((cj5)*(r22));
IkReal x1725=((r21)*(sj5));
IkReal x1726=((IkReal(1.00000000000000))*(cj0));
IkReal x1727=((r22)*(sj5));
IkReal x1728=((cj5)*(r20));
gconst3=IKsign(((((cj0)*(r12)*(x1725)))+(((IkReal(-1.00000000000000))*(r12)*(x1726)*(x1728)))+(((IkReal(-1.00000000000000))*(r02)*(x1723)*(x1725)))+(((r01)*(sj0)*(x1727)))+(((IkReal(-1.00000000000000))*(r00)*(x1723)*(x1724)))+(((cj0)*(r10)*(x1724)))+(((r02)*(sj0)*(x1728)))+(((IkReal(-1.00000000000000))*(r11)*(x1726)*(x1727)))));
IkReal x1729=((IkReal(1.00000000000000))*(sj0));
IkReal x1730=((cj5)*(r22));
IkReal x1731=((r21)*(sj5));
IkReal x1732=((IkReal(1.00000000000000))*(cj0));
IkReal x1733=((r22)*(sj5));
IkReal x1734=((cj5)*(r20));
dummyeval[0]=((((r01)*(sj0)*(x1733)))+(((cj0)*(r10)*(x1730)))+(((IkReal(-1.00000000000000))*(r11)*(x1732)*(x1733)))+(((r02)*(sj0)*(x1734)))+(((IkReal(-1.00000000000000))*(r12)*(x1732)*(x1734)))+(((IkReal(-1.00000000000000))*(r00)*(x1729)*(x1730)))+(((IkReal(-1.00000000000000))*(r02)*(x1729)*(x1731)))+(((cj0)*(r12)*(x1731))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign((((((r21)*(r21))*((sj5)*(sj5))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20))))));
dummyeval[0]=(((((r21)*(r21))*((sj5)*(sj5))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1735=((cj3)*(sj2));
IkReal x1736=((cj2)*(sj3));
IkReal x1737=((r21)*(sj5));
IkReal x1738=((IkReal(1.00000000000000))*(cj1));
IkReal x1739=((cj5)*(r20));
IkReal x1740=((r22)*(x1738));
IkReal x1741=((sj1)*(sj2)*(sj3));
IkReal x1742=((cj2)*(cj3)*(sj1));
if( IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(x1736)*(x1740)))+(((IkReal(-1.00000000000000))*(x1735)*(x1740)))+(((IkReal(-1.00000000000000))*(r22)*(x1742)))+(((r22)*(x1741))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((x1737)*(x1741)))+(((IkReal(-1.00000000000000))*(x1739)*(x1741)))+(((cj1)*(x1735)*(x1739)))+(((x1739)*(x1742)))+(((cj1)*(x1736)*(x1739)))+(((IkReal(-1.00000000000000))*(x1737)*(x1742)))+(((IkReal(-1.00000000000000))*(x1735)*(x1737)*(x1738)))+(((IkReal(-1.00000000000000))*(x1736)*(x1737)*(x1738))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst4)*(((((IkReal(-1.00000000000000))*(x1736)*(x1740)))+(((IkReal(-1.00000000000000))*(x1735)*(x1740)))+(((IkReal(-1.00000000000000))*(r22)*(x1742)))+(((r22)*(x1741)))))), ((gconst4)*(((((x1737)*(x1741)))+(((IkReal(-1.00000000000000))*(x1739)*(x1741)))+(((cj1)*(x1735)*(x1739)))+(((x1739)*(x1742)))+(((cj1)*(x1736)*(x1739)))+(((IkReal(-1.00000000000000))*(x1737)*(x1742)))+(((IkReal(-1.00000000000000))*(x1735)*(x1737)*(x1738)))+(((IkReal(-1.00000000000000))*(x1736)*(x1737)*(x1738)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1743=IKsin(j4);
IkReal x1744=IKcos(j4);
IkReal x1745=((IkReal(1.00000000000000))*(cj2));
IkReal x1746=((cj3)*(sj1));
IkReal x1747=((cj1)*(sj3));
IkReal x1748=((IkReal(1.00000000000000))*(cj5));
IkReal x1749=((sj1)*(sj3));
IkReal x1750=((IkReal(1.00000000000000))*(r01));
IkReal x1751=((cj1)*(cj3));
IkReal x1752=((r11)*(sj5));
IkReal x1753=((r01)*(sj5));
IkReal x1754=((r21)*(sj5));
IkReal x1755=((cj0)*(x1743));
IkReal x1756=((cj5)*(x1743));
IkReal x1757=((sj0)*(x1744));
IkReal x1758=((IkReal(1.00000000000000))*(x1743));
IkReal x1759=((cj0)*(x1744));
IkReal x1760=((sj0)*(sj5)*(x1743));
IkReal x1761=((IkReal(1.00000000000000))*(x1759));
evalcond[0]=((((r20)*(x1756)))+(((r22)*(x1744)))+(((IkReal(-1.00000000000000))*(x1754)*(x1758))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r10)*(x1748)*(x1759)))+(((r12)*(x1755)))+(((cj5)*(r00)*(x1757)))+(((x1752)*(x1759)))+(((IkReal(-1.00000000000000))*(r02)*(sj0)*(x1758)))+(((IkReal(-1.00000000000000))*(sj5)*(x1750)*(x1757))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(sj0)*(x1743)*(x1748)))+(((IkReal(-1.00000000000000))*(r00)*(x1748)*(x1755)))+(((x1753)*(x1755)))+(((sj0)*(x1743)*(x1752)))+(((IkReal(-1.00000000000000))*(r12)*(x1757)))+(((IkReal(-1.00000000000000))*(r02)*(x1761))));
evalcond[3]=((IkReal(1.00000000000000))+(((r00)*(sj0)*(x1756)))+(((r02)*(x1757)))+(((x1752)*(x1755)))+(((IkReal(-1.00000000000000))*(r10)*(x1748)*(x1755)))+(((IkReal(-1.00000000000000))*(r12)*(x1761)))+(((IkReal(-1.00000000000000))*(x1750)*(x1760))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1744)*(x1754)))+(((IkReal(-1.00000000000000))*(sj2)*(x1751)))+(((cj5)*(r20)*(x1744)))+(((IkReal(-1.00000000000000))*(x1745)*(x1747)))+(((IkReal(-1.00000000000000))*(r22)*(x1758)))+(((sj2)*(x1749)))+(((IkReal(-1.00000000000000))*(x1745)*(x1746))));
evalcond[5]=((((r02)*(x1755)))+(((x1752)*(x1757)))+(((x1753)*(x1759)))+(((IkReal(-1.00000000000000))*(r00)*(x1748)*(x1759)))+(((r12)*(sj0)*(x1743)))+(((cj2)*(x1749)))+(((sj2)*(x1747)))+(((IkReal(-1.00000000000000))*(x1745)*(x1751)))+(((sj2)*(x1746)))+(((IkReal(-1.00000000000000))*(r10)*(x1748)*(x1757))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((gconst3)*(r22))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((r21)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r20))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst3)*(r22)), ((gconst3)*(((((r21)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r20)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1762=IKsin(j4);
IkReal x1763=IKcos(j4);
IkReal x1764=((IkReal(1.00000000000000))*(cj2));
IkReal x1765=((cj3)*(sj1));
IkReal x1766=((cj1)*(sj3));
IkReal x1767=((IkReal(1.00000000000000))*(cj5));
IkReal x1768=((sj1)*(sj3));
IkReal x1769=((IkReal(1.00000000000000))*(r01));
IkReal x1770=((cj1)*(cj3));
IkReal x1771=((r11)*(sj5));
IkReal x1772=((r01)*(sj5));
IkReal x1773=((r21)*(sj5));
IkReal x1774=((cj0)*(x1762));
IkReal x1775=((cj5)*(x1762));
IkReal x1776=((sj0)*(x1763));
IkReal x1777=((IkReal(1.00000000000000))*(x1762));
IkReal x1778=((cj0)*(x1763));
IkReal x1779=((sj0)*(sj5)*(x1762));
IkReal x1780=((IkReal(1.00000000000000))*(x1778));
evalcond[0]=((((r20)*(x1775)))+(((r22)*(x1763)))+(((IkReal(-1.00000000000000))*(x1773)*(x1777))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r10)*(x1767)*(x1778)))+(((cj5)*(r00)*(x1776)))+(((IkReal(-1.00000000000000))*(r02)*(sj0)*(x1777)))+(((x1771)*(x1778)))+(((IkReal(-1.00000000000000))*(sj5)*(x1769)*(x1776)))+(((r12)*(x1774))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(x1767)*(x1774)))+(((IkReal(-1.00000000000000))*(r10)*(sj0)*(x1762)*(x1767)))+(((IkReal(-1.00000000000000))*(r02)*(x1780)))+(((IkReal(-1.00000000000000))*(r12)*(x1776)))+(((sj0)*(x1762)*(x1771)))+(((x1772)*(x1774))));
evalcond[3]=((IkReal(1.00000000000000))+(((x1771)*(x1774)))+(((IkReal(-1.00000000000000))*(r10)*(x1767)*(x1774)))+(((r00)*(sj0)*(x1775)))+(((IkReal(-1.00000000000000))*(r12)*(x1780)))+(((r02)*(x1776)))+(((IkReal(-1.00000000000000))*(x1769)*(x1779))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1763)*(x1773)))+(((sj2)*(x1768)))+(((IkReal(-1.00000000000000))*(sj2)*(x1770)))+(((IkReal(-1.00000000000000))*(x1764)*(x1765)))+(((IkReal(-1.00000000000000))*(x1764)*(x1766)))+(((cj5)*(r20)*(x1763)))+(((IkReal(-1.00000000000000))*(r22)*(x1777))));
evalcond[5]=((((sj2)*(x1765)))+(((x1772)*(x1778)))+(((IkReal(-1.00000000000000))*(r10)*(x1767)*(x1776)))+(((sj2)*(x1766)))+(((x1771)*(x1776)))+(((IkReal(-1.00000000000000))*(x1764)*(x1770)))+(((r12)*(sj0)*(x1762)))+(((cj2)*(x1768)))+(((r02)*(x1774)))+(((IkReal(-1.00000000000000))*(r00)*(x1767)*(x1778))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
if( IKabs(((IkReal(0.0946500000000000))*(r21))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(0.0946500000000000))*(r20))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x1781=((IkReal(1.00000000000000))*(IKatan2(((IkReal(0.0946500000000000))*(r21)), ((IkReal(0.0946500000000000))*(r20)))));
if( (((((IkReal(0.00895862250000000))*((r21)*(r21))))+(((IkReal(0.00895862250000000))*((r20)*(r20)))))) < (IkReal)-0.00001 )
    continue;
if( (((((IKabs(IKabs(IKsqrt(((((IkReal(0.00895862250000000))*((r21)*(r21))))+(((IkReal(0.00895862250000000))*((r20)*(r20)))))))) != 0)?((IkReal)1/(IKabs(IKsqrt(((((IkReal(0.00895862250000000))*((r21)*(r21))))+(((IkReal(0.00895862250000000))*((r20)*(r20))))))))):(IkReal)1.0e30))*(((((IkReal(0.392250000000000))*(cj2)*(sj1)))+(pz)+(((IkReal(0.425000000000000))*(sj1)))+(((IkReal(0.392250000000000))*(cj1)*(sj2))))))) < -1-IKFAST_SINCOS_THRESH || (((((IKabs(IKabs(IKsqrt(((((IkReal(0.00895862250000000))*((r21)*(r21))))+(((IkReal(0.00895862250000000))*((r20)*(r20)))))))) != 0)?((IkReal)1/(IKabs(IKsqrt(((((IkReal(0.00895862250000000))*((r21)*(r21))))+(((IkReal(0.00895862250000000))*((r20)*(r20))))))))):(IkReal)1.0e30))*(((((IkReal(0.392250000000000))*(cj2)*(sj1)))+(pz)+(((IkReal(0.425000000000000))*(sj1)))+(((IkReal(0.392250000000000))*(cj1)*(sj2))))))) > 1+IKFAST_SINCOS_THRESH )
    continue;
IkReal x1782=IKasin(((((IKabs(IKabs(IKsqrt(((((IkReal(0.00895862250000000))*((r21)*(r21))))+(((IkReal(0.00895862250000000))*((r20)*(r20)))))))) != 0)?((IkReal)1/(IKabs(IKsqrt(((((IkReal(0.00895862250000000))*((r21)*(r21))))+(((IkReal(0.00895862250000000))*((r20)*(r20))))))))):(IkReal)1.0e30))*(((((IkReal(0.392250000000000))*(cj2)*(sj1)))+(pz)+(((IkReal(0.425000000000000))*(sj1)))+(((IkReal(0.392250000000000))*(cj1)*(sj2)))))));
j5array[0]=((((IkReal(-1.00000000000000))*(x1782)))+(((IkReal(-1.00000000000000))*(x1781))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
j5array[1]=((IkReal(3.14159265358979))+(x1782)+(((IkReal(-1.00000000000000))*(x1781))));
sj5array[1]=IKsin(j5array[1]);
cj5array[1]=IKcos(j5array[1]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
if( j5array[1] > IKPI )
{
    j5array[1]-=IK2PI;
}
else if( j5array[1] < -IKPI )
{    j5array[1]+=IK2PI;
}
j5valid[1] = true;
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[1];
IkReal x1783=((IkReal(1.00000000000000))*(sj3));
evalcond[0]=((((cj1)*(cj2)*(cj3)))+(((IkReal(-1.00000000000000))*(r20)*(IKsin(j5))))+(((IkReal(-1.00000000000000))*(cj1)*(sj2)*(x1783)))+(((IkReal(-1.00000000000000))*(cj3)*(sj1)*(sj2)))+(((IkReal(-1.00000000000000))*(r21)*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1783))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst0;
IkReal x1784=((IkReal(20000.0000000000))*(cj5));
IkReal x1785=((IkReal(20000.0000000000))*(sj5));
gconst0=IKsign(((((IkReal(-1.00000000000000))*(px)*(r11)*(x1784)))+(((IkReal(-1.00000000000000))*(px)*(r10)*(x1785)))+(((py)*(r00)*(x1785)))+(((py)*(r01)*(x1784)))));
IkReal x1786=((IkReal(1.00000000000000))*(px));
dummyeval[0]=((((IkReal(-1.00000000000000))*(cj5)*(r11)*(x1786)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x1786)))+(((py)*(r00)*(sj5)))+(((cj5)*(py)*(r01))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst2;
gconst2=IKsign((((((r21)*(r21))*((sj5)*(sj5))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20))))));
dummyeval[0]=(((((r21)*(r21))*((sj5)*(sj5))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst1;
IkReal x1787=(cj5)*(cj5);
IkReal x1788=(sj5)*(sj5);
IkReal x1789=((IkReal(1.00000000000000))*(x1788));
IkReal x1790=((IkReal(2.00000000000000))*(cj5)*(sj5));
IkReal x1791=((IkReal(1.00000000000000))*(x1787));
gconst1=IKsign(((((IkReal(-1.00000000000000))*(x1791)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1790)))+(((IkReal(-1.00000000000000))*(x1789)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x1791)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x1789)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1790)))));
IkReal x1792=(cj5)*(cj5);
IkReal x1793=(sj5)*(sj5);
IkReal x1794=((IkReal(1.00000000000000))*(x1793));
IkReal x1795=((IkReal(2.00000000000000))*(cj5)*(sj5));
IkReal x1796=((IkReal(1.00000000000000))*(x1792));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x1796)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x1796)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1795)))+(((IkReal(-1.00000000000000))*(x1794)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x1794)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1795))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1797=((sj1)*(sj5));
IkReal x1798=((sj2)*(sj3));
IkReal x1799=((IkReal(1.00000000000000))*(cj3));
IkReal x1800=((cj2)*(r10));
IkReal x1801=((cj5)*(r11));
IkReal x1802=((cj2)*(sj1));
IkReal x1803=((cj1)*(sj5));
IkReal x1804=((cj5)*(r01));
IkReal x1805=((cj1)*(x1804));
IkReal x1806=((IkReal(1.00000000000000))*(cj2)*(sj3));
if( IKabs(((gconst1)*(((((IkReal(-1.00000000000000))*(cj1)*(sj2)*(x1799)*(x1801)))+(((IkReal(-1.00000000000000))*(cj1)*(x1801)*(x1806)))+(((r10)*(x1797)*(x1798)))+(((sj1)*(x1798)*(x1801)))+(((IkReal(-1.00000000000000))*(r10)*(sj2)*(x1799)*(x1803)))+(((IkReal(-1.00000000000000))*(x1799)*(x1801)*(x1802)))+(((IkReal(-1.00000000000000))*(sj3)*(x1800)*(x1803)))+(((IkReal(-1.00000000000000))*(x1797)*(x1799)*(x1800))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((((r00)*(x1797)*(x1798)))+(((IkReal(-1.00000000000000))*(x1799)*(x1802)*(x1804)))+(((IkReal(-1.00000000000000))*(sj2)*(x1799)*(x1805)))+(((IkReal(-1.00000000000000))*(r00)*(x1803)*(x1806)))+(((IkReal(-1.00000000000000))*(r00)*(sj2)*(x1799)*(x1803)))+(((IkReal(-1.00000000000000))*(cj2)*(r00)*(x1797)*(x1799)))+(((IkReal(-1.00000000000000))*(x1805)*(x1806)))+(((sj1)*(x1798)*(x1804))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst1)*(((((IkReal(-1.00000000000000))*(cj1)*(sj2)*(x1799)*(x1801)))+(((IkReal(-1.00000000000000))*(cj1)*(x1801)*(x1806)))+(((r10)*(x1797)*(x1798)))+(((sj1)*(x1798)*(x1801)))+(((IkReal(-1.00000000000000))*(r10)*(sj2)*(x1799)*(x1803)))+(((IkReal(-1.00000000000000))*(x1799)*(x1801)*(x1802)))+(((IkReal(-1.00000000000000))*(sj3)*(x1800)*(x1803)))+(((IkReal(-1.00000000000000))*(x1797)*(x1799)*(x1800)))))), ((gconst1)*(((((r00)*(x1797)*(x1798)))+(((IkReal(-1.00000000000000))*(x1799)*(x1802)*(x1804)))+(((IkReal(-1.00000000000000))*(sj2)*(x1799)*(x1805)))+(((IkReal(-1.00000000000000))*(r00)*(x1803)*(x1806)))+(((IkReal(-1.00000000000000))*(r00)*(sj2)*(x1799)*(x1803)))+(((IkReal(-1.00000000000000))*(cj2)*(r00)*(x1797)*(x1799)))+(((IkReal(-1.00000000000000))*(x1805)*(x1806)))+(((sj1)*(x1798)*(x1804)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[4];
IkReal x1807=IKcos(j0);
IkReal x1808=IKsin(j0);
IkReal x1809=((cj5)*(r01));
IkReal x1810=((cj5)*(r11));
IkReal x1811=((r00)*(sj5));
IkReal x1812=((IkReal(1.00000000000000))*(cj2));
IkReal x1813=((sj1)*(sj2));
IkReal x1814=((r10)*(sj5));
IkReal x1815=((IkReal(1.00000000000000))*(x1807));
IkReal x1816=((IkReal(1.00000000000000))*(x1808));
IkReal x1817=((IkReal(0.0946500000000000))*(x1807));
IkReal x1818=((IkReal(0.0946500000000000))*(x1808));
evalcond[0]=((((x1807)*(x1810)))+(((IkReal(-1.00000000000000))*(x1809)*(x1816)))+(((IkReal(-1.00000000000000))*(x1811)*(x1816)))+(((x1807)*(x1814))));
evalcond[1]=((IkReal(0.109150000000000))+(((px)*(x1808)))+(((x1809)*(x1818)))+(((x1811)*(x1818)))+(((IkReal(-1.00000000000000))*(py)*(x1815)))+(((IkReal(-1.00000000000000))*(x1810)*(x1817)))+(((IkReal(-1.00000000000000))*(x1814)*(x1817))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1811)*(x1817)))+(((IkReal(0.392250000000000))*(cj1)*(cj2)))+(((IkReal(-1.00000000000000))*(x1809)*(x1817)))+(((IkReal(-1.00000000000000))*(py)*(x1816)))+(((IkReal(-1.00000000000000))*(x1810)*(x1818)))+(((IkReal(0.425000000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(x1814)*(x1818)))+(((IkReal(-0.392250000000000))*(x1813)))+(((IkReal(-1.00000000000000))*(px)*(x1815))));
evalcond[3]=((((x1808)*(x1814)))+(((sj3)*(x1813)))+(((IkReal(-1.00000000000000))*(cj1)*(sj3)*(x1812)))+(((x1808)*(x1810)))+(((IkReal(-1.00000000000000))*(cj1)*(cj3)*(sj2)))+(((IkReal(-1.00000000000000))*(cj3)*(sj1)*(x1812)))+(((x1807)*(x1809)))+(((x1807)*(x1811))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst3;
IkReal x1819=((IkReal(1.00000000000000))*(sj0));
IkReal x1820=((cj5)*(r22));
IkReal x1821=((r21)*(sj5));
IkReal x1822=((IkReal(1.00000000000000))*(cj0));
IkReal x1823=((r22)*(sj5));
IkReal x1824=((cj5)*(r20));
gconst3=IKsign(((((cj0)*(r12)*(x1821)))+(((IkReal(-1.00000000000000))*(r02)*(x1819)*(x1821)))+(((r02)*(sj0)*(x1824)))+(((cj0)*(r10)*(x1820)))+(((IkReal(-1.00000000000000))*(r11)*(x1822)*(x1823)))+(((IkReal(-1.00000000000000))*(r00)*(x1819)*(x1820)))+(((IkReal(-1.00000000000000))*(r12)*(x1822)*(x1824)))+(((r01)*(sj0)*(x1823)))));
IkReal x1825=((IkReal(1.00000000000000))*(sj0));
IkReal x1826=((cj5)*(r22));
IkReal x1827=((r21)*(sj5));
IkReal x1828=((IkReal(1.00000000000000))*(cj0));
IkReal x1829=((r22)*(sj5));
IkReal x1830=((cj5)*(r20));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r00)*(x1825)*(x1826)))+(((IkReal(-1.00000000000000))*(r02)*(x1825)*(x1827)))+(((cj0)*(r12)*(x1827)))+(((IkReal(-1.00000000000000))*(r11)*(x1828)*(x1829)))+(((IkReal(-1.00000000000000))*(r12)*(x1828)*(x1830)))+(((r02)*(sj0)*(x1830)))+(((cj0)*(r10)*(x1826)))+(((r01)*(sj0)*(x1829))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign((((((r21)*(r21))*((sj5)*(sj5))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20))))));
dummyeval[0]=(((((r21)*(r21))*((sj5)*(sj5))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1831=((cj3)*(sj2));
IkReal x1832=((cj2)*(sj3));
IkReal x1833=((r21)*(sj5));
IkReal x1834=((IkReal(1.00000000000000))*(cj1));
IkReal x1835=((cj5)*(r20));
IkReal x1836=((r22)*(x1834));
IkReal x1837=((sj1)*(sj2)*(sj3));
IkReal x1838=((cj2)*(cj3)*(sj1));
if( IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(r22)*(x1838)))+(((IkReal(-1.00000000000000))*(x1831)*(x1836)))+(((IkReal(-1.00000000000000))*(x1832)*(x1836)))+(((r22)*(x1837))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(x1832)*(x1833)*(x1834)))+(((x1835)*(x1838)))+(((IkReal(-1.00000000000000))*(x1831)*(x1833)*(x1834)))+(((IkReal(-1.00000000000000))*(x1835)*(x1837)))+(((x1833)*(x1837)))+(((cj1)*(x1831)*(x1835)))+(((IkReal(-1.00000000000000))*(x1833)*(x1838)))+(((cj1)*(x1832)*(x1835))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst4)*(((((IkReal(-1.00000000000000))*(r22)*(x1838)))+(((IkReal(-1.00000000000000))*(x1831)*(x1836)))+(((IkReal(-1.00000000000000))*(x1832)*(x1836)))+(((r22)*(x1837)))))), ((gconst4)*(((((IkReal(-1.00000000000000))*(x1832)*(x1833)*(x1834)))+(((x1835)*(x1838)))+(((IkReal(-1.00000000000000))*(x1831)*(x1833)*(x1834)))+(((IkReal(-1.00000000000000))*(x1835)*(x1837)))+(((x1833)*(x1837)))+(((cj1)*(x1831)*(x1835)))+(((IkReal(-1.00000000000000))*(x1833)*(x1838)))+(((cj1)*(x1832)*(x1835)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1839=IKsin(j4);
IkReal x1840=IKcos(j4);
IkReal x1841=((IkReal(1.00000000000000))*(cj2));
IkReal x1842=((cj3)*(sj1));
IkReal x1843=((cj1)*(sj3));
IkReal x1844=((IkReal(1.00000000000000))*(cj5));
IkReal x1845=((sj1)*(sj3));
IkReal x1846=((IkReal(1.00000000000000))*(r01));
IkReal x1847=((cj1)*(cj3));
IkReal x1848=((r11)*(sj5));
IkReal x1849=((r01)*(sj5));
IkReal x1850=((r21)*(sj5));
IkReal x1851=((cj0)*(x1839));
IkReal x1852=((cj5)*(x1839));
IkReal x1853=((sj0)*(x1840));
IkReal x1854=((IkReal(1.00000000000000))*(x1839));
IkReal x1855=((cj0)*(x1840));
IkReal x1856=((sj0)*(sj5)*(x1839));
IkReal x1857=((IkReal(1.00000000000000))*(x1855));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1850)*(x1854)))+(((r20)*(x1852)))+(((r22)*(x1840))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r02)*(sj0)*(x1854)))+(((IkReal(-1.00000000000000))*(r10)*(x1844)*(x1855)))+(((IkReal(-1.00000000000000))*(sj5)*(x1846)*(x1853)))+(((x1848)*(x1855)))+(((r12)*(x1851)))+(((cj5)*(r00)*(x1853))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r02)*(x1857)))+(((x1849)*(x1851)))+(((IkReal(-1.00000000000000))*(r00)*(x1844)*(x1851)))+(((sj0)*(x1839)*(x1848)))+(((IkReal(-1.00000000000000))*(r10)*(sj0)*(x1839)*(x1844)))+(((IkReal(-1.00000000000000))*(r12)*(x1853))));
evalcond[3]=((IkReal(1.00000000000000))+(((r00)*(sj0)*(x1852)))+(((IkReal(-1.00000000000000))*(x1846)*(x1856)))+(((r02)*(x1853)))+(((IkReal(-1.00000000000000))*(r12)*(x1857)))+(((x1848)*(x1851)))+(((IkReal(-1.00000000000000))*(r10)*(x1844)*(x1851))));
evalcond[4]=((((cj5)*(r20)*(x1840)))+(((sj2)*(x1845)))+(((IkReal(-1.00000000000000))*(x1841)*(x1842)))+(((IkReal(-1.00000000000000))*(x1840)*(x1850)))+(((IkReal(-1.00000000000000))*(x1841)*(x1843)))+(((IkReal(-1.00000000000000))*(sj2)*(x1847)))+(((IkReal(-1.00000000000000))*(r22)*(x1854))));
evalcond[5]=((((sj2)*(x1843)))+(((r02)*(x1851)))+(((IkReal(-1.00000000000000))*(r00)*(x1844)*(x1855)))+(((IkReal(-1.00000000000000))*(r10)*(x1844)*(x1853)))+(((cj2)*(x1845)))+(((x1848)*(x1853)))+(((r12)*(sj0)*(x1839)))+(((IkReal(-1.00000000000000))*(x1841)*(x1847)))+(((x1849)*(x1855)))+(((sj2)*(x1842))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((gconst3)*(r22))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((r21)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r20))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst3)*(r22)), ((gconst3)*(((((r21)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r20)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1858=IKsin(j4);
IkReal x1859=IKcos(j4);
IkReal x1860=((IkReal(1.00000000000000))*(cj2));
IkReal x1861=((cj3)*(sj1));
IkReal x1862=((cj1)*(sj3));
IkReal x1863=((IkReal(1.00000000000000))*(cj5));
IkReal x1864=((sj1)*(sj3));
IkReal x1865=((IkReal(1.00000000000000))*(r01));
IkReal x1866=((cj1)*(cj3));
IkReal x1867=((r11)*(sj5));
IkReal x1868=((r01)*(sj5));
IkReal x1869=((r21)*(sj5));
IkReal x1870=((cj0)*(x1858));
IkReal x1871=((cj5)*(x1858));
IkReal x1872=((sj0)*(x1859));
IkReal x1873=((IkReal(1.00000000000000))*(x1858));
IkReal x1874=((cj0)*(x1859));
IkReal x1875=((sj0)*(sj5)*(x1858));
IkReal x1876=((IkReal(1.00000000000000))*(x1874));
evalcond[0]=((((r20)*(x1871)))+(((IkReal(-1.00000000000000))*(x1869)*(x1873)))+(((r22)*(x1859))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r10)*(x1863)*(x1874)))+(((r12)*(x1870)))+(((IkReal(-1.00000000000000))*(r02)*(sj0)*(x1873)))+(((x1867)*(x1874)))+(((IkReal(-1.00000000000000))*(sj5)*(x1865)*(x1872)))+(((cj5)*(r00)*(x1872))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(x1863)*(x1870)))+(((x1868)*(x1870)))+(((IkReal(-1.00000000000000))*(r02)*(x1876)))+(((IkReal(-1.00000000000000))*(r12)*(x1872)))+(((IkReal(-1.00000000000000))*(r10)*(sj0)*(x1858)*(x1863)))+(((sj0)*(x1858)*(x1867))));
evalcond[3]=((IkReal(1.00000000000000))+(((x1867)*(x1870)))+(((IkReal(-1.00000000000000))*(r12)*(x1876)))+(((IkReal(-1.00000000000000))*(x1865)*(x1875)))+(((IkReal(-1.00000000000000))*(r10)*(x1863)*(x1870)))+(((r00)*(sj0)*(x1871)))+(((r02)*(x1872))));
evalcond[4]=((((cj5)*(r20)*(x1859)))+(((sj2)*(x1864)))+(((IkReal(-1.00000000000000))*(x1860)*(x1861)))+(((IkReal(-1.00000000000000))*(r22)*(x1873)))+(((IkReal(-1.00000000000000))*(x1859)*(x1869)))+(((IkReal(-1.00000000000000))*(x1860)*(x1862)))+(((IkReal(-1.00000000000000))*(sj2)*(x1866))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1860)*(x1866)))+(((x1868)*(x1874)))+(((cj2)*(x1864)))+(((IkReal(-1.00000000000000))*(r00)*(x1863)*(x1874)))+(((x1867)*(x1872)))+(((IkReal(-1.00000000000000))*(r10)*(x1863)*(x1872)))+(((r12)*(sj0)*(x1858)))+(((sj2)*(x1861)))+(((r02)*(x1870)))+(((sj2)*(x1862))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1877=((cj3)*(sj2));
IkReal x1878=((cj3)*(sj1));
IkReal x1879=((cj2)*(sj3));
IkReal x1880=((r21)*(sj5));
IkReal x1881=((IkReal(1.00000000000000))*(cj1));
IkReal x1882=((cj5)*(r20));
IkReal x1883=((IkReal(1.00000000000000))*(cj2));
IkReal x1884=((r22)*(x1881));
IkReal x1885=((cj2)*(x1882));
IkReal x1886=((sj1)*(sj2)*(sj3));
if( IKabs(((gconst2)*(((((IkReal(-1.00000000000000))*(r22)*(x1878)*(x1883)))+(((IkReal(-1.00000000000000))*(x1879)*(x1884)))+(((IkReal(-1.00000000000000))*(x1877)*(x1884)))+(((r22)*(x1886))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((x1878)*(x1885)))+(((IkReal(-1.00000000000000))*(x1882)*(x1886)))+(((IkReal(-1.00000000000000))*(x1878)*(x1880)*(x1883)))+(((cj1)*(x1877)*(x1882)))+(((IkReal(-1.00000000000000))*(x1879)*(x1880)*(x1881)))+(((IkReal(-1.00000000000000))*(x1877)*(x1880)*(x1881)))+(((cj1)*(x1879)*(x1882)))+(((x1880)*(x1886))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst2)*(((((IkReal(-1.00000000000000))*(r22)*(x1878)*(x1883)))+(((IkReal(-1.00000000000000))*(x1879)*(x1884)))+(((IkReal(-1.00000000000000))*(x1877)*(x1884)))+(((r22)*(x1886)))))), ((gconst2)*(((((x1878)*(x1885)))+(((IkReal(-1.00000000000000))*(x1882)*(x1886)))+(((IkReal(-1.00000000000000))*(x1878)*(x1880)*(x1883)))+(((cj1)*(x1877)*(x1882)))+(((IkReal(-1.00000000000000))*(x1879)*(x1880)*(x1881)))+(((IkReal(-1.00000000000000))*(x1877)*(x1880)*(x1881)))+(((cj1)*(x1879)*(x1882)))+(((x1880)*(x1886)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x1887=IKsin(j4);
IkReal x1888=IKcos(j4);
IkReal x1889=((IkReal(1.00000000000000))*(cj1));
IkReal x1890=((cj5)*(r20));
IkReal x1891=((IkReal(1.00000000000000))*(r21)*(sj5));
evalcond[0]=((((r22)*(x1888)))+(((x1887)*(x1890)))+(((IkReal(-1.00000000000000))*(x1887)*(x1891))));
evalcond[1]=((((x1888)*(x1890)))+(((IkReal(-1.00000000000000))*(cj2)*(cj3)*(sj1)))+(((IkReal(-1.00000000000000))*(cj3)*(sj2)*(x1889)))+(((IkReal(-1.00000000000000))*(r22)*(x1887)))+(((IkReal(-1.00000000000000))*(cj2)*(sj3)*(x1889)))+(((IkReal(-1.00000000000000))*(x1888)*(x1891)))+(((sj1)*(sj2)*(sj3))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst5;
IkReal x1892=((IkReal(20000.0000000000))*(cj5));
IkReal x1893=((IkReal(20000.0000000000))*(sj5));
gconst5=IKsign(((((py)*(r00)*(x1893)))+(((IkReal(-1.00000000000000))*(px)*(r10)*(x1893)))+(((py)*(r01)*(x1892)))+(((IkReal(-1.00000000000000))*(px)*(r11)*(x1892)))));
IkReal x1894=((IkReal(1.00000000000000))*(px));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r10)*(sj5)*(x1894)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x1894)))+(((py)*(r00)*(sj5)))+(((cj5)*(py)*(r01))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst6;
IkReal x1895=(sj5)*(sj5);
IkReal x1896=(cj5)*(cj5);
IkReal x1897=((cj4)*(sj5));
IkReal x1898=((IkReal(1.00000000000000))*(r02));
IkReal x1899=((r01)*(r10));
IkReal x1900=((cj4)*(cj5));
IkReal x1901=((sj4)*(x1896));
IkReal x1902=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x1903=((sj4)*(x1895));
gconst6=IKsign(((((r01)*(r12)*(x1900)))+(((IkReal(-1.00000000000000))*(r10)*(x1897)*(x1898)))+(((IkReal(-1.00000000000000))*(r11)*(x1898)*(x1900)))+(((IkReal(-1.00000000000000))*(x1902)*(x1903)))+(((x1899)*(x1903)))+(((r00)*(r12)*(x1897)))+(((x1899)*(x1901)))+(((IkReal(-1.00000000000000))*(x1901)*(x1902)))));
IkReal x1904=(sj5)*(sj5);
IkReal x1905=(cj5)*(cj5);
IkReal x1906=((cj4)*(sj5));
IkReal x1907=((IkReal(1.00000000000000))*(r02));
IkReal x1908=((r01)*(r10));
IkReal x1909=((cj4)*(cj5));
IkReal x1910=((sj4)*(x1905));
IkReal x1911=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x1912=((sj4)*(x1904));
dummyeval[0]=((((x1908)*(x1910)))+(((IkReal(-1.00000000000000))*(x1911)*(x1912)))+(((IkReal(-1.00000000000000))*(r11)*(x1907)*(x1909)))+(((IkReal(-1.00000000000000))*(x1910)*(x1911)))+(((r00)*(r12)*(x1906)))+(((IkReal(-1.00000000000000))*(r10)*(x1906)*(x1907)))+(((x1908)*(x1912)))+(((r01)*(r12)*(x1909))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
if( IKabs(((gconst6)*(((((cj5)*(r11)))+(((r10)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((cj5)*(r01)))+(((r00)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst6)*(((((cj5)*(r11)))+(((r10)*(sj5)))))), ((gconst6)*(((((cj5)*(r01)))+(((r00)*(sj5)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[8];
IkReal x1913=IKcos(j0);
IkReal x1914=IKsin(j0);
IkReal x1915=((cj5)*(r01));
IkReal x1916=((IkReal(0.0946500000000000))*(cj5));
IkReal x1917=((IkReal(1.00000000000000))*(cj2));
IkReal x1918=((cj3)*(sj1));
IkReal x1919=((cj5)*(sj4));
IkReal x1920=((cj1)*(sj3));
IkReal x1921=((sj4)*(sj5));
IkReal x1922=((r02)*(sj4));
IkReal x1923=((cj1)*(cj3));
IkReal x1924=((sj1)*(sj3));
IkReal x1925=((cj4)*(cj5));
IkReal x1926=((cj4)*(sj5));
IkReal x1927=((r10)*(sj5));
IkReal x1928=((cj4)*(r02));
IkReal x1929=((r00)*(sj5));
IkReal x1930=((cj4)*(r12));
IkReal x1931=((r12)*(sj4));
IkReal x1932=((IkReal(1.00000000000000))*(x1913));
IkReal x1933=((IkReal(1.00000000000000))*(x1914));
IkReal x1934=((r11)*(x1913));
IkReal x1935=((sj5)*(x1913));
IkReal x1936=((IkReal(0.0946500000000000))*(x1914));
IkReal x1937=((r11)*(x1914));
IkReal x1938=((r00)*(x1914));
evalcond[0]=((((cj5)*(x1934)))+(((IkReal(-1.00000000000000))*(x1915)*(x1933)))+(((x1913)*(x1927)))+(((IkReal(-1.00000000000000))*(x1929)*(x1933))));
evalcond[1]=((IkReal(0.109150000000000))+(((px)*(x1914)))+(((x1915)*(x1936)))+(((IkReal(-1.00000000000000))*(py)*(x1932)))+(((x1929)*(x1936)))+(((IkReal(-1.00000000000000))*(x1916)*(x1934)))+(((IkReal(-0.0946500000000000))*(x1913)*(x1927))));
evalcond[2]=((((x1913)*(x1931)))+(((IkReal(-1.00000000000000))*(x1922)*(x1933)))+(((IkReal(-1.00000000000000))*(r10)*(x1925)*(x1932)))+(((x1926)*(x1934)))+(((IkReal(-1.00000000000000))*(r01)*(x1926)*(x1933)))+(((x1925)*(x1938))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x1919)*(x1932)))+(((IkReal(-1.00000000000000))*(x1928)*(x1932)))+(((x1921)*(x1937)))+(((IkReal(-1.00000000000000))*(r10)*(x1919)*(x1933)))+(((r01)*(x1913)*(x1921)))+(((IkReal(-1.00000000000000))*(x1930)*(x1933))));
evalcond[4]=((IkReal(1.00000000000000))+(((x1921)*(x1934)))+(((IkReal(-1.00000000000000))*(r01)*(x1921)*(x1933)))+(((IkReal(-1.00000000000000))*(x1930)*(x1932)))+(((IkReal(-1.00000000000000))*(r10)*(x1919)*(x1932)))+(((x1919)*(x1938)))+(((x1914)*(x1928))));
evalcond[5]=((((IkReal(0.392250000000000))*(cj1)*(cj2)))+(((IkReal(-0.0946500000000000))*(x1913)*(x1915)))+(((IkReal(-1.00000000000000))*(px)*(x1932)))+(((IkReal(-0.392250000000000))*(sj1)*(sj2)))+(((IkReal(0.425000000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(x1916)*(x1937)))+(((IkReal(-1.00000000000000))*(py)*(x1933)))+(((IkReal(-1.00000000000000))*(x1927)*(x1936)))+(((IkReal(-0.0946500000000000))*(x1913)*(x1929))));
evalcond[6]=((((x1913)*(x1929)))+(((sj2)*(x1924)))+(((x1913)*(x1915)))+(((IkReal(-1.00000000000000))*(x1917)*(x1920)))+(((cj5)*(x1937)))+(((IkReal(-1.00000000000000))*(x1917)*(x1918)))+(((IkReal(-1.00000000000000))*(sj2)*(x1923)))+(((x1914)*(x1927))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x1917)*(x1923)))+(((sj2)*(x1920)))+(((IkReal(-1.00000000000000))*(r00)*(x1925)*(x1932)))+(((IkReal(-1.00000000000000))*(r10)*(x1925)*(x1933)))+(((r01)*(x1913)*(x1926)))+(((sj2)*(x1918)))+(((cj2)*(x1924)))+(((x1926)*(x1937)))+(((x1913)*(x1922)))+(((x1914)*(x1931))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1939=((IkReal(2183.00000000000))*(sj5));
IkReal x1940=((IkReal(2183.00000000000))*(cj5));
if( IKabs(((gconst5)*(((((r11)*(x1940)))+(((r10)*(x1939))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((r00)*(x1939)))+(((r01)*(x1940))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst5)*(((((r11)*(x1940)))+(((r10)*(x1939)))))), ((gconst5)*(((((r00)*(x1939)))+(((r01)*(x1940)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[8];
IkReal x1941=IKcos(j0);
IkReal x1942=IKsin(j0);
IkReal x1943=((cj5)*(r01));
IkReal x1944=((IkReal(0.0946500000000000))*(cj5));
IkReal x1945=((IkReal(1.00000000000000))*(cj2));
IkReal x1946=((cj3)*(sj1));
IkReal x1947=((cj5)*(sj4));
IkReal x1948=((cj1)*(sj3));
IkReal x1949=((sj4)*(sj5));
IkReal x1950=((r02)*(sj4));
IkReal x1951=((cj1)*(cj3));
IkReal x1952=((sj1)*(sj3));
IkReal x1953=((cj4)*(cj5));
IkReal x1954=((cj4)*(sj5));
IkReal x1955=((r10)*(sj5));
IkReal x1956=((cj4)*(r02));
IkReal x1957=((r00)*(sj5));
IkReal x1958=((cj4)*(r12));
IkReal x1959=((r12)*(sj4));
IkReal x1960=((IkReal(1.00000000000000))*(x1941));
IkReal x1961=((IkReal(1.00000000000000))*(x1942));
IkReal x1962=((r11)*(x1941));
IkReal x1963=((sj5)*(x1941));
IkReal x1964=((IkReal(0.0946500000000000))*(x1942));
IkReal x1965=((r11)*(x1942));
IkReal x1966=((r00)*(x1942));
evalcond[0]=((((x1941)*(x1955)))+(((cj5)*(x1962)))+(((IkReal(-1.00000000000000))*(x1957)*(x1961)))+(((IkReal(-1.00000000000000))*(x1943)*(x1961))));
evalcond[1]=((IkReal(0.109150000000000))+(((x1957)*(x1964)))+(((x1943)*(x1964)))+(((px)*(x1942)))+(((IkReal(-0.0946500000000000))*(x1941)*(x1955)))+(((IkReal(-1.00000000000000))*(py)*(x1960)))+(((IkReal(-1.00000000000000))*(x1944)*(x1962))));
evalcond[2]=((((x1954)*(x1962)))+(((IkReal(-1.00000000000000))*(x1950)*(x1961)))+(((x1941)*(x1959)))+(((IkReal(-1.00000000000000))*(r10)*(x1953)*(x1960)))+(((x1953)*(x1966)))+(((IkReal(-1.00000000000000))*(r01)*(x1954)*(x1961))));
evalcond[3]=((((r01)*(x1941)*(x1949)))+(((IkReal(-1.00000000000000))*(r10)*(x1947)*(x1961)))+(((IkReal(-1.00000000000000))*(x1958)*(x1961)))+(((IkReal(-1.00000000000000))*(r00)*(x1947)*(x1960)))+(((x1949)*(x1965)))+(((IkReal(-1.00000000000000))*(x1956)*(x1960))));
evalcond[4]=((IkReal(1.00000000000000))+(((x1942)*(x1956)))+(((IkReal(-1.00000000000000))*(x1958)*(x1960)))+(((IkReal(-1.00000000000000))*(r10)*(x1947)*(x1960)))+(((IkReal(-1.00000000000000))*(r01)*(x1949)*(x1961)))+(((x1949)*(x1962)))+(((x1947)*(x1966))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1955)*(x1964)))+(((IkReal(-0.0946500000000000))*(x1941)*(x1943)))+(((IkReal(0.392250000000000))*(cj1)*(cj2)))+(((IkReal(-0.0946500000000000))*(x1941)*(x1957)))+(((IkReal(-0.392250000000000))*(sj1)*(sj2)))+(((IkReal(0.425000000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(x1944)*(x1965)))+(((IkReal(-1.00000000000000))*(px)*(x1960)))+(((IkReal(-1.00000000000000))*(py)*(x1961))));
evalcond[6]=((((x1941)*(x1943)))+(((x1941)*(x1957)))+(((cj5)*(x1965)))+(((IkReal(-1.00000000000000))*(sj2)*(x1951)))+(((IkReal(-1.00000000000000))*(x1945)*(x1948)))+(((sj2)*(x1952)))+(((IkReal(-1.00000000000000))*(x1945)*(x1946)))+(((x1942)*(x1955))));
evalcond[7]=((((r01)*(x1941)*(x1954)))+(((sj2)*(x1946)))+(((x1941)*(x1950)))+(((IkReal(-1.00000000000000))*(r10)*(x1953)*(x1961)))+(((x1942)*(x1959)))+(((sj2)*(x1948)))+(((IkReal(-1.00000000000000))*(x1945)*(x1951)))+(((cj2)*(x1952)))+(((IkReal(-1.00000000000000))*(r00)*(x1953)*(x1960)))+(((x1954)*(x1965))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1967=((IkReal(2183.00000000000))*(sj5));
IkReal x1968=((IkReal(2183.00000000000))*(cj5));
if( IKabs(((gconst0)*(((((r10)*(x1967)))+(((r11)*(x1968))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((((r00)*(x1967)))+(((r01)*(x1968))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst0)*(((((r10)*(x1967)))+(((r11)*(x1968)))))), ((gconst0)*(((((r00)*(x1967)))+(((r01)*(x1968)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[4];
IkReal x1969=IKcos(j0);
IkReal x1970=IKsin(j0);
IkReal x1971=((cj5)*(r01));
IkReal x1972=((cj5)*(r11));
IkReal x1973=((r00)*(sj5));
IkReal x1974=((IkReal(1.00000000000000))*(cj2));
IkReal x1975=((sj1)*(sj2));
IkReal x1976=((r10)*(sj5));
IkReal x1977=((IkReal(1.00000000000000))*(x1969));
IkReal x1978=((IkReal(1.00000000000000))*(x1970));
IkReal x1979=((IkReal(0.0946500000000000))*(x1969));
IkReal x1980=((IkReal(0.0946500000000000))*(x1970));
evalcond[0]=((((x1969)*(x1976)))+(((IkReal(-1.00000000000000))*(x1973)*(x1978)))+(((IkReal(-1.00000000000000))*(x1971)*(x1978)))+(((x1969)*(x1972))));
evalcond[1]=((IkReal(0.109150000000000))+(((IkReal(-1.00000000000000))*(x1976)*(x1979)))+(((px)*(x1970)))+(((x1973)*(x1980)))+(((x1971)*(x1980)))+(((IkReal(-1.00000000000000))*(x1972)*(x1979)))+(((IkReal(-1.00000000000000))*(py)*(x1977))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1976)*(x1980)))+(((IkReal(-1.00000000000000))*(x1971)*(x1979)))+(((IkReal(0.392250000000000))*(cj1)*(cj2)))+(((IkReal(-1.00000000000000))*(px)*(x1977)))+(((IkReal(-1.00000000000000))*(py)*(x1978)))+(((IkReal(0.425000000000000))*(cj1)))+(((IkReal(-0.392250000000000))*(x1975)))+(((IkReal(-1.00000000000000))*(x1972)*(x1980)))+(((IkReal(-1.00000000000000))*(x1973)*(x1979))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj3)*(sj1)*(x1974)))+(((x1969)*(x1971)))+(((x1970)*(x1976)))+(((IkReal(-1.00000000000000))*(cj1)*(cj3)*(sj2)))+(((IkReal(-1.00000000000000))*(cj1)*(sj3)*(x1974)))+(((sj3)*(x1975)))+(((x1970)*(x1972)))+(((x1969)*(x1973))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst3;
IkReal x1981=((IkReal(1.00000000000000))*(sj0));
IkReal x1982=((cj5)*(r22));
IkReal x1983=((r21)*(sj5));
IkReal x1984=((IkReal(1.00000000000000))*(cj0));
IkReal x1985=((r22)*(sj5));
IkReal x1986=((cj5)*(r20));
gconst3=IKsign(((((r01)*(sj0)*(x1985)))+(((IkReal(-1.00000000000000))*(r00)*(x1981)*(x1982)))+(((cj0)*(r12)*(x1983)))+(((IkReal(-1.00000000000000))*(r11)*(x1984)*(x1985)))+(((IkReal(-1.00000000000000))*(r12)*(x1984)*(x1986)))+(((cj0)*(r10)*(x1982)))+(((IkReal(-1.00000000000000))*(r02)*(x1981)*(x1983)))+(((r02)*(sj0)*(x1986)))));
IkReal x1987=((IkReal(1.00000000000000))*(sj0));
IkReal x1988=((cj5)*(r22));
IkReal x1989=((r21)*(sj5));
IkReal x1990=((IkReal(1.00000000000000))*(cj0));
IkReal x1991=((r22)*(sj5));
IkReal x1992=((cj5)*(r20));
dummyeval[0]=((((r02)*(sj0)*(x1992)))+(((cj0)*(r12)*(x1989)))+(((IkReal(-1.00000000000000))*(r02)*(x1987)*(x1989)))+(((cj0)*(r10)*(x1988)))+(((IkReal(-1.00000000000000))*(r00)*(x1987)*(x1988)))+(((r01)*(sj0)*(x1991)))+(((IkReal(-1.00000000000000))*(r11)*(x1990)*(x1991)))+(((IkReal(-1.00000000000000))*(r12)*(x1990)*(x1992))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign((((((r21)*(r21))*((sj5)*(sj5))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20))))));
dummyeval[0]=(((((r21)*(r21))*((sj5)*(sj5))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1993=((cj3)*(sj2));
IkReal x1994=((cj2)*(sj3));
IkReal x1995=((r21)*(sj5));
IkReal x1996=((IkReal(1.00000000000000))*(cj1));
IkReal x1997=((cj5)*(r20));
IkReal x1998=((r22)*(x1996));
IkReal x1999=((sj1)*(sj2)*(sj3));
IkReal x2000=((cj2)*(cj3)*(sj1));
if( IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(x1993)*(x1998)))+(((r22)*(x1999)))+(((IkReal(-1.00000000000000))*(x1994)*(x1998)))+(((IkReal(-1.00000000000000))*(r22)*(x2000))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(x1993)*(x1995)*(x1996)))+(((x1995)*(x1999)))+(((IkReal(-1.00000000000000))*(x1994)*(x1995)*(x1996)))+(((IkReal(-1.00000000000000))*(x1997)*(x1999)))+(((IkReal(-1.00000000000000))*(x1995)*(x2000)))+(((cj1)*(x1994)*(x1997)))+(((x1997)*(x2000)))+(((cj1)*(x1993)*(x1997))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst4)*(((((IkReal(-1.00000000000000))*(x1993)*(x1998)))+(((r22)*(x1999)))+(((IkReal(-1.00000000000000))*(x1994)*(x1998)))+(((IkReal(-1.00000000000000))*(r22)*(x2000)))))), ((gconst4)*(((((IkReal(-1.00000000000000))*(x1993)*(x1995)*(x1996)))+(((x1995)*(x1999)))+(((IkReal(-1.00000000000000))*(x1994)*(x1995)*(x1996)))+(((IkReal(-1.00000000000000))*(x1997)*(x1999)))+(((IkReal(-1.00000000000000))*(x1995)*(x2000)))+(((cj1)*(x1994)*(x1997)))+(((x1997)*(x2000)))+(((cj1)*(x1993)*(x1997)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x2001=IKsin(j4);
IkReal x2002=IKcos(j4);
IkReal x2003=((IkReal(1.00000000000000))*(cj2));
IkReal x2004=((cj3)*(sj1));
IkReal x2005=((cj1)*(sj3));
IkReal x2006=((IkReal(1.00000000000000))*(cj5));
IkReal x2007=((sj1)*(sj3));
IkReal x2008=((IkReal(1.00000000000000))*(r01));
IkReal x2009=((cj1)*(cj3));
IkReal x2010=((r11)*(sj5));
IkReal x2011=((r01)*(sj5));
IkReal x2012=((r21)*(sj5));
IkReal x2013=((cj0)*(x2001));
IkReal x2014=((cj5)*(x2001));
IkReal x2015=((sj0)*(x2002));
IkReal x2016=((IkReal(1.00000000000000))*(x2001));
IkReal x2017=((cj0)*(x2002));
IkReal x2018=((sj0)*(sj5)*(x2001));
IkReal x2019=((IkReal(1.00000000000000))*(x2017));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2012)*(x2016)))+(((r22)*(x2002)))+(((r20)*(x2014))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r10)*(x2006)*(x2017)))+(((x2010)*(x2017)))+(((IkReal(-1.00000000000000))*(r02)*(sj0)*(x2016)))+(((r12)*(x2013)))+(((IkReal(-1.00000000000000))*(sj5)*(x2008)*(x2015)))+(((cj5)*(r00)*(x2015))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r12)*(x2015)))+(((sj0)*(x2001)*(x2010)))+(((IkReal(-1.00000000000000))*(r02)*(x2019)))+(((IkReal(-1.00000000000000))*(r00)*(x2006)*(x2013)))+(((IkReal(-1.00000000000000))*(r10)*(sj0)*(x2001)*(x2006)))+(((x2011)*(x2013))));
evalcond[3]=((IkReal(1.00000000000000))+(((x2010)*(x2013)))+(((IkReal(-1.00000000000000))*(r12)*(x2019)))+(((IkReal(-1.00000000000000))*(r10)*(x2006)*(x2013)))+(((IkReal(-1.00000000000000))*(x2008)*(x2018)))+(((r02)*(x2015)))+(((r00)*(sj0)*(x2014))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r22)*(x2016)))+(((IkReal(-1.00000000000000))*(sj2)*(x2009)))+(((IkReal(-1.00000000000000))*(x2002)*(x2012)))+(((cj5)*(r20)*(x2002)))+(((IkReal(-1.00000000000000))*(x2003)*(x2005)))+(((IkReal(-1.00000000000000))*(x2003)*(x2004)))+(((sj2)*(x2007))));
evalcond[5]=((((r02)*(x2013)))+(((IkReal(-1.00000000000000))*(r00)*(x2006)*(x2017)))+(((cj2)*(x2007)))+(((sj2)*(x2005)))+(((r12)*(sj0)*(x2001)))+(((x2010)*(x2015)))+(((IkReal(-1.00000000000000))*(r10)*(x2006)*(x2015)))+(((sj2)*(x2004)))+(((x2011)*(x2017)))+(((IkReal(-1.00000000000000))*(x2003)*(x2009))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((gconst3)*(r22))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((r21)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r20))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst3)*(r22)), ((gconst3)*(((((r21)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r20)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x2020=IKsin(j4);
IkReal x2021=IKcos(j4);
IkReal x2022=((IkReal(1.00000000000000))*(cj2));
IkReal x2023=((cj3)*(sj1));
IkReal x2024=((cj1)*(sj3));
IkReal x2025=((IkReal(1.00000000000000))*(cj5));
IkReal x2026=((sj1)*(sj3));
IkReal x2027=((IkReal(1.00000000000000))*(r01));
IkReal x2028=((cj1)*(cj3));
IkReal x2029=((r11)*(sj5));
IkReal x2030=((r01)*(sj5));
IkReal x2031=((r21)*(sj5));
IkReal x2032=((cj0)*(x2020));
IkReal x2033=((cj5)*(x2020));
IkReal x2034=((sj0)*(x2021));
IkReal x2035=((IkReal(1.00000000000000))*(x2020));
IkReal x2036=((cj0)*(x2021));
IkReal x2037=((sj0)*(sj5)*(x2020));
IkReal x2038=((IkReal(1.00000000000000))*(x2036));
evalcond[0]=((((r22)*(x2021)))+(((IkReal(-1.00000000000000))*(x2031)*(x2035)))+(((r20)*(x2033))));
evalcond[1]=((((r12)*(x2032)))+(((IkReal(-1.00000000000000))*(r02)*(sj0)*(x2035)))+(((IkReal(-1.00000000000000))*(r10)*(x2025)*(x2036)))+(((x2029)*(x2036)))+(((IkReal(-1.00000000000000))*(sj5)*(x2027)*(x2034)))+(((cj5)*(r00)*(x2034))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r12)*(x2034)))+(((sj0)*(x2020)*(x2029)))+(((IkReal(-1.00000000000000))*(r00)*(x2025)*(x2032)))+(((IkReal(-1.00000000000000))*(r02)*(x2038)))+(((x2030)*(x2032)))+(((IkReal(-1.00000000000000))*(r10)*(sj0)*(x2020)*(x2025))));
evalcond[3]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x2027)*(x2037)))+(((IkReal(-1.00000000000000))*(r10)*(x2025)*(x2032)))+(((IkReal(-1.00000000000000))*(r12)*(x2038)))+(((r00)*(sj0)*(x2033)))+(((r02)*(x2034)))+(((x2029)*(x2032))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x2021)*(x2031)))+(((IkReal(-1.00000000000000))*(sj2)*(x2028)))+(((IkReal(-1.00000000000000))*(r22)*(x2035)))+(((IkReal(-1.00000000000000))*(x2022)*(x2023)))+(((cj5)*(r20)*(x2021)))+(((IkReal(-1.00000000000000))*(x2022)*(x2024)))+(((sj2)*(x2026))));
evalcond[5]=((((sj2)*(x2024)))+(((cj2)*(x2026)))+(((IkReal(-1.00000000000000))*(r10)*(x2025)*(x2034)))+(((x2030)*(x2036)))+(((x2029)*(x2034)))+(((IkReal(-1.00000000000000))*(r00)*(x2025)*(x2036)))+(((IkReal(-1.00000000000000))*(x2022)*(x2028)))+(((sj2)*(x2023)))+(((r02)*(x2032)))+(((r12)*(sj0)*(x2020))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}
    }
}
return solutions.GetNumSolutions()>0;
}

template<int D>
static inline bool matrixinverse(IkReal* A)
{
    int n = D;
    int info;
    IkReal IKFAST_ALIGNED16(work[D*D*(D-1)]);
    int ipiv[D];
    dgetrf_(&n, &n, A, &n, &ipiv[0], &info);
    if( info != 0 ) {
        return false;
    }
    int worksize=D*D*(D-1);
    dgetri_(&n, A, &n, &ipiv[0], &work[0], &worksize, &info);
    return info==0;
}

/// \brief Solve the det Ax^2+Bx+C = 0 problem using the Manocha and Canny method (1994)
///
/// matcoeffs is of length 54*3, for 3 matrices
static inline void solvedialyticpoly12qep(const IkReal* matcoeffs, IkReal* rawroots, int& numroots)
{
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    IkReal IKFAST_ALIGNED16(M[24*24]) = {0};
    IkReal IKFAST_ALIGNED16(A[12*12]);
    IkReal IKFAST_ALIGNED16(work[24*24*23]);
    int ipiv[12];
    int info, coeffindex;
    const int worksize=24*24*23;
    const int matrixdim = 12;
    const int matrixdim2 = 24;
    numroots = 0;
    // first setup M = [0 I; -C -B] and A
    coeffindex = 0;
    for(int j = 0; j < 6; ++j) {
        for(int k = 0; k < 9; ++k) {
            M[matrixdim+(j+6)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+3)] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 6; ++j) {
        for(int k = 0; k < 9; ++k) {
            M[matrixdim+(j+6)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+3)+matrixdim*2*matrixdim] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 6; ++j) {
        for(int k = 0; k < 9; ++k) {
            A[(j+6)+matrixdim*k] = A[j+matrixdim*(k+3)] = matcoeffs[coeffindex++];
        }
        for(int k = 0; k < 3; ++k) {
            A[j+matrixdim*k] = A[(j+6)+matrixdim*(k+9)] = 0;
        }
    }
    const IkReal lfpossibilities[4][4] = {{1,-1,1,1},{1,0,-2,1},{1,1,2,0},{1,-1,4,1}};
    int lfindex = -1;
    bool bsingular = true;
    do {
        dgetrf_(&matrixdim,&matrixdim,A,&matrixdim,&ipiv[0],&info);
        if( info == 0 ) {
            bsingular = false;
            for(int j = 0; j < matrixdim; ++j) {
                if( IKabs(A[j*matrixdim+j]) < 100*tol ) {
                    bsingular = true;
                    break;
                }
            }
            if( !bsingular ) {
                break;
            }
        }
        if( lfindex == 3 ) {
            break;
        }
        // transform by the linear functional
        lfindex++;
        const IkReal* lf = lfpossibilities[lfindex];
        // have to reinitialize A
        coeffindex = 0;
        for(int j = 0; j < 6; ++j) {
            for(int k = 0; k < 9; ++k) {
                IkReal a = matcoeffs[coeffindex+108], b = matcoeffs[coeffindex+54], c = matcoeffs[coeffindex];
                A[(j+6)+matrixdim*k] = A[j+matrixdim*(k+3)] = lf[0]*lf[0]*a+lf[0]*lf[2]*b+lf[2]*lf[2]*c;
                M[matrixdim+(j+6)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+3)] = -(lf[1]*lf[1]*a + lf[1]*lf[3]*b + lf[3]*lf[3]*c);
                M[matrixdim+(j+6)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+3)+matrixdim*2*matrixdim] = -(2*lf[0]*lf[1]*a + (lf[0]*lf[3]+lf[1]*lf[2])*b + 2*lf[2]*lf[3]*c);
                coeffindex++;
            }
            for(int k = 0; k < 3; ++k) {
                A[j+matrixdim*k] = A[(j+6)+matrixdim*(k+9)] = 0;
            }
        }
    } while(lfindex<4);

    if( bsingular ) {
        return;
    }
    dgetrs_("No transpose", &matrixdim, &matrixdim2, A, &matrixdim, &ipiv[0], &M[matrixdim], &matrixdim2, &info);
    if( info != 0 ) {
        return;
    }

    // set identity in upper corner
    for(int j = 0; j < matrixdim; ++j) {
        M[matrixdim*2*matrixdim+j+matrixdim*2*j] = 1;
    }
    IkReal IKFAST_ALIGNED16(wr[24]);
    IkReal IKFAST_ALIGNED16(wi[24]);
    IkReal IKFAST_ALIGNED16(vr[24*24]);
    int one=1;
    dgeev_("N", "V", &matrixdim2, M, &matrixdim2, wr, wi,NULL, &one, vr, &matrixdim2, work, &worksize, &info);
    if( info != 0 ) {
        return;
    }
    IkReal Breal[matrixdim-1];
    for(int i = 0; i < matrixdim2; ++i) {
        if( IKabs(wi[i]) < tol*100 ) {
            IkReal* ev = vr+matrixdim2*i;
            if( IKabs(wr[i]) > 1 ) {
                ev += matrixdim;
            }
            // consistency has to be checked!!
            if( IKabs(ev[0]) < tol ) {
                continue;
            }
            IkReal iconst = 1/ev[0];
            for(int j = 1; j < matrixdim; ++j) {
                Breal[j-1] = ev[j]*iconst;
            }
            if( checkconsistency12(Breal) ) {
                if( lfindex >= 0 ) {
                    const IkReal* lf = lfpossibilities[lfindex];
                    rawroots[numroots++] = (wr[i]*lf[0]+lf[1])/(wr[i]*lf[2]+lf[3]);
                }
                else {
                    rawroots[numroots++] = wr[i];
                }
                bool bsmall0=IKabs(ev[0]) > IKabs(ev[3]);
                bool bsmall1=IKabs(ev[0]) > IKabs(ev[1]);
                if( bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[3]/ev[0];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[5]/ev[2];
                    rawroots[numroots++] = ev[2]/ev[1];
                }
                else if( !bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[9]/ev[6];
                    rawroots[numroots++] = ev[10]/ev[9];
                }
                else if( !bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[11]/ev[8];
                    rawroots[numroots++] = ev[11]/ev[10];
                }
            }
        }
    }
}
static inline bool checkconsistency12(const IkReal* Breal)
{
    IkReal norm = 0.1;
    for(int i = 0; i < 11; ++i) {
        norm += IKabs(Breal[i]);
    }
    IkReal tol = 1e-6*norm; // have to increase the threshold since many computations are involved
    return IKabs(Breal[0]*Breal[0]-Breal[1]) < tol && IKabs(Breal[0]*Breal[2]-Breal[3]) < tol && IKabs(Breal[1]*Breal[2]-Breal[4]) < tol && IKabs(Breal[2]*Breal[2]-Breal[5]) < tol && IKabs(Breal[0]*Breal[5]-Breal[6]) < tol && IKabs(Breal[1]*Breal[5]-Breal[7]) < tol && IKabs(Breal[2]*Breal[5]-Breal[8]) < tol && IKabs(Breal[0]*Breal[8]-Breal[9]) < tol && IKabs(Breal[1]*Breal[8]-Breal[10]) < tol;
}
};


/// solves the inverse kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API const char* GetKinematicsHash() { return "<robot:genericrobot - ur5_iml (4ee71013185970f8d90d44053c770a36)>"; }

IKFAST_API const char* GetIkFastVersion() { return IKFAST_STRINGIZE(IKFAST_VERSION); }

#ifdef IKFAST_NAMESPACE
} // end namespace
#endif

#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>
#ifdef IKFAST_NAMESPACE
using namespace IKFAST_NAMESPACE;
#endif
int main(int argc, char** argv)
{
    if( argc != 12+GetNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",GetNumFreeParameters());
        return 1;
    }

    IkSolutionList<IkReal> solutions;
    std::vector<IkReal> vfree(GetNumFreeParameters());
    IkReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    for(std::size_t i = 0; i < vfree.size(); ++i)
        vfree[i] = atof(argv[13+i]);
    bool bSuccess = ComputeIk(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, solutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)solutions.GetNumSolutions());
    std::vector<IkReal> solvalues(GetNumJoints());
    for(std::size_t i = 0; i < solutions.GetNumSolutions(); ++i) {
        const IkSolutionBase<IkReal>& sol = solutions.GetSolution(i);
        printf("sol%d (free=%d): ", (int)i, (int)sol.GetFree().size());
        std::vector<IkReal> vsolfree(sol.GetFree().size());
        sol.GetSolution(&solvalues[0],vsolfree.size()>0?&vsolfree[0]:NULL);
        for( std::size_t j = 0; j < solvalues.size(); ++j)
            printf("%.15f, ", solvalues[j]);
        printf("\n");
    }
    return 0;
}

#endif
